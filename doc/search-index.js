var searchIndex = {};
searchIndex['lib'] = {"items":[[0,"","lib","The main crate for Iron."],[11,"new","typemap","Create a new, empty TypeMap.",0],[11,"insert","","Insert a value into the map with a specified key type.",0],[11,"find","","Find a value in the map and get a reference to it.",0],[11,"find_mut","","Find a value in the map and get a mutable reference to it.",0],[11,"get","","Find a value in the map and get a reference to it.",0],[11,"get_mut","","Find a value in the map and get a mutable reference to it.",0],[11,"contains","","Check if a key has an associated value stored in the map.",0],[11,"remove","","Remove a value from the map.",0],[11,"entry","","Get the given key's corresponding entry in the map for in-place manipulation.",0],[11,"data","","Read the underlying HashMap",0],[11,"data_mut","","Get a mutable reference to the underlying HashMap",0],[11,"len","","Get the number of values stored in the map.",0],[11,"is_empty","","Return true if the map contains no values.",0],[11,"clear","","Remove all entries from the map.",0],[11,"default","","",0],[11,"get","","Get a reference to the entry's value.",1],[11,"get_mut","","Get a mutable reference to the entry's value.",1],[11,"into_mut","","Transform the entry into a mutable reference with the same lifetime as the map.",1],[11,"insert","","Set the entry's value and return the previous value.",1],[11,"remove","","Move the entry's value out of the map, consuming the entry.",1],[11,"insert","","Set the entry's value and return a mutable reference to it.",2],[3,"TypeMap","lib","A map keyed by types."],[0,"headers","","Headers container, and common header fields."],[0,"parsing","lib::headers","Utility functions for Header implementations."],[5,"from_one_raw_str","lib::headers::parsing","Reads a single raw string when parsing a header"],[5,"from_comma_delimited","","Reads a comma-delimited raw header into a Vec."],[5,"from_one_comma_delimited","","Reads a comma-delimited raw string into a Vec."],[5,"fmt_comma_delimited","","Format an array into a comma-delimited string."],[5,"tm_from_str","","Get a Tm from HTTP date formats."],[8,"Header","lib::headers","A trait for any object that will represent a header field and value."],[10,"header_name","","Returns the name of the header field this belongs to.",3],[10,"parse_header","","Parse a header from a raw stream of bytes.",3],[8,"HeaderFormat","","A trait for any object that will represent a header field and value."],[10,"fmt_header","","Format a header to be output into a TcpStream.",4],[11,"new","hyper::header","Creates a new, empty headers map.",5],[11,"set","","Set a header field to the corresponding value.",5],[11,"get_raw","","Access the raw value of a header.",5],[11,"set_raw","","Set the raw value of a header, bypassing any typed headers.",5],[11,"remove_raw","","Remove a header set by set_raw",5],[11,"get","","Get a reference to the header field's value, if it exists.",5],[11,"get_mut","","Get a mutable reference to the header field's value, if it exists.",5],[11,"has","","Returns a boolean of whether a certain header is in the map.",5],[11,"remove","","Removes a header from the map, if one existed.\nReturns true if a header has been removed.",5],[11,"iter","","Returns an iterator over the header fields.",5],[11,"len","","Returns the number of headers in the map.",5],[11,"clear","","Remove all headers from the map.",5],[11,"headers","hyper::client::request","Read the Request headers.",6],[11,"method","","Read the Request method.",6],[11,"new","","Create a new client request.",6],[11,"with_connector","","Create a new client request with a specific underlying NetworkStream.",6],[11,"start","","Consume a Fresh Request, writing the headers and method,\nreturning a Streaming Request.",6],[11,"headers_mut","","Get a mutable reference to the Request headers.",6],[11,"send","","Completes writing the request, and returns a response to read from.",6],[11,"write","","",6],[11,"flush","","",6],[11,"new","hyper::client::response","Creates a new response from a server.",7],[11,"status_raw","","Get the raw status code and reason.",7],[11,"into_inner","","Consumes the Request to return the NetworkStream underneath.",7],[11,"read","","",7],[11,"new","hyper::client","Create a new Client.",8],[11,"set_ssl_verifier","","Set the SSL verifier callback for use with OpenSSL.",8],[11,"with_connector","","Create a new client with a specific connector.",8],[11,"set_redirect_policy","","Set the RedirectPolicy.",8],[11,"get","","Execute a Get request.",8],[11,"head","","Execute a Head request.",8],[11,"post","","Execute a Post request.",8],[11,"put","","Execute a Put request.",8],[11,"delete","","Execute a Delete request.",8],[11,"request","","Build a new request using this Client.",8],[11,"body","","Set a request body to be sent.",9],[11,"headers","","Add additional headers to the request.",9],[11,"header","","Add an individual new header to the request.",9],[11,"send","","Execute this request and receive a Response back.",9],[11,"read","","",10],[11,"into_body","","",10],[11,"into_url","url","",11],[11,"clone","hyper::client","",12],[11,"default","","",12],[11,"fmt","hyper::method","",13],[11,"hash","","",13],[11,"eq","","",13],[11,"ne","","",13],[11,"clone","","",13],[11,"safe","","Whether a method is considered \"safe\", meaning the request is\nessentially read-only.",13],[11,"idempotent","","Whether a method is considered \"idempotent\", meaning the request has\nthe same result is executed multiple times.",13],[6,"Err","lib::headers",""],[11,"from_str","hyper::method","",13],[11,"fmt","","",13],[11,"fmt","hyper::header::common::access_control::allow_headers","",14],[11,"eq","","",14],[11,"ne","","",14],[11,"clone","","",14],[11,"header_name","","",14],[11,"parse_header","","",14],[11,"fmt_header","","",14],[11,"fmt","hyper::header::common::access_control::allow_methods","",15],[11,"eq","","",15],[11,"ne","","",15],[11,"clone","","",15],[11,"header_name","","",15],[11,"parse_header","","",15],[11,"fmt_header","","",15],[11,"fmt","hyper::header::common::access_control::allow_origin","",16],[11,"eq","","",16],[11,"ne","","",16],[11,"clone","","",16],[11,"header_name","","",16],[11,"parse_header","","",16],[11,"fmt_header","","",16],[11,"fmt","hyper::header::common::access_control::max_age","",17],[11,"eq","","",17],[11,"ne","","",17],[11,"clone","","",17],[11,"header_name","","",17],[11,"parse_header","","",17],[11,"fmt_header","","",17],[11,"fmt","hyper::header::common::access_control::request_headers","",18],[11,"eq","","",18],[11,"ne","","",18],[11,"clone","","",18],[11,"header_name","","",18],[11,"parse_header","","",18],[11,"fmt_header","","",18],[11,"fmt","hyper::header::common::access_control::request_method","",19],[11,"eq","","",19],[11,"ne","","",19],[11,"clone","","",19],[11,"header_name","","",19],[11,"parse_header","","",19],[11,"fmt_header","","",19],[11,"fmt","hyper::header::common::accept","",20],[11,"eq","","",20],[11,"ne","","",20],[11,"clone","","",20],[6,"Target","lib::headers",""],[11,"deref","hyper::header::common::accept","",20],[11,"deref_mut","","",20],[11,"header_name","","",20],[11,"parse_header","","",20],[11,"fmt_header","","",20],[11,"fmt","","",20],[11,"fmt","hyper::header::common::accept_charset","",21],[11,"eq","","",21],[11,"ne","","",21],[11,"clone","","",21],[6,"Target","lib::headers",""],[11,"deref","hyper::header::common::accept_charset","",21],[11,"deref_mut","","",21],[11,"header_name","","",21],[11,"parse_header","","",21],[11,"fmt_header","","",21],[11,"fmt","","",21],[11,"fmt","hyper::header::common::accept_encoding","",22],[11,"eq","","",22],[11,"ne","","",22],[11,"clone","","",22],[6,"Target","lib::headers",""],[11,"deref","hyper::header::common::accept_encoding","",22],[11,"deref_mut","","",22],[11,"header_name","","",22],[11,"parse_header","","",22],[11,"fmt_header","","",22],[11,"fmt","","",22],[11,"fmt","hyper::header::common::accept_language","",23],[11,"eq","","",23],[11,"ne","","",23],[11,"clone","","",23],[6,"Err","lib::headers",""],[11,"from_str","hyper::header::common::accept_language","",23],[11,"fmt","","",23],[11,"fmt","","",24],[11,"eq","","",24],[11,"ne","","",24],[11,"clone","","",24],[6,"Target","lib::headers",""],[11,"deref","hyper::header::common::accept_language","",24],[11,"deref_mut","","",24],[11,"header_name","","",24],[11,"parse_header","","",24],[11,"fmt_header","","",24],[11,"fmt","","",24],[11,"fmt","hyper::header::common::allow","",25],[11,"eq","","",25],[11,"ne","","",25],[11,"clone","","",25],[6,"Target","lib::headers",""],[11,"deref","hyper::header::common::allow","",25],[11,"deref_mut","","",25],[11,"header_name","","",25],[11,"parse_header","","",25],[11,"fmt_header","","",25],[11,"fmt","","",25],[11,"fmt","hyper::header::common::authorization","",26],[11,"eq","","",26],[11,"ne","","",26],[11,"clone","","",26],[6,"Target","lib::headers",""],[11,"deref","hyper::header::common::authorization","",26],[11,"deref_mut","","",26],[11,"header_name","","",26],[11,"parse_header","","",26],[11,"fmt_header","","",26],[11,"scheme","collections::string","",27],[11,"fmt_scheme","","",27],[11,"fmt","hyper::header::common::authorization","",28],[11,"eq","","",28],[11,"ne","","",28],[11,"clone","","",28],[11,"scheme","","",28],[11,"fmt_scheme","","",28],[6,"Err","lib::headers",""],[11,"from_str","hyper::header::common::authorization","",28],[11,"fmt","hyper::header::common::cache_control","",29],[11,"clone","","",29],[11,"eq","","",29],[11,"ne","","",29],[6,"Target","lib::headers",""],[11,"deref","hyper::header::common::cache_control","",29],[11,"deref_mut","","",29],[11,"header_name","","",29],[11,"parse_header","","",29],[11,"fmt_header","","",29],[11,"fmt","","",30],[11,"clone","","",30],[11,"eq","","",30],[11,"ne","","",30],[11,"fmt","","",30],[6,"Err","lib::headers",""],[11,"from_str","hyper::header::common::cache_control","",30],[11,"fmt","hyper::header::common::cookie","",31],[11,"eq","","",31],[11,"ne","","",31],[11,"clone","","",31],[6,"Target","lib::headers",""],[11,"deref","hyper::header::common::cookie","",31],[11,"deref_mut","","",31],[11,"header_name","","",31],[11,"parse_header","","",31],[11,"fmt_header","","",31],[11,"to_cookie_jar","","This method can be used to create CookieJar that can be used\nto manipulate cookies and create a corresponding `SetCookie` header afterwards.",31],[11,"from_cookie_jar","","Extracts all cookies from `CookieJar` and creates Cookie header.\nUseful for clients.",31],[11,"fmt","hyper::header::common::connection","",32],[11,"eq","","",32],[11,"ne","","",32],[11,"clone","","",32],[6,"Target","lib::headers",""],[11,"deref","hyper::header::common::connection","",32],[11,"deref_mut","","",32],[11,"fmt","","",33],[11,"eq","","",33],[11,"ne","","",33],[11,"clone","","",33],[6,"Err","lib::headers",""],[11,"from_str","hyper::header::common::connection","",33],[11,"fmt","","",33],[11,"header_name","","",32],[11,"parse_header","","",32],[11,"fmt_header","","",32],[11,"fmt","hyper::header::common::content_length","",34],[11,"eq","","",34],[11,"ne","","",34],[11,"clone","","",34],[6,"Target","lib::headers",""],[11,"deref","hyper::header::common::content_length","",34],[11,"deref_mut","","",34],[11,"header_name","","",34],[11,"parse_header","","",34],[11,"fmt_header","","",34],[11,"fmt","","",34],[11,"fmt","hyper::header::common::content_type","",35],[11,"eq","","",35],[11,"ne","","",35],[11,"clone","","",35],[6,"Target","lib::headers",""],[11,"deref","hyper::header::common::content_type","",35],[11,"deref_mut","","",35],[11,"header_name","","",35],[11,"parse_header","","",35],[11,"fmt_header","","",35],[11,"fmt","","",35],[11,"fmt","hyper::header::common::date","",36],[11,"clone","","",36],[11,"eq","","",36],[11,"ne","","",36],[6,"Target","lib::headers",""],[11,"deref","hyper::header::common::date","",36],[11,"deref_mut","","",36],[11,"header_name","","",36],[11,"parse_header","","",36],[11,"fmt_header","","",36],[6,"Err","lib::headers",""],[11,"from_str","hyper::header::common::date","",36],[11,"fmt","hyper::header::common::etag","",37],[11,"eq","","",37],[11,"ne","","",37],[11,"clone","","",37],[6,"Target","lib::headers",""],[11,"deref","hyper::header::common::etag","",37],[11,"deref_mut","","",37],[11,"header_name","","",37],[11,"parse_header","","",37],[11,"fmt_header","","",37],[11,"fmt","hyper::header::common::expires","",38],[11,"clone","","",38],[11,"eq","","",38],[11,"ne","","",38],[6,"Target","lib::headers",""],[11,"deref","hyper::header::common::expires","",38],[11,"deref_mut","","",38],[11,"header_name","","",38],[11,"parse_header","","",38],[11,"fmt_header","","",38],[6,"Err","lib::headers",""],[11,"from_str","hyper::header::common::expires","",38],[11,"fmt","hyper::header::common::host","",39],[11,"eq","","",39],[11,"ne","","",39],[11,"clone","","",39],[11,"header_name","","",39],[11,"parse_header","","",39],[11,"fmt_header","","",39],[11,"fmt","hyper::header::common::if_match","",40],[11,"eq","","",40],[11,"ne","","",40],[11,"clone","","",40],[11,"header_name","","",40],[11,"parse_header","","",40],[11,"fmt_header","","",40],[11,"fmt","hyper::header::common::last_modified","",41],[11,"clone","","",41],[11,"eq","","",41],[11,"ne","","",41],[6,"Target","lib::headers",""],[11,"deref","hyper::header::common::last_modified","",41],[11,"deref_mut","","",41],[11,"header_name","","",41],[11,"parse_header","","",41],[11,"fmt_header","","",41],[6,"Err","lib::headers",""],[11,"from_str","hyper::header::common::last_modified","",41],[11,"fmt","hyper::header::common::if_modified_since","",42],[11,"clone","","",42],[11,"eq","","",42],[11,"ne","","",42],[6,"Target","lib::headers",""],[11,"deref","hyper::header::common::if_modified_since","",42],[11,"deref_mut","","",42],[11,"header_name","","",42],[11,"parse_header","","",42],[11,"fmt_header","","",42],[6,"Err","lib::headers",""],[11,"from_str","hyper::header::common::if_modified_since","",42],[11,"fmt","hyper::header::common::if_none_match","",43],[11,"eq","","",43],[11,"ne","","",43],[11,"clone","","",43],[11,"header_name","","",43],[11,"parse_header","","",43],[11,"fmt_header","","",43],[11,"fmt","hyper::header::common::if_unmodified_since","",44],[11,"clone","","",44],[11,"eq","","",44],[11,"ne","","",44],[6,"Target","lib::headers",""],[11,"deref","hyper::header::common::if_unmodified_since","",44],[11,"deref_mut","","",44],[11,"header_name","","",44],[11,"parse_header","","",44],[11,"fmt_header","","",44],[6,"Err","lib::headers",""],[11,"from_str","hyper::header::common::if_unmodified_since","",44],[11,"fmt","hyper::header::common::location","",45],[11,"eq","","",45],[11,"ne","","",45],[11,"clone","","",45],[6,"Target","lib::headers",""],[11,"deref","hyper::header::common::location","",45],[11,"deref_mut","","",45],[11,"header_name","","",45],[11,"parse_header","","",45],[11,"fmt_header","","",45],[11,"fmt","","",45],[11,"fmt","hyper::header::common::pragma","",46],[11,"eq","","",46],[11,"ne","","",46],[11,"clone","","",46],[11,"header_name","","",46],[11,"parse_header","","",46],[11,"fmt_header","","",46],[11,"fmt","hyper::header::common::referer","",47],[11,"eq","","",47],[11,"ne","","",47],[11,"clone","","",47],[6,"Target","lib::headers",""],[11,"deref","hyper::header::common::referer","",47],[11,"deref_mut","","",47],[11,"header_name","","",47],[11,"parse_header","","",47],[11,"fmt_header","","",47],[11,"fmt","","",47],[11,"fmt","hyper::header::common::server","",48],[11,"eq","","",48],[11,"ne","","",48],[11,"clone","","",48],[6,"Target","lib::headers",""],[11,"deref","hyper::header::common::server","",48],[11,"deref_mut","","",48],[11,"header_name","","",48],[11,"parse_header","","",48],[11,"fmt_header","","",48],[11,"fmt","","",48],[11,"fmt","hyper::header::common::set_cookie","",49],[11,"eq","","",49],[11,"ne","","",49],[11,"clone","","",49],[6,"Target","lib::headers",""],[11,"deref","hyper::header::common::set_cookie","",49],[11,"deref_mut","","",49],[11,"header_name","","",49],[11,"parse_header","","",49],[11,"fmt_header","","",49],[11,"from_cookie_jar","","Use this to create SetCookie header from CookieJar using\ncalculated delta.",49],[11,"apply_to_cookie_jar","","Use this on client to apply changes from SetCookie to CookieJar.\nNote that this will `panic!` if `CookieJar` is not root.",49],[11,"fmt","hyper::header::common::transfer_encoding","",50],[11,"eq","","",50],[11,"ne","","",50],[11,"clone","","",50],[6,"Target","lib::headers",""],[11,"deref","hyper::header::common::transfer_encoding","",50],[11,"deref_mut","","",50],[11,"header_name","","",50],[11,"parse_header","","",50],[11,"fmt_header","","",50],[11,"fmt","","",50],[11,"fmt","hyper::header::common::upgrade","",51],[11,"eq","","",51],[11,"ne","","",51],[11,"clone","","",51],[6,"Target","lib::headers",""],[11,"deref","hyper::header::common::upgrade","",51],[11,"deref_mut","","",51],[11,"fmt","","",52],[11,"eq","","",52],[11,"ne","","",52],[11,"clone","","",52],[6,"Err","lib::headers",""],[11,"from_str","hyper::header::common::upgrade","",52],[11,"fmt","","",52],[11,"header_name","","",51],[11,"parse_header","","",51],[11,"fmt_header","","",51],[11,"fmt","hyper::header::common::user_agent","",53],[11,"eq","","",53],[11,"ne","","",53],[11,"clone","","",53],[6,"Target","lib::headers",""],[11,"deref","hyper::header::common::user_agent","",53],[11,"deref_mut","","",53],[11,"header_name","","",53],[11,"parse_header","","",53],[11,"fmt_header","","",53],[11,"fmt","","",53],[11,"fmt","hyper::header::common::vary","",54],[11,"eq","","",54],[11,"ne","","",54],[11,"clone","","",54],[11,"header_name","","",54],[11,"parse_header","","",54],[11,"fmt_header","","",54],[11,"new","hyper::header::internals::cell","",55],[11,"set","","",55],[11,"get_mut","","",55],[6,"Target","lib::headers",""],[11,"deref","hyper::header::internals::cell","",55],[11,"clone","","",55],[11,"fmt","","",56],[11,"clone","","",56],[11,"new","","",57],[11,"get","","",57],[11,"get_mut","","",57],[11,"insert","","",57],[11,"one","","",57],[11,"clone","","",57],[11,"clone","hyper::header::internals::item","",58],[11,"new_raw","","",58],[11,"new_typed","","",58],[11,"mut_raw","","",58],[11,"raw","","",58],[11,"typed","","",58],[11,"typed_mut","","",58],[11,"fmt","","",58],[11,"eq","hyper::header::shared::charset","",59],[11,"ne","","",59],[11,"fmt","","",59],[11,"clone","","",59],[11,"fmt","","",59],[6,"Err","lib::headers",""],[11,"from_str","hyper::header::shared::charset","",59],[11,"fmt","hyper::header::shared::encoding","",60],[11,"eq","","",60],[11,"ne","","",60],[11,"clone","","",60],[11,"fmt","","",60],[6,"Err","lib::headers",""],[11,"from_str","hyper::header::shared::encoding","",60],[11,"fmt","hyper::header::shared::entity","",61],[11,"eq","","",61],[11,"ne","","",61],[11,"clone","","",61],[11,"fmt","","",61],[6,"Err","lib::headers",""],[11,"from_str","hyper::header::shared::entity","",61],[11,"partial_cmp","hyper::header::shared::quality_item","",62],[11,"lt","","",62],[11,"le","","",62],[11,"gt","","",62],[11,"ge","","",62],[11,"eq","","",62],[11,"ne","","",62],[11,"cmp","","",62],[11,"fmt","","",62],[11,"clone","","",62],[11,"fmt","","",62],[11,"from_i64","","",62],[11,"from_u64","","",62],[11,"from_f64","","",62],[11,"to_i64","","",62],[11,"to_u64","","",62],[11,"to_f64","","",62],[11,"default","","",62],[11,"fmt","","",63],[11,"eq","","",63],[11,"ne","","",63],[11,"clone","","",63],[11,"new","","Creates a new `QualityItem` from an item and a quality.\nThe item can be of any type.\nThe quality should be a value in the range [0, 1].",63],[11,"partial_cmp","","",63],[11,"fmt","","",63],[6,"Err","lib::headers",""],[11,"from_str","hyper::header::shared::quality_item","",63],[11,"clone","alloc::boxed","",64],[11,"clone","hyper::header","",5],[11,"fmt","","",5],[11,"fmt","","",5],[6,"Item","lib::headers",""],[11,"next","hyper::header","",65],[11,"is","","Check if a HeaderView is a certain Header.",66],[11,"name","","Get the Header name as a slice.",66],[11,"value","","Cast the value to a certain Header type.",66],[11,"value_string","","Get just the header value as a String.",66],[11,"fmt","","",66],[11,"fmt","","",66],[11,"extend","","",5],[11,"from_iter","","",5],[11,"fmt","","",67],[11,"fmt","","",67],[11,"into_inner","hyper::http","Unwraps this HttpReader and returns the underlying Reader.",68],[11,"read","","",68],[11,"into_inner","","Unwraps the HttpWriter and returns the underlying Writer.",69],[11,"get_ref","","Access the inner Writer.",69],[11,"get_mut","","Access the inner Writer mutably.",69],[11,"end","","Ends the HttpWriter, and returns the underlying Writer.",69],[11,"write","","",69],[11,"flush","","",69],[11,"fmt","","",70],[11,"eq","","",70],[11,"ne","","",70],[11,"clone","","",70],[6,"Item","lib::headers",""],[11,"next","hyper::net","",71],[11,"fmt","alloc::boxed","",64],[11,"clone","","",64],[11,"is","lib","Is the underlying type in this trait object a T?",72],[11,"downcast_ref","","If the underlying type is T, get a reference to the contained data.",72],[11,"downcast_mut","","If the underlying type is T, get a mutable reference to the contained\ndata.",72],[11,"downcast","","If the underlying type is T, extract it.",72],[11,"clone","hyper::net","",73],[11,"http","","Start listening to an address over HTTP.",73],[11,"https","","Start listening to an address over HTTPS.",73],[6,"Stream","lib::headers",""],[11,"accept","hyper::net","",73],[11,"socket_addr","","",73],[11,"clone","","",74],[11,"read","","",74],[11,"write","","",74],[11,"flush","","",74],[11,"clone","","",75],[11,"read","","",75],[11,"write","","",75],[11,"flush","","",75],[11,"peer_addr","","",75],[6,"Stream","lib::headers",""],[11,"connect","hyper::net","",76],[11,"new","hyper::server::request","Create a new Request, reading the StartLine and Headers so they are\nimmediately useful.",77],[11,"deconstruct","","Deconstruct a Request into its constituent parts.",77],[11,"read","","",77],[11,"status","hyper::server::response","The status of this response.",78],[11,"headers","","The headers of this response.",78],[11,"construct","","Construct a Response from its constituent parts.",78],[11,"deconstruct","","Deconstruct this Response into its constituent parts.",78],[11,"new","","Creates a new Response that can be used to write to a network stream.",78],[11,"start","","Consume this Response<Fresh>, writing the Headers and Status and creating a Response<Streaming>",78],[11,"status_mut","","Get a mutable reference to the status.",78],[11,"headers_mut","","Get a mutable reference to the Headers.",78],[11,"end","","Flushes all writing of a response to the client.",78],[11,"write","","",78],[11,"flush","","",78],[11,"new","hyper::server::listener","Create a thread pool to manage the acceptor.",79],[11,"accept","","Runs the acceptor pool. Blocks until the acceptors are closed.",79],[11,"drop","","",80],[11,"new","hyper::server","",81],[11,"http","","Creates a new server that will handle `HttpStream`s.",81],[11,"https","","Creates a new server that will handler `HttpStreams`s using a TLS connection.",81],[11,"listen_threads","","Binds to a socket, and starts handling connections using a task pool.",81],[11,"listen","","Binds to a socket and starts handling connections.",81],[11,"with_listener","","Creates a new server that will handle `HttpStream`s.",81],[11,"close","","Stop the server from listening to its socket address.",82],[11,"canonical_reason","hyper::status","Get the standardised `reason-phrase` for this status code.",83],[11,"class","","Determine the class of a status code, based on its first digit.",83],[11,"is_informational","","Check if class is Informational.",83],[11,"is_success","","Check if class is Success.",83],[11,"is_redirection","","Check if class is Redirection.",83],[11,"is_client_error","","Check if class is ClientError.",83],[11,"is_server_error","","Check if class is ServerError.",83],[11,"is_strange_status","","Check if class is NoClass",83],[11,"fmt","","",83],[11,"fmt","","",83],[11,"eq","","",83],[11,"clone","","",83],[11,"from_i64","","",83],[11,"from_u64","","",83],[11,"partial_cmp","","",83],[11,"cmp","","",83],[11,"to_i64","","",83],[11,"to_u64","","",83],[11,"cmp","","",84],[11,"partial_cmp","","",84],[11,"lt","","",84],[11,"le","","",84],[11,"gt","","",84],[11,"ge","","",84],[11,"eq","","",84],[11,"ne","","",84],[11,"clone","","",84],[11,"default_code","","Get the default status code for the class.",84],[11,"to_i64","","",84],[11,"to_u64","","",84],[11,"clone","hyper::uri","",85],[11,"eq","","",85],[11,"ne","","",85],[11,"fmt","","",85],[11,"fmt","hyper::version","",86],[11,"partial_cmp","","",86],[11,"lt","","",86],[11,"le","","",86],[11,"gt","","",86],[11,"ge","","",86],[11,"eq","","",86],[11,"ne","","",86],[11,"fmt","","",86],[11,"clone","hyper","",87],[11,"eq","","",87],[11,"ne","","",87],[11,"fmt","","",87],[11,"fmt","","",87],[11,"description","","",87],[11,"cause","","",87],[11,"from_error","","",87],[11,"from_error","","",87],[11,"fmt","mime","",88],[11,"eq","","",88],[11,"ne","","",88],[11,"clone","","",88],[11,"fmt","","",89],[11,"clone","","",89],[11,"eq","","",89],[11,"fmt","","",89],[6,"Err","lib::headers",""],[11,"from_str","mime","",89],[11,"fmt","","",90],[11,"clone","","",90],[11,"eq","","",90],[11,"fmt","","",90],[6,"Err","lib::headers",""],[11,"from_str","mime","",90],[11,"fmt","","",91],[11,"clone","","",91],[11,"eq","","",91],[11,"fmt","","",91],[6,"Err","lib::headers",""],[11,"from_str","mime","",91],[11,"fmt","","",92],[11,"clone","","",92],[11,"eq","","",92],[11,"fmt","","",92],[6,"Err","lib::headers",""],[11,"from_str","mime","",92],[11,"fmt","","",88],[6,"Err","lib::headers",""],[11,"from_str","mime","",88],[3,"Headers","lib::headers","A map of header fields on requests and responses."],[3,"HeadersItems","","An `Iterator` over the fields in a `Headers` map."],[3,"HeaderView","","Returned with the `HeadersItems` iterator."],[3,"HeaderFormatter","","A wrapper around any Header with a Display impl that calls fmt_header."],[5,"q","","Convenience function to create a `Quality` fromt a float."],[3,"AccessControlRequestHeaders","","The `Access-Control-Request-Headers` request header,\npart of [CORS](http://www.w3.org/TR/cors/)."],[3,"Expires","","The `Expires` header field."],[3,"Connection","","The `Connection` header."],[3,"QualityItem","","Represents an item with a quality value as defined in\n[RFC7231](https://tools.ietf.org/html/rfc7231#section-5.3.1)."],[12,"item","","The actual contents of the field.",63],[12,"quality","","The quality (client or server preference) for the value.",63],[4,"ConnectionOption","","Values that can be in the `Connection` header."],[13,"KeepAlive","","The `keep-alive` connection value.",33],[13,"Close","","The `close` connection value.",33],[13,"ConnectionHeader","","Values in the Connection header that are supposed to be names of other Headers.",33],[3,"UserAgent","","The `User-Agent` header field."],[3,"AcceptCharset","","The `Accept-Charset` header"],[3,"CacheControl","","The Cache-Control header."],[5,"qitem","","Convinience function to wrap a value in a `QualityItem`\nSets `q` to the default 1.0"],[4,"Encoding","","A value to represent an encoding used in `Transfer-Encoding`\nor `Accept-Encoding` header."],[13,"Chunked","","The `chunked` encoding.",60],[13,"Gzip","","The `gzip` encoding.",60],[13,"Deflate","","The `deflate` encoding.",60],[13,"Compress","","The `compress` encoding.",60],[13,"Identity","","The `identity` encoding.",60],[13,"EncodingExt","","Some other encoding that is less common, can be any String.",60],[3,"EntityTag","","An entity tag"],[12,"weak","","Weakness indicator for the tag",61],[12,"tag","","The opaque string in between the DQUOTEs",61],[4,"CacheDirective","","CacheControl contains a list of these directives."],[13,"NoCache","","\"no-cache\"",30],[13,"NoStore","","\"no-store\"",30],[13,"NoTransform","","\"no-transform\"",30],[13,"OnlyIfCached","","\"only-if-cached\"",30],[13,"MaxAge","","\"max-age=delta\"",30],[13,"MaxStale","","\"max-stale=delta\"",30],[13,"MinFresh","","\"min-fresh=delta\"",30],[13,"MustRevalidate","","\"must-revalidate\"",30],[13,"Public","","\"public\"",30],[13,"Private","","\"private\"",30],[13,"ProxyRevalidate","","\"proxy-revalidate\"",30],[13,"SMaxAge","","\"s-maxage=delta\"",30],[13,"Extension","","Extension directives. Optionally include an argument.",30],[3,"Basic","","Credential holder for Basic Authentication"],[12,"username","","The username as a possibly empty string",28],[12,"password","","The password. `None` if the `:` delimiter character was not\npart of the parsed input.",28],[3,"Cookie","","The `Cookie` header. Defined in [RFC6265](tools.ietf.org/html/rfc6265#section-5.4):"],[3,"Upgrade","","The `Upgrade` header."],[4,"Charset","","A Mime charset."],[13,"Us_Ascii","","US ASCII",59],[13,"Iso_8859_1","","ISO-8859-1",59],[13,"Iso_8859_2","","ISO-8859-2",59],[13,"Iso_8859_3","","ISO-8859-3",59],[13,"Iso_8859_4","","ISO-8859-4",59],[13,"Iso_8859_5","","ISO-8859-5",59],[13,"Iso_8859_6","","ISO-8859-6",59],[13,"Iso_8859_7","","ISO-8859-7",59],[13,"Iso_8859_8","","ISO-8859-8",59],[13,"Iso_8859_9","","ISO-8859-9",59],[13,"Iso_8859_10","","ISO-8859-10",59],[13,"Shift_Jis","","Shift_JIS",59],[13,"Euc_Jp","","EUC-JP",59],[13,"Iso_2022_Kr","","ISO-2022-KR",59],[13,"Euc_Kr","","EUC-KR",59],[13,"Iso_2022_Jp","","ISO-2022-JP",59],[13,"Iso_2022_Jp_2","","ISO-2022-JP-2",59],[13,"Iso_8859_6_E","","ISO-8859-6-E",59],[13,"Iso_8859_6_I","","ISO-8859-6-I",59],[13,"Iso_8859_8_E","","ISO-8859-8-E",59],[13,"Iso_8859_8_I","","ISO-8859-8-I",59],[13,"Gb2312","","GB2312",59],[13,"Big5","","Big5",59],[13,"Koi8_R","","KOI8-R",59],[13,"Ext","","An arbitrary charset specified as a string",59],[3,"AccessControlRequestMethod","","The `Access-Control-Request-Method` request header,\npart of [CORS](http://www.w3.org/TR/cors/)."],[3,"ContentLength","","The `Content-Length` header."],[3,"ContentType","","The `Content-Type` header."],[3,"Quality","","Represents a quality used in quality values."],[3,"Server","","The `Server` header field."],[3,"Date","","The `Date` header field."],[4,"IfMatch","","The `If-Match` header"],[13,"Any","","This corresponds to '*'.",40],[13,"EntityTags","","The header field names which will influence the response representation.",40],[3,"Location","","The `Location` header."],[3,"Allow","","The `Allow` header.\nSee also https://tools.ietf.org/html/rfc7231#section-7.4.1"],[3,"IfUnmodifiedSince","","The `If-Unmodified-Since` header field."],[3,"SetCookie","","The `Set-Cookie` header"],[3,"AccessControlMaxAge","","The `Access-Control-Max-Age` response header,\npart of [CORS](http://www.w3.org/TR/cors/)."],[3,"LastModified","","The `LastModified` header field."],[3,"Referer","","The `Referer` header."],[3,"Etag","","The `Etag` header."],[3,"Authorization","","The `Authorization` header field."],[3,"AccessControlAllowHeaders","","The `Access-Control-Allow-Headers` response header,\npart of [CORS](http://www.w3.org/TR/cors/)."],[4,"AccessControlAllowOrigin","","The `Access-Control-Allow-Origin` response header,\npart of [CORS](http://www.w3.org/TR/cors/)."],[13,"AllowStar","","Allow all origins",16],[13,"AllowOrigin","","Allow one particular origin",16],[3,"Host","","The `Host` header."],[12,"hostname","","The hostname, such a example.domain.",39],[12,"port","","An optional port number.",39],[3,"TransferEncoding","","The `Transfer-Encoding` header."],[3,"AcceptLanguage","","The `Accept-Language` header"],[4,"Pragma","","The `Pragma` header defined by HTTP/1.0."],[13,"NoCache","","Corresponds to the `no-cache` value.",46],[13,"Ext","","Every value other than `no-cache`.",46],[4,"IfNoneMatch","","The `If-None-Match` header defined by HTTP/1.1."],[13,"Any","","This corresponds to '*'.",43],[13,"EntityTags","","The header field names which will influence the response representation.",43],[3,"AcceptEncoding","","The `Accept-Encoding` header"],[3,"IfModifiedSince","","The `If-Modified-Since` header field."],[4,"Protocol","","Protocol values that can appear in the Upgrade header."],[13,"WebSocket","","The websocket protocol.",52],[13,"ProtocolExt","","Some other less common protocol.",52],[4,"Vary","","The `Allow` header.\nSee also https://tools.ietf.org/html/rfc7231#section-7.1.4"],[13,"Any","","This corresponds to '*'.",54],[13,"Headers","","The header field names which will influence the response representation.",54],[8,"Scheme","","An Authorization scheme to be used in the header."],[10,"scheme","","An optional Scheme name.",93],[10,"fmt_scheme","","Format the Scheme data into a header value.",93],[3,"Accept","","The `Accept` header."],[3,"AccessControlAllowMethods","","The `Access-Control-Allow-Methods` response header,\npart of [CORS](http://www.w3.org/TR/cors/)."],[3,"Headers","lib","A map of header fields on requests and responses."],[8,"Plugin","","An interface for plugins that cache values between calls."],[10,"get","","Return a copy of the plugin's produced value.",94],[10,"get_ref","","Return a reference to the plugin's produced value.",94],[10,"get_mut","","Return a mutable reference to the plugin's produced value.",94],[10,"compute","","Create and evaluate a once-off instance of a plugin.",94],[8,"Set","","A trait providing the set and set_mut methods for all types."],[10,"set","","Modify self using the provided modifier.",95],[10,"set_mut","","Modify self through a mutable reference with the provided modifier.",95],[8,"Error","","An extension to std::error::Error which provides dynamic downcasting of\nerrors for use in highly generic contexts."],[0,"mime","",""],[3,"Mime","lib::mime","Mime, or Media Type. Encapsulates common registers types."],[4,"TopLevel","",""],[13,"Star","","",89],[13,"Text","","",89],[13,"Image","","",89],[13,"Audio","","",89],[13,"Video","","",89],[13,"Application","","",89],[13,"Multipart","","",89],[13,"Message","","",89],[13,"Model","","",89],[13,"Ext","","",89],[4,"SubLevel","",""],[13,"Star","","",90],[13,"Plain","","",90],[13,"Html","","",90],[13,"Xml","","",90],[13,"Javascript","","",90],[13,"Css","","",90],[13,"Json","","",90],[13,"WwwFormUrlEncoded","","",90],[13,"FormData","","",90],[13,"Png","","",90],[13,"Gif","","",90],[13,"Bmp","","",90],[13,"Jpeg","","",90],[13,"Ext","","",90],[4,"Attr","",""],[13,"Charset","","",91],[13,"Q","","",91],[13,"Ext","","",91],[4,"Value","",""],[13,"Utf8","","",92],[13,"Ext","","",92],[6,"Param","",""],[3,"Url","lib","HTTP/HTTPS URL type for Iron."],[12,"scheme","","The lower-cased scheme of the URL, typically \"http\" or \"https\".",96],[12,"host","","The host field of the URL, probably a domain.",96],[12,"port","","The connection port.",96],[12,"path","","The URL path, the resource to be accessed.",96],[12,"username","","The URL username field, from the userinfo section of the URL.",96],[12,"password","","The URL password field, from the userinfo section of the URL.",96],[12,"query","","The URL query string.",96],[12,"fragment","","The URL fragment.",96],[3,"Iron","","The primary entrance point to `Iron`, a `struct` to instantiate a new server."],[12,"handler","","Iron contains a `Handler`, which it uses to create responses for client\nrequests.",97],[12,"addr","","Once listening, the local address that this server is bound to.",97],[12,"protocol","","Once listening, the protocol used to serve content.",97],[4,"Protocol","","Protocol used to serve content. Future versions of Iron may add new protocols\nto this enum. Thus you should not exhaustively match on its variants."],[13,"Http","","Plaintext HTTP/1",98],[13,"Https","","HTTP/1 over SSL/TLS",98],[12,"certificate","lib::Protocol","Path to SSL certificate file",98],[12,"key","","Path to SSL private key file",98],[0,"error","lib","Iron's error type and associated utilities."],[8,"Error","lib::error","An extension to std::error::Error which provides dynamic downcasting of\nerrors for use in highly generic contexts."],[6,"HttpResult","",""],[4,"HttpError","","A set of errors that can occur parsing HTTP streams."],[13,"HttpMethodError","","An invalid `Method`, such as `GE,T`.",87],[13,"HttpUriError","","An invalid `RequestUri`, such as `exam ple.domain`.",87],[13,"HttpVersionError","","An invalid `HttpVersion`, such as `HTP/1.1`",87],[13,"HttpHeaderError","","An invalid `Header`.",87],[13,"HttpStatusError","","An invalid `Status`, such as `1337 ELITE`.",87],[13,"HttpIoError","","An `IoError` that occured while trying to read or write to a network stream.",87],[3,"IronError","","The type of Errors inside and when using Iron."],[12,"error","","The underlying error",99],[12,"response","","What to do about this error.",99],[11,"fmt","","",99],[11,"new","","Create a new IronError from an error and a modifier.",99],[11,"fmt","","",99],[11,"description","","",99],[11,"cause","","",99],[0,"prelude","lib","A module meant to be glob imported when using Iron, for instance:"],[8,"Set","lib::prelude","A trait providing the set and set_mut methods for all types."],[10,"set","","Modify self using the provided modifier.",95],[10,"set_mut","","Modify self through a mutable reference with the provided modifier.",95],[8,"Pluggable","","An interface for plugins that cache values between calls."],[10,"get","","Return a copy of the plugin's produced value.",94],[10,"get_ref","","Return a reference to the plugin's produced value.",94],[10,"get_mut","","Return a mutable reference to the plugin's produced value.",94],[10,"compute","","Create and evaluate a once-off instance of a plugin.",94],[0,"typemap","lib","Re-exports from the TypeMap crate."],[3,"TypeMap","lib::typemap","A map keyed by types."],[8,"Key","","This trait defines the relationship between keys and values in a TypeMap."],[16,"Value","lib::typemap::Key",""],[0,"modifier","lib","Re-exports from the Modifier crate."],[0,"status","","Status Codes"],[4,"Status","lib::status","An HTTP status code (`status-code` in RFC 7230 et al.)."],[13,"Continue","","100 Continue\n[[RFC7231, Section 6.2.1](https://tools.ietf.org/html/rfc7231#section-6.2.1)]",83],[13,"SwitchingProtocols","","101 Switching Protocols\n[[RFC7231, Section 6.2.2](https://tools.ietf.org/html/rfc7231#section-6.2.2)]",83],[13,"Processing","","102 Processing\n[[RFC2518](https://tools.ietf.org/html/rfc2518)]",83],[13,"Ok","","200 OK\n[[RFC7231, Section 6.3.1](https://tools.ietf.org/html/rfc7231#section-6.3.1)]",83],[13,"Created","","201 Created\n[[RFC7231, Section 6.3.2](https://tools.ietf.org/html/rfc7231#section-6.3.2)]",83],[13,"Accepted","","202 Accepted\n[[RFC7231, Section 6.3.3](https://tools.ietf.org/html/rfc7231#section-6.3.3)]",83],[13,"NonAuthoritativeInformation","","203 Non-Authoritative Information\n[[RFC7231, Section 6.3.4](https://tools.ietf.org/html/rfc7231#section-6.3.4)]",83],[13,"NoContent","","204 No Content\n[[RFC7231, Section 6.3.5](https://tools.ietf.org/html/rfc7231#section-6.3.5)]",83],[13,"ResetContent","","205 Reset Content\n[[RFC7231, Section 6.3.6](https://tools.ietf.org/html/rfc7231#section-6.3.6)]",83],[13,"PartialContent","","206 Partial Content\n[[RFC7233, Section 4.1](https://tools.ietf.org/html/rfc7233#section-4.1)]",83],[13,"MultiStatus","","207 Multi-Status\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",83],[13,"AlreadyReported","","208 Already Reported\n[[RFC5842](https://tools.ietf.org/html/rfc5842)]",83],[13,"ImUsed","","226 IM Used\n[[RFC3229](https://tools.ietf.org/html/rfc3229)]",83],[13,"MultipleChoices","","300 Multiple Choices\n[[RFC7231, Section 6.4.1](https://tools.ietf.org/html/rfc7231#section-6.4.1)]",83],[13,"MovedPermanently","","301 Moved Permanently\n[[RFC7231, Section 6.4.2](https://tools.ietf.org/html/rfc7231#section-6.4.2)]",83],[13,"Found","","302 Found\n[[RFC7231, Section 6.4.3](https://tools.ietf.org/html/rfc7231#section-6.4.3)]",83],[13,"SeeOther","","303 See Other\n[[RFC7231, Section 6.4.4](https://tools.ietf.org/html/rfc7231#section-6.4.4)]",83],[13,"NotModified","","304 Not Modified\n[[RFC7232, Section 4.1](https://tools.ietf.org/html/rfc7232#section-4.1)]",83],[13,"UseProxy","","305 Use Proxy\n[[RFC7231, Section 6.4.5](https://tools.ietf.org/html/rfc7231#section-6.4.5)]",83],[13,"TemporaryRedirect","","307 Temporary Redirect\n[[RFC7231, Section 6.4.7](https://tools.ietf.org/html/rfc7231#section-6.4.7)]",83],[13,"PermanentRedirect","","308 Permanent Redirect\n[[RFC7238](https://tools.ietf.org/html/rfc7238)]",83],[13,"BadRequest","","400 Bad Request\n[[RFC7231, Section 6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)]",83],[13,"Unauthorized","","401 Unauthorized\n[[RFC7235, Section 3.1](https://tools.ietf.org/html/rfc7235#section-3.1)]",83],[13,"PaymentRequired","","402 Payment Required\n[[RFC7231, Section 6.5.2](https://tools.ietf.org/html/rfc7231#section-6.5.2)]",83],[13,"Forbidden","","403 Forbidden\n[[RFC7231, Section 6.5.3](https://tools.ietf.org/html/rfc7231#section-6.5.3)]",83],[13,"NotFound","","404 Not Found\n[[RFC7231, Section 6.5.4](https://tools.ietf.org/html/rfc7231#section-6.5.4)]",83],[13,"MethodNotAllowed","","405 Method Not Allowed\n[[RFC7231, Section 6.5.5](https://tools.ietf.org/html/rfc7231#section-6.5.5)]",83],[13,"NotAcceptable","","406 Not Acceptable\n[[RFC7231, Section 6.5.6](https://tools.ietf.org/html/rfc7231#section-6.5.6)]",83],[13,"ProxyAuthenticationRequired","","407 Proxy Authentication Required\n[[RFC7235, Section 3.2](https://tools.ietf.org/html/rfc7235#section-3.2)]",83],[13,"RequestTimeout","","408 Request Timeout\n[[RFC7231, Section 6.5.7](https://tools.ietf.org/html/rfc7231#section-6.5.7)]",83],[13,"Conflict","","409 Conflict\n[[RFC7231, Section 6.5.8](https://tools.ietf.org/html/rfc7231#section-6.5.8)]",83],[13,"Gone","","410 Gone\n[[RFC7231, Section 6.5.9](https://tools.ietf.org/html/rfc7231#section-6.5.9)]",83],[13,"LengthRequired","","411 Length Required\n[[RFC7231, Section 6.5.10](https://tools.ietf.org/html/rfc7231#section-6.5.10)]",83],[13,"PreconditionFailed","","412 Precondition Failed\n[[RFC7232, Section 4.2](https://tools.ietf.org/html/rfc7232#section-4.2)]",83],[13,"PayloadTooLarge","","413 Payload Too Large\n[[RFC7231, Section 6.5.11](https://tools.ietf.org/html/rfc7231#section-6.5.11)]",83],[13,"UriTooLong","","414 URI Too Long\n[[RFC7231, Section 6.5.12](https://tools.ietf.org/html/rfc7231#section-6.5.12)]",83],[13,"UnsupportedMediaType","","415 Unsupported Media Type\n[[RFC7231, Section 6.5.13](https://tools.ietf.org/html/rfc7231#section-6.5.13)]",83],[13,"RangeNotSatisfiable","","416 Range Not Satisfiable\n[[RFC7233, Section 4.4](https://tools.ietf.org/html/rfc7233#section-4.4)]",83],[13,"ExpectationFailed","","417 Expectation Failed\n[[RFC7231, Section 6.5.14](https://tools.ietf.org/html/rfc7231#section-6.5.14)]",83],[13,"ImATeapot","","418 I'm a teapot\n[curiously, not registered by IANA, but [RFC2324](https://tools.ietf.org/html/rfc2324)]",83],[13,"UnprocessableEntity","","422 Unprocessable Entity\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",83],[13,"Locked","","423 Locked\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",83],[13,"FailedDependency","","424 Failed Dependency\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",83],[13,"UpgradeRequired","","426 Upgrade Required\n[[RFC7231, Section 6.5.15](https://tools.ietf.org/html/rfc7231#section-6.5.15)]",83],[13,"PreconditionRequired","","428 Precondition Required\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",83],[13,"TooManyRequests","","429 Too Many Requests\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",83],[13,"RequestHeaderFieldsTooLarge","","431 Request Header Fields Too Large\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",83],[13,"InternalServerError","","500 Internal Server Error\n[[RFC7231, Section 6.6.1](https://tools.ietf.org/html/rfc7231#section-6.6.1)]",83],[13,"NotImplemented","","501 Not Implemented\n[[RFC7231, Section 6.6.2](https://tools.ietf.org/html/rfc7231#section-6.6.2)]",83],[13,"BadGateway","","502 Bad Gateway\n[[RFC7231, Section 6.6.3](https://tools.ietf.org/html/rfc7231#section-6.6.3)]",83],[13,"ServiceUnavailable","","503 Service Unavailable\n[[RFC7231, Section 6.6.4](https://tools.ietf.org/html/rfc7231#section-6.6.4)]",83],[13,"GatewayTimeout","","504 Gateway Timeout\n[[RFC7231, Section 6.6.5](https://tools.ietf.org/html/rfc7231#section-6.6.5)]",83],[13,"HttpVersionNotSupported","","505 HTTP Version Not Supported\n[[RFC7231, Section 6.6.6](https://tools.ietf.org/html/rfc7231#section-6.6.6)]",83],[13,"VariantAlsoNegotiates","","506 Variant Also Negotiates\n[[RFC2295](https://tools.ietf.org/html/rfc2295)]",83],[13,"InsufficientStorage","","507 Insufficient Storage\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",83],[13,"LoopDetected","","508 Loop Detected\n[[RFC5842](https://tools.ietf.org/html/rfc5842)]",83],[13,"NotExtended","","510 Not Extended\n[[RFC2774](https://tools.ietf.org/html/rfc2774)]",83],[13,"NetworkAuthenticationRequired","","511 Network Authentication Required\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",83],[13,"Unregistered","","A status code not in the IANA HTTP status code registry or very well known",83],[0,"method","lib","HTTP Methods"],[4,"Method","lib::method","The Request Method (VERB)"],[13,"Options","","OPTIONS",13],[13,"Get","","GET",13],[13,"Post","","POST",13],[13,"Put","","PUT",13],[13,"Delete","","DELETE",13],[13,"Head","","HEAD",13],[13,"Trace","","TRACE",13],[13,"Connect","","CONNECT",13],[13,"Patch","","PATCH",13],[13,"Extension","","Method extentions. An example would be `let m = Extension(\"FOO\".to_string())`.",13],[0,"middleware","lib","Iron's Middleware and Handler System"],[3,"Chain","lib::middleware","The middleware chain used in Iron."],[8,"Handler","","`Handler`s are responsible for handling requests by creating Responses from Requests."],[10,"handle","","Produce a `Response` from a Request, with the possibility of error.",100],[8,"BeforeMiddleware","","`BeforeMiddleware` are fired before a `Handler` is called inside of a Chain."],[11,"before","","Do whatever work this middleware should do with a `Request` object.",101],[11,"catch","","Respond to an error thrown by a previous `BeforeMiddleware`.",101],[8,"AfterMiddleware","","`AfterMiddleware` are fired after a `Handler` is called inside of a Chain."],[11,"after","","Do whatever post-processing this middleware should do.",102],[11,"catch","","Respond to an error thrown by previous `AfterMiddleware`, the `Handler`,\nor a `BeforeMiddleware`.",102],[8,"AroundMiddleware","","AroundMiddleware are used to wrap and replace the `Handler` in a `Chain`."],[10,"around","","Produce a `Handler` from this `AroundMiddleware` given another `Handler`.",103],[11,"new","","Construct a new ChainBuilder from a `Handler`.",104],[11,"link","","Link both a before and after middleware to the chain at once.",104],[11,"link_before","","Link a `BeforeMiddleware` to the `Chain`, after all previously linked\n`BeforeMiddleware`.",104],[11,"link_after","","Link a `AfterMiddleware` to the `Chain`, after all previously linked\n`AfterMiddleware`.",104],[11,"around","","Apply an `AroundMiddleware` to the `Handler` in this `Chain`.",104],[11,"handle","","",104],[11,"handle","alloc::boxed","",64],[11,"before","","",64],[11,"catch","","",64],[11,"after","","",64],[11,"catch","","",64],[0,"response","lib","Iron's HTTP Response representation and associated methods."],[3,"HttpResponse","lib::response","The outgoing half for a Tcp connection, created by a `Server` and given to a `Handler`."],[12,"version","","The HTTP version of this response.",78],[3,"Response","","The response representation given to `Middleware`"],[12,"status","","The response status-code.",105],[12,"headers","","The headers of the response.",105],[12,"extensions","","A TypeMap to be used as an extensible storage for data\nassociated with this Response.",105],[12,"body","","The body of the response.",105],[11,"new","","Construct a blank Response",105],[11,"with","","Construct a Response with the specified modifier pre-applied.",105],[11,"fmt","","",105],[11,"fmt","","",105],[11,"extensions","","",105],[11,"extensions_mut","","",105],[0,"request","lib","Iron's HTTP Request representation and associated methods."],[3,"HttpRequest","lib::request","A request bundles several parts of an incoming `NetworkStream`, given to a `Handler`."],[12,"remote_addr","","The IP address of the remote connection.",77],[12,"method","","The `Method`, such as `Get`, `Post`, etc.",77],[12,"headers","","The headers of the incoming request.",77],[12,"uri","","The target request-uri for this request.",77],[12,"version","","The version of HTTP for this request.",77],[3,"Request","","The `Request` given to all `Middleware`."],[12,"url","","The requested URL.",106],[12,"remote_addr","","The originating address of the request.",106],[12,"local_addr","","The local address of the request.",106],[12,"headers","","The request headers.",106],[12,"body","","The request body as a reader.",106],[12,"method","","The request method.",106],[12,"extensions","","Extensible storage for data passed between middleware.",106],[3,"Body","","The body of an Iron request,"],[11,"fmt","lib","",96],[11,"clone","","",96],[11,"eq","","",96],[11,"ne","","",96],[11,"parse","","Create a URL from a string.",96],[11,"from_generic_url","","Create a `Url` from a `rust-url` `Url`.",96],[11,"into_generic_url","","Create a `rust-url` `Url` from a `Url`.",96],[11,"fmt","","",96],[11,"fmt","lib::request","",106],[11,"from_http","","Create a request from an HttpRequest.",106],[11,"new","","Create a new reader for use in an Iron request from a hyper HttpReader.",107],[11,"read","","",107],[11,"extensions","","",106],[11,"extensions_mut","","",106],[0,"modifiers","lib","Defines a series of convenience modifiers for editing Responses"],[3,"Header","lib::modifiers","A modifier for changing headers on requests and responses."],[3,"Redirect","","A modifier for creating redirect responses."],[11,"modify","lib::mime","",88],[11,"modify","alloc::boxed","",64],[11,"modify","collections::string","",27],[11,"modify","collections::vec","",108],[11,"modify","std::fs","",109],[11,"modify","std::path","Set the body to the contents of the File at this path.",110],[11,"modify","lib::status","",83],[11,"modify","lib::modifiers","",111],[11,"modify","","",111],[11,"modify","","",112],[11,"clone","lib","",98],[11,"name","","Return the name used for this protocol in a URI's scheme part.",98],[11,"http","","Kick off the server process using the HTTP protocol.",97],[11,"https","","Kick off the server process using the HTTPS protocol.",97],[11,"listen_with","","Kick off the server process with X threads.",97],[11,"new","","Instantiate a new instance of `Iron`.",97],[11,"handle","","",97],[6,"IronResult","","The Result alias used throughout Iron and in clients of Iron."]],"paths":[[3,"TypeMap"],[3,"OccupiedEntry"],[3,"VacantEntry"],[8,"Header"],[8,"HeaderFormat"],[3,"Headers"],[3,"Request"],[3,"Response"],[3,"Client"],[3,"RequestBuilder"],[4,"Body"],[3,"Url"],[4,"RedirectPolicy"],[4,"Method"],[3,"AccessControlAllowHeaders"],[3,"AccessControlAllowMethods"],[4,"AccessControlAllowOrigin"],[3,"AccessControlMaxAge"],[3,"AccessControlRequestHeaders"],[3,"AccessControlRequestMethod"],[3,"Accept"],[3,"AcceptCharset"],[3,"AcceptEncoding"],[3,"Language"],[3,"AcceptLanguage"],[3,"Allow"],[3,"Authorization"],[3,"String"],[3,"Basic"],[3,"CacheControl"],[4,"CacheDirective"],[3,"Cookie"],[3,"Connection"],[4,"ConnectionOption"],[3,"ContentLength"],[3,"ContentType"],[3,"Date"],[3,"Etag"],[3,"Expires"],[3,"Host"],[4,"IfMatch"],[3,"LastModified"],[3,"IfModifiedSince"],[4,"IfNoneMatch"],[3,"IfUnmodifiedSince"],[3,"Location"],[4,"Pragma"],[3,"Referer"],[3,"Server"],[3,"SetCookie"],[3,"TransferEncoding"],[3,"Upgrade"],[4,"Protocol"],[3,"UserAgent"],[4,"Vary"],[3,"OptCell"],[4,"PtrMap"],[3,"PtrMapCell"],[3,"Item"],[4,"Charset"],[4,"Encoding"],[3,"EntityTag"],[3,"Quality"],[3,"QualityItem"],[3,"Box"],[3,"HeadersItems"],[3,"HeaderView"],[3,"HeaderFormatter"],[4,"HttpReader"],[4,"HttpWriter"],[3,"RawStatus"],[3,"NetworkConnections"],[8,"NetworkStream"],[4,"HttpListener"],[3,"CloneTcpStream"],[4,"HttpStream"],[3,"HttpConnector"],[3,"HttpRequest"],[3,"HttpResponse"],[3,"ListenerPool"],[3,"Sentinel"],[3,"Server"],[3,"Listening"],[4,"Status"],[4,"StatusClass"],[4,"RequestUri"],[4,"HttpVersion"],[4,"HttpError"],[3,"Mime"],[4,"TopLevel"],[4,"SubLevel"],[4,"Attr"],[4,"Value"],[8,"Scheme"],[8,"Pluggable"],[8,"Set"],[3,"Url"],[3,"Iron"],[4,"Protocol"],[3,"IronError"],[8,"Handler"],[8,"BeforeMiddleware"],[8,"AfterMiddleware"],[8,"AroundMiddleware"],[3,"Chain"],[3,"Response"],[3,"Request"],[3,"Body"],[3,"Vec"],[3,"File"],[3,"PathBuf"],[3,"Header"],[3,"Redirect"]]};
searchIndex['bodyparser'] = {"items":[[0,"","bodyparser","Body Parser Plugin for Iron"],[3,"BodyError","",""],[12,"detail","","",0],[12,"cause","","",0],[3,"LimitReader","","[Original impl](https://github.com/rust-lang/rust/blob/17bc7d8d5be3be9674d702ccad2fa88c487d23b0/src/libstd/old_io/util.rs#L20)"],[3,"MaxBodyLength","","Use this key to modify the default body limit."],[3,"Raw","","Raw is a plugin to read a request body into UTF-8 String.\nDoesn't read `multipart/form-data`."],[3,"Json","","Json is a plugin to parse a request body into JSON.\nUses Raw plugin to parse the body with limit."],[3,"Struct","","Struct is a plugin to parse a request body into a struct.\nUses Raw plugin to parse the body with limit."],[4,"BodyErrorCause","",""],[13,"Utf8Error","","",1],[13,"IoError","","",1],[13,"ParserError","","",1],[13,"DecoderError","","",1],[11,"clone","","",1],[11,"fmt","","",1],[11,"clone","","",0],[11,"fmt","","",0],[11,"description","","",0],[11,"fmt","","",0],[11,"fmt","","",2],[11,"new","","",2],[11,"into_inner","","",2],[11,"limit","","",2],[11,"read","","",2],[6,"Value","",""],[6,"Value","",""],[6,"Error","",""],[11,"eval","","",3],[11,"clone","","",4],[6,"Value","",""],[6,"Error","",""],[11,"eval","","",4],[11,"clone","","",5],[6,"Value","",""],[6,"Error","",""],[11,"eval","","",5]],"paths":[[3,"BodyError"],[4,"BodyErrorCause"],[3,"LimitReader"],[3,"Raw"],[3,"Json"],[3,"Struct"]]};
searchIndex['mount'] = {"items":[[0,"","mount","`Mount` provides mounting middleware for the Iron framework."],[3,"Mount","","`Mount` is a simple mounting middleware."],[3,"OriginalUrl","","Exposes the original, unmodified path to be stored in `Request::extensions`."],[11,"new","","Creates a new instance of `Mount`.",0],[11,"mount","","Mounts a given `Handler` onto a route.",0],[11,"handle","","",0]],"paths":[[3,"Mount"]]};
searchIndex['iron'] = {"items":[[0,"","iron","The main crate for the Iron library."],[1,"Request","","The `Request` given to all `Middleware`."],[11,"url","","The requested URL.",0],[11,"remote_addr","","The originating address of the request.",0],[11,"headers","","The request headers.",0],[11,"body","","The request body.",0],[11,"method","","The request method.",0],[11,"extensions","","Extensible storage for data passed between middleware.",0],[1,"Url","","HTTP/HTTPS URL type for Iron."],[11,"scheme","","The lower-cased scheme of the URL, typically \"http\" or \"https\".",1],[11,"host","","The host field of the URL, probably a domain.",1],[11,"port","","The connection port.",1],[11,"path","","The URL path, the resource to be accessed.",1],[11,"username","","The URL username field, from the userinfo section of the URL.",1],[11,"password","","The URL password field, from the userinfo section of the URL.",1],[11,"query","","The URL query string.",1],[11,"fragment","","The URL fragment.",1],[1,"Iron","","The primary entrance point to `Iron`, a `struct` to instantiate a new server."],[11,"handler","","Iron contains a `Handler`, which it uses to create responses for client\nrequests.",2],[0,"prelude","","A module meant to be glob imported when using Iron, for instance:"],[6,"Set","iron::prelude","A blanket trait providing the set and set_mut methods for all types."],[9,"set","","Modify self using the provided modifier.",3],[9,"set_mut","","Modify self through a mutable reference with the provided modifier.",3],[6,"GetCached","","An interface for plugins that cache values between calls."],[9,"get","","Return a copy of the plugin's produced value.",4],[9,"get_ref","","Return a reference to the plugin's produced value.",4],[9,"get_mut","","Return a mutable reference to the plugin's produced value.",4],[6,"ErrorRefExt","",""],[9,"is","","",5],[9,"downcast","","",5],[0,"typemap","iron","Re-exports from the TypeMap crate."],[10,"new","typemap","Create a new, empty TypeMap.",6],[10,"insert","","Insert a value into the map with a specified key type.",6],[10,"find","","Find a value in the map and get a reference to it.",6],[10,"find_mut","","Find a value in the map and get a mutable reference to it.",6],[10,"get","","Find a value in the map and get a reference to it.",6],[10,"get_mut","","Find a value in the map and get a mutable reference to it.",6],[10,"contains","","Check if a key has an associated value stored in the map.",6],[10,"remove","","Remove a value from the map.",6],[10,"entry","","Get the given key's corresponding entry in the map for in-place manipulation.",6],[10,"data","","Read the underlying HashMap",6],[10,"data_mut","","Get a mutable reference to the underlying HashMap",6],[10,"len","","Get the number of values stored in the map.",6],[10,"is_empty","","Return true if the map contains no values.",6],[10,"clear","","Remove all entries from the map.",6],[10,"default","","",6],[10,"get","","Get a reference to the entry's value.",7],[10,"get_mut","","Get a mutable reference to the entry's value.",7],[10,"into_mut","","Transform the entry into a mutable reference with the same lifetime as the map.",7],[10,"set","","Set the entry's value and return the previous value.",7],[10,"take","","Move the entry's value out of the map, consuming the entry.",7],[10,"set","","Set the entry's value and return a mutable reference to it.",8],[1,"TypeMap","iron::typemap","A map keyed by types."],[6,"Assoc","","This trait defines the relationship between keys and values in a TypeMap."],[0,"modifier","iron","Re-exports from the Modifier crate."],[6,"Set","iron::modifier","A blanket trait providing the set and set_mut methods for all types."],[9,"set","","Modify self using the provided modifier.",3],[9,"set_mut","","Modify self through a mutable reference with the provided modifier.",3],[6,"Modifier","","Allows use of the implemented type as an argument to Set::set."],[9,"modify","","Modify `F` with self.",9],[0,"status","iron","Status Codes"],[10,"canonical_reason","hyper::status","Get the standardised `Reason-Phrase` for this status code.",10],[10,"class","","Determine the class of a status code, based on its first digit.",10],[10,"fmt","hyper","",11],[10,"headers","hyper::client::request","Read the Request headers.",12],[10,"method","","Read the Request method.",12],[10,"new","","Create a new client request.",12],[10,"with_stream","","Create a new client request with a specific underlying NetworkStream.",12],[10,"get","","Create a new GET request.",12],[10,"post","","Create a new POST request.",12],[10,"delete","","Create a new DELETE request.",12],[10,"put","","Create a new PUT request.",12],[10,"patch","","Create a new PATCH request.",12],[10,"head","","Create a new HEAD request.",12],[10,"options","","Create a new OPTIONS request.",12],[10,"start","","Consume a Fresh Request, writing the headers and method,\nreturning a Streaming Request.",12],[10,"headers_mut","","Get a mutable reference to the Request headers.",12],[10,"send","","Completes writing the request, and returns a response to read from.",12],[10,"write","","",12],[10,"flush","","",12],[10,"flush","","",12],[10,"write_fmt","","",12],[10,"write_str","","",12],[10,"write_line","","",12],[10,"write_char","","",12],[10,"write_int","","",12],[10,"write_uint","","",12],[10,"write_le_uint","","",12],[10,"write_le_int","","",12],[10,"write_be_uint","","",12],[10,"write_be_int","","",12],[10,"write_be_u64","","",12],[10,"write_be_u32","","",12],[10,"write_be_u16","","",12],[10,"write_be_i64","","",12],[10,"write_be_i32","","",12],[10,"write_be_i16","","",12],[10,"write_be_f64","","",12],[10,"write_be_f32","","",12],[10,"write_le_u64","","",12],[10,"write_le_u32","","",12],[10,"write_le_u16","","",12],[10,"write_le_i64","","",12],[10,"write_le_i32","","",12],[10,"write_le_i16","","",12],[10,"write_le_f64","","",12],[10,"write_le_f32","","",12],[10,"write_u8","","",12],[10,"write_i8","","",12],[10,"new","hyper::client::response","Creates a new response from a server.",13],[10,"status_raw","","Get the raw status code and reason.",13],[10,"into_inner","","Consumes the Request to return the NetworkStream underneath.",13],[10,"read","","",13],[10,"read_at_least","","",13],[10,"read_byte","","",13],[10,"push","","",13],[10,"push_at_least","","",13],[10,"read_exact","","",13],[10,"read_to_end","","",13],[10,"read_to_string","","",13],[10,"read_le_uint_n","","",13],[10,"read_le_int_n","","",13],[10,"read_be_uint_n","","",13],[10,"read_be_int_n","","",13],[10,"read_le_uint","","",13],[10,"read_le_int","","",13],[10,"read_be_uint","","",13],[10,"read_be_int","","",13],[10,"read_be_u64","","",13],[10,"read_be_u32","","",13],[10,"read_be_u16","","",13],[10,"read_be_i64","","",13],[10,"read_be_i32","","",13],[10,"read_be_i16","","",13],[10,"read_be_f64","","",13],[10,"read_be_f32","","",13],[10,"read_le_u64","","",13],[10,"read_le_u32","","",13],[10,"read_le_u16","","",13],[10,"read_le_i64","","",13],[10,"read_le_i32","","",13],[10,"read_le_i16","","",13],[10,"read_le_f64","","",13],[10,"read_le_f32","","",13],[10,"read_u8","","",13],[10,"read_i8","","",13],[10,"hash","hyper::method","",14],[10,"assert_receiver_is_total_eq","","",14],[10,"eq","","",14],[10,"ne","","",14],[10,"ne","","",14],[10,"clone","","",14],[10,"clone_from","","",14],[10,"safe","","Whether a method is considered \"safe\", meaning the request is\nessentially read-only.",14],[10,"idempotent","","Whether a method is considered \"idempotent\", meaning the request has\nthe same result is executed multiple times.",14],[10,"from_str","","",14],[10,"fmt","","",14],[10,"fmt","hyper::header::common::accept","",15],[10,"eq","","",15],[10,"ne","","",15],[10,"ne","","",15],[10,"clone","","",15],[10,"clone_from","","",15],[10,"header_name","","",15],[10,"parse_header","","",15],[10,"fmt_header","","",15],[10,"clone_box","","",15],[10,"fmt","hyper::header::common::authorization","",16],[10,"eq","","",16],[10,"ne","","",16],[10,"ne","","",16],[10,"clone","","",16],[10,"clone_from","","",16],[10,"header_name","","",16],[10,"parse_header","","",16],[10,"fmt_header","","",16],[10,"clone_box","","",16],[10,"scheme","collections::string","",17],[10,"fmt_scheme","","",17],[10,"fmt","hyper::header::common::authorization","",18],[10,"eq","","",18],[10,"ne","","",18],[10,"ne","","",18],[10,"clone","","",18],[10,"clone_from","","",18],[10,"scheme","","",18],[10,"fmt_scheme","","",18],[10,"from_str","","",18],[10,"fmt","hyper::header::common::cookie","",19],[10,"eq","","",19],[10,"ne","","",19],[10,"ne","","",19],[10,"clone","","",19],[10,"clone_from","","",19],[10,"header_name","","",19],[10,"parse_header","","",19],[10,"fmt_header","","",19],[10,"clone_box","","",19],[10,"to_cookie_jar","","This method can be used to create CookieJar that can be used\nto manipulate cookies and create a corresponding `SetCookie` header afterwards.",19],[10,"fmt","hyper::header::common::connection","",20],[10,"eq","","",20],[10,"ne","","",20],[10,"ne","","",20],[10,"clone","","",20],[10,"clone_from","","",20],[10,"eq","","",21],[10,"ne","","",21],[10,"ne","","",21],[10,"clone","","",21],[10,"clone_from","","",21],[10,"from_str","","",21],[10,"fmt","","",21],[10,"header_name","","",20],[10,"parse_header","","",20],[10,"fmt_header","","",20],[10,"clone_box","","",20],[10,"fmt","hyper::header::common::content_length","",22],[10,"eq","","",22],[10,"ne","","",22],[10,"ne","","",22],[10,"clone","","",22],[10,"clone_from","","",22],[10,"header_name","","",22],[10,"parse_header","","",22],[10,"fmt_header","","",22],[10,"clone_box","","",22],[10,"len","","Returns the wrapped length.",22],[10,"fmt","hyper::header::common::content_type","",23],[10,"eq","","",23],[10,"ne","","",23],[10,"ne","","",23],[10,"clone","","",23],[10,"clone_from","","",23],[10,"header_name","","",23],[10,"parse_header","","",23],[10,"fmt_header","","",23],[10,"clone_box","","",23],[10,"clone","hyper::header::common::date","",24],[10,"clone_from","","",24],[10,"eq","","",24],[10,"ne","","",24],[10,"ne","","",24],[10,"header_name","","",24],[10,"parse_header","","",24],[10,"fmt_header","","",24],[10,"clone_box","","",24],[10,"fmt","","",24],[10,"from_str","","",24],[10,"fmt","hyper::header::common::host","",25],[10,"eq","","",25],[10,"ne","","",25],[10,"ne","","",25],[10,"clone","","",25],[10,"clone_from","","",25],[10,"header_name","","",25],[10,"parse_header","","",25],[10,"fmt_header","","",25],[10,"clone_box","","",25],[10,"fmt","hyper::header::common::location","",26],[10,"eq","","",26],[10,"ne","","",26],[10,"ne","","",26],[10,"clone","","",26],[10,"clone_from","","",26],[10,"header_name","","",26],[10,"parse_header","","",26],[10,"fmt_header","","",26],[10,"clone_box","","",26],[10,"fmt","hyper::header::common::server","",27],[10,"eq","","",27],[10,"ne","","",27],[10,"ne","","",27],[10,"clone","","",27],[10,"clone_from","","",27],[10,"header_name","","",27],[10,"parse_header","","",27],[10,"fmt_header","","",27],[10,"clone_box","","",27],[10,"fmt","hyper::header::common::set_cookie","",28],[10,"eq","","",28],[10,"ne","","",28],[10,"ne","","",28],[10,"clone","","",28],[10,"clone_from","","",28],[10,"header_name","","",28],[10,"parse_header","","",28],[10,"fmt_header","","",28],[10,"clone_box","","",28],[10,"from_cookie_jar","","Use this to create SetCookie header from CookieJar using\ncalculated delta.",28],[10,"fmt","hyper::header::common::transfer_encoding","",29],[10,"eq","","",29],[10,"ne","","",29],[10,"ne","","",29],[10,"clone","","",29],[10,"clone_from","","",29],[10,"eq","","",30],[10,"ne","","",30],[10,"ne","","",30],[10,"clone","","",30],[10,"clone_from","","",30],[10,"fmt","","",30],[10,"from_str","","",30],[10,"header_name","","",29],[10,"parse_header","","",29],[10,"fmt_header","","",29],[10,"clone_box","","",29],[10,"fmt","hyper::header::common::upgrade","",31],[10,"eq","","",31],[10,"ne","","",31],[10,"ne","","",31],[10,"clone","","",31],[10,"clone_from","","",31],[10,"eq","","",32],[10,"ne","","",32],[10,"ne","","",32],[10,"clone","","",32],[10,"clone_from","","",32],[10,"from_str","","",32],[10,"fmt","","",32],[10,"header_name","","",31],[10,"parse_header","","",31],[10,"fmt_header","","",31],[10,"clone_box","","",31],[10,"fmt","hyper::header::common::user_agent","",33],[10,"eq","","",33],[10,"ne","","",33],[10,"ne","","",33],[10,"clone","","",33],[10,"clone_from","","",33],[10,"header_name","","",33],[10,"parse_header","","",33],[10,"fmt_header","","",33],[10,"clone_box","","",33],[10,"clone","alloc::boxed","",34],[10,"clone_from","","",34],[10,"clone","hyper::header","",35],[10,"clone_from","","",35],[10,"new","","Creates a new, empty headers map.",35],[10,"set","","Set a header field to the corresponding value.",35],[10,"get_raw","","Access the raw value of a header.",35],[10,"set_raw","","Set the raw value of a header, bypassing any typed headers.",35],[10,"get","","Get a reference to the header field's value, if it exists.",35],[10,"get_mut","","Get a mutable reference to the header field's value, if it exists.",35],[10,"has","","Returns a boolean of whether a certain header is in the map.",35],[10,"remove","","Removes a header from the map, if one existed.\nReturns true if a header has been removed.",35],[10,"iter","","Returns an iterator over the header fields.",35],[10,"len","","Returns the number of headers in the map.",35],[10,"clear","","Remove all headers from the map.",35],[10,"fmt","","",35],[10,"next","","",36],[10,"size_hint","","",36],[10,"is","","Check if a HeaderView is a certain Header.",37],[10,"name","","Get the Header name as a slice.",37],[10,"value","","Cast the value to a certain Header type.",37],[10,"value_string","","Get just the header value as a String.",37],[10,"fmt","","",37],[10,"extend","","",35],[10,"from_iter","","",35],[10,"clone","","",38],[10,"clone_from","","",38],[10,"fmt","","",38],[10,"clone","std::sync::lock","",39],[10,"clone_from","","",39],[10,"fmt","alloc::boxed","",34],[10,"clone","hyper::header","",40],[10,"clone_from","","",40],[10,"as_slice","","",40],[10,"fmt","","",40],[10,"eq","","",40],[10,"ne","","",40],[10,"assert_receiver_is_total_eq","","",40],[10,"equiv","","",40],[10,"hash","","",40],[10,"fmt","","",41],[10,"unwrap","hyper::http","Unwraps this HttpReader and returns the underlying Reader.",42],[10,"read","","",42],[10,"read_at_least","","",42],[10,"read_byte","","",42],[10,"push","","",42],[10,"push_at_least","","",42],[10,"read_exact","","",42],[10,"read_to_end","","",42],[10,"read_to_string","","",42],[10,"read_le_uint_n","","",42],[10,"read_le_int_n","","",42],[10,"read_be_uint_n","","",42],[10,"read_be_int_n","","",42],[10,"read_le_uint","","",42],[10,"read_le_int","","",42],[10,"read_be_uint","","",42],[10,"read_be_int","","",42],[10,"read_be_u64","","",42],[10,"read_be_u32","","",42],[10,"read_be_u16","","",42],[10,"read_be_i64","","",42],[10,"read_be_i32","","",42],[10,"read_be_i16","","",42],[10,"read_be_f64","","",42],[10,"read_be_f32","","",42],[10,"read_le_u64","","",42],[10,"read_le_u32","","",42],[10,"read_le_u16","","",42],[10,"read_le_i64","","",42],[10,"read_le_i32","","",42],[10,"read_le_i16","","",42],[10,"read_le_f64","","",42],[10,"read_le_f32","","",42],[10,"read_u8","","",42],[10,"read_i8","","",42],[10,"unwrap","","Unwraps the HttpWriter and returns the underlying Writer.",43],[10,"end","","Ends the HttpWriter, and returns the underlying Writer.",43],[10,"write","","",43],[10,"flush","","",43],[10,"flush","","",43],[10,"write_fmt","","",43],[10,"write_str","","",43],[10,"write_line","","",43],[10,"write_char","","",43],[10,"write_int","","",43],[10,"write_uint","","",43],[10,"write_le_uint","","",43],[10,"write_le_int","","",43],[10,"write_be_uint","","",43],[10,"write_be_int","","",43],[10,"write_be_u64","","",43],[10,"write_be_u32","","",43],[10,"write_be_u16","","",43],[10,"write_be_i64","","",43],[10,"write_be_i32","","",43],[10,"write_be_i16","","",43],[10,"write_be_f64","","",43],[10,"write_be_f32","","",43],[10,"write_le_u64","","",43],[10,"write_le_u32","","",43],[10,"write_le_u16","","",43],[10,"write_le_i64","","",43],[10,"write_le_i32","","",43],[10,"write_le_i16","","",43],[10,"write_le_f64","","",43],[10,"write_le_f32","","",43],[10,"write_u8","","",43],[10,"write_i8","","",43],[10,"fmt","","",44],[10,"as_slice","","",44],[10,"fmt","","",45],[10,"eq","","",45],[10,"ne","","",45],[10,"ne","","",45],[10,"clone","","",45],[10,"clone_from","","",45],[10,"fmt","alloc::boxed","",34],[10,"clone","","",34],[10,"clone_from","","",34],[10,"read","","",34],[10,"read_at_least","","",34],[10,"read_byte","","",34],[10,"push","","",34],[10,"push_at_least","","",34],[10,"read_exact","","",34],[10,"read_to_end","","",34],[10,"read_to_string","","",34],[10,"read_le_uint_n","","",34],[10,"read_le_int_n","","",34],[10,"read_be_uint_n","","",34],[10,"read_be_int_n","","",34],[10,"read_le_uint","","",34],[10,"read_le_int","","",34],[10,"read_be_uint","","",34],[10,"read_be_int","","",34],[10,"read_be_u64","","",34],[10,"read_be_u32","","",34],[10,"read_be_u16","","",34],[10,"read_be_i64","","",34],[10,"read_be_i32","","",34],[10,"read_be_i16","","",34],[10,"read_be_f64","","",34],[10,"read_be_f32","","",34],[10,"read_le_u64","","",34],[10,"read_le_u32","","",34],[10,"read_le_u16","","",34],[10,"read_le_i64","","",34],[10,"read_le_i32","","",34],[10,"read_le_i16","","",34],[10,"read_le_f64","","",34],[10,"read_le_f32","","",34],[10,"read_u8","","",34],[10,"read_i8","","",34],[10,"write","","",34],[10,"flush","","",34],[10,"flush","","",34],[10,"write_fmt","","",34],[10,"write_str","","",34],[10,"write_line","","",34],[10,"write_char","","",34],[10,"write_int","","",34],[10,"write_uint","","",34],[10,"write_le_uint","","",34],[10,"write_le_int","","",34],[10,"write_be_uint","","",34],[10,"write_be_int","","",34],[10,"write_be_u64","","",34],[10,"write_be_u32","","",34],[10,"write_be_u16","","",34],[10,"write_be_i64","","",34],[10,"write_be_i32","","",34],[10,"write_be_i16","","",34],[10,"write_be_f64","","",34],[10,"write_be_f32","","",34],[10,"write_le_u64","","",34],[10,"write_le_u32","","",34],[10,"write_le_u16","","",34],[10,"write_le_i64","","",34],[10,"write_le_i32","","",34],[10,"write_le_i16","","",34],[10,"write_le_f64","","",34],[10,"write_le_f32","","",34],[10,"write_u8","","",34],[10,"write_i8","","",34],[10,"downcast_unchecked","","",34],[10,"downcast","","",34],[10,"listen","hyper::net","",46],[10,"bind","","",46],[10,"socket_name","","",46],[10,"clone","","",47],[10,"clone_from","","",47],[10,"accept","","",47],[10,"incoming","","",47],[10,"close","","",47],[10,"clone","","",48],[10,"clone_from","","",48],[10,"read","","",48],[10,"read_at_least","","",48],[10,"read_byte","","",48],[10,"push","","",48],[10,"push_at_least","","",48],[10,"read_exact","","",48],[10,"read_to_end","","",48],[10,"read_to_string","","",48],[10,"read_le_uint_n","","",48],[10,"read_le_int_n","","",48],[10,"read_be_uint_n","","",48],[10,"read_be_int_n","","",48],[10,"read_le_uint","","",48],[10,"read_le_int","","",48],[10,"read_be_uint","","",48],[10,"read_be_int","","",48],[10,"read_be_u64","","",48],[10,"read_be_u32","","",48],[10,"read_be_u16","","",48],[10,"read_be_i64","","",48],[10,"read_be_i32","","",48],[10,"read_be_i16","","",48],[10,"read_be_f64","","",48],[10,"read_be_f32","","",48],[10,"read_le_u64","","",48],[10,"read_le_u32","","",48],[10,"read_le_u16","","",48],[10,"read_le_i64","","",48],[10,"read_le_i32","","",48],[10,"read_le_i16","","",48],[10,"read_le_f64","","",48],[10,"read_le_f32","","",48],[10,"read_u8","","",48],[10,"read_i8","","",48],[10,"write","","",48],[10,"flush","","",48],[10,"flush","","",48],[10,"write_fmt","","",48],[10,"write_str","","",48],[10,"write_line","","",48],[10,"write_char","","",48],[10,"write_int","","",48],[10,"write_uint","","",48],[10,"write_le_uint","","",48],[10,"write_le_int","","",48],[10,"write_be_uint","","",48],[10,"write_be_int","","",48],[10,"write_be_u64","","",48],[10,"write_be_u32","","",48],[10,"write_be_u16","","",48],[10,"write_be_i64","","",48],[10,"write_be_i32","","",48],[10,"write_be_i16","","",48],[10,"write_be_f64","","",48],[10,"write_be_f32","","",48],[10,"write_le_u64","","",48],[10,"write_le_u32","","",48],[10,"write_le_u16","","",48],[10,"write_le_i64","","",48],[10,"write_le_i32","","",48],[10,"write_le_i16","","",48],[10,"write_le_f64","","",48],[10,"write_le_f32","","",48],[10,"write_u8","","",48],[10,"write_i8","","",48],[10,"peer_name","","",48],[10,"clone_box","","",48],[10,"connect","","",48],[10,"new","hyper::server::request","Create a new Request, reading the StartLine and Headers so they are\nimmediately useful.",49],[10,"read","","",49],[10,"read_at_least","","",49],[10,"read_byte","","",49],[10,"push","","",49],[10,"push_at_least","","",49],[10,"read_exact","","",49],[10,"read_to_end","","",49],[10,"read_to_string","","",49],[10,"read_le_uint_n","","",49],[10,"read_le_int_n","","",49],[10,"read_be_uint_n","","",49],[10,"read_be_int_n","","",49],[10,"read_le_uint","","",49],[10,"read_le_int","","",49],[10,"read_be_uint","","",49],[10,"read_be_int","","",49],[10,"read_be_u64","","",49],[10,"read_be_u32","","",49],[10,"read_be_u16","","",49],[10,"read_be_i64","","",49],[10,"read_be_i32","","",49],[10,"read_be_i16","","",49],[10,"read_be_f64","","",49],[10,"read_be_f32","","",49],[10,"read_le_u64","","",49],[10,"read_le_u32","","",49],[10,"read_le_u16","","",49],[10,"read_le_i64","","",49],[10,"read_le_i32","","",49],[10,"read_le_i16","","",49],[10,"read_le_f64","","",49],[10,"read_le_f32","","",49],[10,"read_u8","","",49],[10,"read_i8","","",49],[10,"status","hyper::server::response","The status of this response.",50],[10,"headers","","The headers of this response.",50],[10,"construct","","Construct a Response from its constituent parts.",50],[10,"deconstruct","","Deconstruct this Response into its constituent parts.",50],[10,"new","","Creates a new Response that can be used to write to a network stream.",50],[10,"start","","Consume this Response<Fresh>, writing the Headers and Status and creating a Response<Streaming>",50],[10,"status_mut","","Get a mutable reference to the status.",50],[10,"headers_mut","","Get a mutable reference to the Headers.",50],[10,"end","","Flushes all writing of a response to the client.",50],[10,"write","","",50],[10,"flush","","",50],[10,"flush","","",50],[10,"write_fmt","","",50],[10,"write_str","","",50],[10,"write_line","","",50],[10,"write_char","","",50],[10,"write_int","","",50],[10,"write_uint","","",50],[10,"write_le_uint","","",50],[10,"write_le_int","","",50],[10,"write_be_uint","","",50],[10,"write_be_int","","",50],[10,"write_be_u64","","",50],[10,"write_be_u32","","",50],[10,"write_be_u16","","",50],[10,"write_be_i64","","",50],[10,"write_be_i32","","",50],[10,"write_be_i16","","",50],[10,"write_be_f64","","",50],[10,"write_be_f32","","",50],[10,"write_le_u64","","",50],[10,"write_le_u32","","",50],[10,"write_le_u16","","",50],[10,"write_le_i64","","",50],[10,"write_le_i32","","",50],[10,"write_le_i16","","",50],[10,"write_le_f64","","",50],[10,"write_le_f32","","",50],[10,"write_u8","","",50],[10,"write_i8","","",50],[10,"http","hyper::server","Creates a new server that will handle `HttpStream`s.",51],[10,"listen_network","","Binds to a socket, and starts handling connections using a task pool.",51],[10,"listen_threads","","Binds to a socket and starts handling connections with the specified number of tasks.",51],[10,"listen","","Binds to a socket and starts handling connections.",51],[10,"close","","Stop the server from listening to its socket address.",52],[10,"fmt","hyper::status","",10],[10,"eq","","",10],[10,"ne","","",10],[10,"assert_receiver_is_total_eq","","",10],[10,"clone","","",10],[10,"clone_from","","",10],[10,"from_i64","","",10],[10,"from_u64","","",10],[10,"from_int","","",10],[10,"from_i8","","",10],[10,"from_i16","","",10],[10,"from_i32","","",10],[10,"from_uint","","",10],[10,"from_u8","","",10],[10,"from_u16","","",10],[10,"from_u32","","",10],[10,"from_f32","","",10],[10,"from_f64","","",10],[10,"partial_cmp","","",10],[10,"lt","","",10],[10,"le","","",10],[10,"gt","","",10],[10,"ge","","",10],[10,"cmp","","",10],[10,"to_i64","","",10],[10,"to_u64","","",10],[10,"to_int","","",10],[10,"to_i8","","",10],[10,"to_i16","","",10],[10,"to_i32","","",10],[10,"to_uint","","",10],[10,"to_u8","","",10],[10,"to_u16","","",10],[10,"to_u32","","",10],[10,"to_f32","","",10],[10,"to_f64","","",10],[10,"cmp","","",53],[10,"partial_cmp","","",53],[10,"lt","","",53],[10,"le","","",53],[10,"gt","","",53],[10,"ge","","",53],[10,"lt","","",53],[10,"le","","",53],[10,"gt","","",53],[10,"ge","","",53],[10,"assert_receiver_is_total_eq","","",53],[10,"eq","","",53],[10,"ne","","",53],[10,"ne","","",53],[10,"clone","","",53],[10,"clone_from","","",53],[10,"default_code","","Get the default status code for the class.",53],[10,"to_i64","","",53],[10,"to_u64","","",53],[10,"to_int","","",53],[10,"to_i8","","",53],[10,"to_i16","","",53],[10,"to_i32","","",53],[10,"to_uint","","",53],[10,"to_u8","","",53],[10,"to_u16","","",53],[10,"to_u32","","",53],[10,"to_f32","","",53],[10,"to_f64","","",53],[10,"clone","hyper::uri","",54],[10,"clone_from","","",54],[10,"eq","","",54],[10,"ne","","",54],[10,"ne","","",54],[10,"fmt","","",54],[10,"partial_cmp","hyper::version","",55],[10,"lt","","",55],[10,"le","","",55],[10,"gt","","",55],[10,"ge","","",55],[10,"lt","","",55],[10,"le","","",55],[10,"gt","","",55],[10,"ge","","",55],[10,"eq","","",55],[10,"ne","","",55],[10,"ne","","",55],[10,"fmt","","",55],[10,"clone","hyper","",56],[10,"clone_from","","",56],[10,"eq","","",56],[10,"ne","","",56],[10,"ne","","",56],[10,"fmt","","",56],[10,"description","","",56],[10,"cause","","",56],[10,"detail","","",56],[10,"cause","","",56],[10,"from_error","","",56],[10,"eq","mime","",57],[10,"ne","","",57],[10,"ne","","",57],[10,"clone","","",57],[10,"clone_from","","",57],[10,"eq","","",58],[10,"ne","","",58],[10,"ne","","",58],[10,"clone","","",58],[10,"clone_from","","",58],[10,"fmt","","",58],[10,"from_str","","",58],[10,"eq","","",59],[10,"ne","","",59],[10,"ne","","",59],[10,"clone","","",59],[10,"clone_from","","",59],[10,"fmt","","",59],[10,"from_str","","",59],[10,"eq","","",60],[10,"ne","","",60],[10,"ne","","",60],[10,"clone","","",60],[10,"clone_from","","",60],[10,"fmt","","",60],[10,"from_str","","",60],[10,"eq","","",61],[10,"ne","","",61],[10,"ne","","",61],[10,"clone","","",61],[10,"clone_from","","",61],[10,"fmt","","",61],[10,"from_str","","",61],[10,"equiv","","",57],[10,"fmt","","",57],[10,"from_str","","",57],[2,"Status","iron::status","An HTTP status code (`Status-Code` in RFC 2616)."],[12,"Continue","","100 Continue",10],[12,"SwitchingProtocols","","101 Switching Protocols",10],[12,"Processing","","102 Processing",10],[12,"Code103","","103 (unregistered)",10],[12,"Code104","","104 (unregistered)",10],[12,"Code105","","105 (unregistered)",10],[12,"Code106","","106 (unregistered)",10],[12,"Code107","","107 (unregistered)",10],[12,"Code108","","108 (unregistered)",10],[12,"Code109","","109 (unregistered)",10],[12,"Code110","","110 (unregistered)",10],[12,"Code111","","111 (unregistered)",10],[12,"Code112","","112 (unregistered)",10],[12,"Code113","","113 (unregistered)",10],[12,"Code114","","114 (unregistered)",10],[12,"Code115","","115 (unregistered)",10],[12,"Code116","","116 (unregistered)",10],[12,"Code117","","117 (unregistered)",10],[12,"Code118","","118 (unregistered)",10],[12,"Code119","","119 (unregistered)",10],[12,"Code120","","120 (unregistered)",10],[12,"Code121","","121 (unregistered)",10],[12,"Code122","","122 (unregistered)",10],[12,"Code123","","123 (unregistered)",10],[12,"Code124","","124 (unregistered)",10],[12,"Code125","","125 (unregistered)",10],[12,"Code126","","126 (unregistered)",10],[12,"Code127","","127 (unregistered)",10],[12,"Code128","","128 (unregistered)",10],[12,"Code129","","129 (unregistered)",10],[12,"Code130","","130 (unregistered)",10],[12,"Code131","","131 (unregistered)",10],[12,"Code132","","132 (unregistered)",10],[12,"Code133","","133 (unregistered)",10],[12,"Code134","","134 (unregistered)",10],[12,"Code135","","135 (unregistered)",10],[12,"Code136","","136 (unregistered)",10],[12,"Code137","","137 (unregistered)",10],[12,"Code138","","138 (unregistered)",10],[12,"Code139","","139 (unregistered)",10],[12,"Code140","","140 (unregistered)",10],[12,"Code141","","141 (unregistered)",10],[12,"Code142","","142 (unregistered)",10],[12,"Code143","","143 (unregistered)",10],[12,"Code144","","144 (unregistered)",10],[12,"Code145","","145 (unregistered)",10],[12,"Code146","","146 (unregistered)",10],[12,"Code147","","147 (unregistered)",10],[12,"Code148","","148 (unregistered)",10],[12,"Code149","","149 (unregistered)",10],[12,"Code150","","150 (unregistered)",10],[12,"Code151","","151 (unregistered)",10],[12,"Code152","","152 (unregistered)",10],[12,"Code153","","153 (unregistered)",10],[12,"Code154","","154 (unregistered)",10],[12,"Code155","","155 (unregistered)",10],[12,"Code156","","156 (unregistered)",10],[12,"Code157","","157 (unregistered)",10],[12,"Code158","","158 (unregistered)",10],[12,"Code159","","159 (unregistered)",10],[12,"Code160","","160 (unregistered)",10],[12,"Code161","","161 (unregistered)",10],[12,"Code162","","162 (unregistered)",10],[12,"Code163","","163 (unregistered)",10],[12,"Code164","","164 (unregistered)",10],[12,"Code165","","165 (unregistered)",10],[12,"Code166","","166 (unregistered)",10],[12,"Code167","","167 (unregistered)",10],[12,"Code168","","168 (unregistered)",10],[12,"Code169","","169 (unregistered)",10],[12,"Code170","","170 (unregistered)",10],[12,"Code171","","171 (unregistered)",10],[12,"Code172","","172 (unregistered)",10],[12,"Code173","","173 (unregistered)",10],[12,"Code174","","174 (unregistered)",10],[12,"Code175","","175 (unregistered)",10],[12,"Code176","","176 (unregistered)",10],[12,"Code177","","177 (unregistered)",10],[12,"Code178","","178 (unregistered)",10],[12,"Code179","","179 (unregistered)",10],[12,"Code180","","180 (unregistered)",10],[12,"Code181","","181 (unregistered)",10],[12,"Code182","","182 (unregistered)",10],[12,"Code183","","183 (unregistered)",10],[12,"Code184","","184 (unregistered)",10],[12,"Code185","","185 (unregistered)",10],[12,"Code186","","186 (unregistered)",10],[12,"Code187","","187 (unregistered)",10],[12,"Code188","","188 (unregistered)",10],[12,"Code189","","189 (unregistered)",10],[12,"Code190","","190 (unregistered)",10],[12,"Code191","","191 (unregistered)",10],[12,"Code192","","192 (unregistered)",10],[12,"Code193","","193 (unregistered)",10],[12,"Code194","","194 (unregistered)",10],[12,"Code195","","195 (unregistered)",10],[12,"Code196","","196 (unregistered)",10],[12,"Code197","","197 (unregistered)",10],[12,"Code198","","198 (unregistered)",10],[12,"Code199","","199 (unregistered)",10],[12,"Ok","","200 OK",10],[12,"Created","","201 Created",10],[12,"Accepted","","202 Accepted",10],[12,"NonAuthoritativeInformation","","203 Non-Authoritative Information",10],[12,"NoContent","","204 No Content",10],[12,"ResetContent","","205 Reset Content",10],[12,"PartialContent","","206 Partial Content",10],[12,"MultiStatus","","207 Multi-Status",10],[12,"AlreadyReported","","208 Already Reported",10],[12,"Code209","","209 (unregistered)",10],[12,"Code210","","210 (unregistered)",10],[12,"Code211","","211 (unregistered)",10],[12,"Code212","","212 (unregistered)",10],[12,"Code213","","213 (unregistered)",10],[12,"Code214","","214 (unregistered)",10],[12,"Code215","","215 (unregistered)",10],[12,"Code216","","216 (unregistered)",10],[12,"Code217","","217 (unregistered)",10],[12,"Code218","","218 (unregistered)",10],[12,"Code219","","219 (unregistered)",10],[12,"Code220","","220 (unregistered)",10],[12,"Code221","","221 (unregistered)",10],[12,"Code222","","222 (unregistered)",10],[12,"Code223","","223 (unregistered)",10],[12,"Code224","","224 (unregistered)",10],[12,"Code225","","225 (unregistered)",10],[12,"ImUsed","","226 IM Used",10],[12,"Code227","","227 (unregistered)",10],[12,"Code228","","228 (unregistered)",10],[12,"Code229","","229 (unregistered)",10],[12,"Code230","","230 (unregistered)",10],[12,"Code231","","231 (unregistered)",10],[12,"Code232","","232 (unregistered)",10],[12,"Code233","","233 (unregistered)",10],[12,"Code234","","234 (unregistered)",10],[12,"Code235","","235 (unregistered)",10],[12,"Code236","","236 (unregistered)",10],[12,"Code237","","237 (unregistered)",10],[12,"Code238","","238 (unregistered)",10],[12,"Code239","","239 (unregistered)",10],[12,"Code240","","240 (unregistered)",10],[12,"Code241","","241 (unregistered)",10],[12,"Code242","","242 (unregistered)",10],[12,"Code243","","243 (unregistered)",10],[12,"Code244","","244 (unregistered)",10],[12,"Code245","","245 (unregistered)",10],[12,"Code246","","246 (unregistered)",10],[12,"Code247","","247 (unregistered)",10],[12,"Code248","","248 (unregistered)",10],[12,"Code249","","249 (unregistered)",10],[12,"Code250","","250 (unregistered)",10],[12,"Code251","","251 (unregistered)",10],[12,"Code252","","252 (unregistered)",10],[12,"Code253","","253 (unregistered)",10],[12,"Code254","","254 (unregistered)",10],[12,"Code255","","255 (unregistered)",10],[12,"Code256","","256 (unregistered)",10],[12,"Code257","","257 (unregistered)",10],[12,"Code258","","258 (unregistered)",10],[12,"Code259","","259 (unregistered)",10],[12,"Code260","","260 (unregistered)",10],[12,"Code261","","261 (unregistered)",10],[12,"Code262","","262 (unregistered)",10],[12,"Code263","","263 (unregistered)",10],[12,"Code264","","264 (unregistered)",10],[12,"Code265","","265 (unregistered)",10],[12,"Code266","","266 (unregistered)",10],[12,"Code267","","267 (unregistered)",10],[12,"Code268","","268 (unregistered)",10],[12,"Code269","","269 (unregistered)",10],[12,"Code270","","270 (unregistered)",10],[12,"Code271","","271 (unregistered)",10],[12,"Code272","","272 (unregistered)",10],[12,"Code273","","273 (unregistered)",10],[12,"Code274","","274 (unregistered)",10],[12,"Code275","","275 (unregistered)",10],[12,"Code276","","276 (unregistered)",10],[12,"Code277","","277 (unregistered)",10],[12,"Code278","","278 (unregistered)",10],[12,"Code279","","279 (unregistered)",10],[12,"Code280","","280 (unregistered)",10],[12,"Code281","","281 (unregistered)",10],[12,"Code282","","282 (unregistered)",10],[12,"Code283","","283 (unregistered)",10],[12,"Code284","","284 (unregistered)",10],[12,"Code285","","285 (unregistered)",10],[12,"Code286","","286 (unregistered)",10],[12,"Code287","","287 (unregistered)",10],[12,"Code288","","288 (unregistered)",10],[12,"Code289","","289 (unregistered)",10],[12,"Code290","","290 (unregistered)",10],[12,"Code291","","291 (unregistered)",10],[12,"Code292","","292 (unregistered)",10],[12,"Code293","","293 (unregistered)",10],[12,"Code294","","294 (unregistered)",10],[12,"Code295","","295 (unregistered)",10],[12,"Code296","","296 (unregistered)",10],[12,"Code297","","297 (unregistered)",10],[12,"Code298","","298 (unregistered)",10],[12,"Code299","","299 (unregistered)",10],[12,"MultipleChoices","","300 Multiple Choices",10],[12,"MovedPermanently","","301 Moved Permanently",10],[12,"Found","","302 Found",10],[12,"SeeOther","","303 See Other",10],[12,"NotModified","","304 Not Modified",10],[12,"UseProxy","","305 Use Proxy",10],[12,"SwitchProxy","","306 Switch Proxy",10],[12,"TemporaryRedirect","","307 Temporary Redirect",10],[12,"PermanentRedirect","","308 Permanent Redirect",10],[12,"Code309","","309 (unregistered)",10],[12,"Code310","","310 (unregistered)",10],[12,"Code311","","311 (unregistered)",10],[12,"Code312","","312 (unregistered)",10],[12,"Code313","","313 (unregistered)",10],[12,"Code314","","314 (unregistered)",10],[12,"Code315","","315 (unregistered)",10],[12,"Code316","","316 (unregistered)",10],[12,"Code317","","317 (unregistered)",10],[12,"Code318","","318 (unregistered)",10],[12,"Code319","","319 (unregistered)",10],[12,"Code320","","320 (unregistered)",10],[12,"Code321","","321 (unregistered)",10],[12,"Code322","","322 (unregistered)",10],[12,"Code323","","323 (unregistered)",10],[12,"Code324","","324 (unregistered)",10],[12,"Code325","","325 (unregistered)",10],[12,"Code326","","326 (unregistered)",10],[12,"Code327","","327 (unregistered)",10],[12,"Code328","","328 (unregistered)",10],[12,"Code329","","329 (unregistered)",10],[12,"Code330","","330 (unregistered)",10],[12,"Code331","","331 (unregistered)",10],[12,"Code332","","332 (unregistered)",10],[12,"Code333","","333 (unregistered)",10],[12,"Code334","","334 (unregistered)",10],[12,"Code335","","335 (unregistered)",10],[12,"Code336","","336 (unregistered)",10],[12,"Code337","","337 (unregistered)",10],[12,"Code338","","338 (unregistered)",10],[12,"Code339","","339 (unregistered)",10],[12,"Code340","","340 (unregistered)",10],[12,"Code341","","341 (unregistered)",10],[12,"Code342","","342 (unregistered)",10],[12,"Code343","","343 (unregistered)",10],[12,"Code344","","344 (unregistered)",10],[12,"Code345","","345 (unregistered)",10],[12,"Code346","","346 (unregistered)",10],[12,"Code347","","347 (unregistered)",10],[12,"Code348","","348 (unregistered)",10],[12,"Code349","","349 (unregistered)",10],[12,"Code350","","350 (unregistered)",10],[12,"Code351","","351 (unregistered)",10],[12,"Code352","","352 (unregistered)",10],[12,"Code353","","353 (unregistered)",10],[12,"Code354","","354 (unregistered)",10],[12,"Code355","","355 (unregistered)",10],[12,"Code356","","356 (unregistered)",10],[12,"Code357","","357 (unregistered)",10],[12,"Code358","","358 (unregistered)",10],[12,"Code359","","359 (unregistered)",10],[12,"Code360","","360 (unregistered)",10],[12,"Code361","","361 (unregistered)",10],[12,"Code362","","362 (unregistered)",10],[12,"Code363","","363 (unregistered)",10],[12,"Code364","","364 (unregistered)",10],[12,"Code365","","365 (unregistered)",10],[12,"Code366","","366 (unregistered)",10],[12,"Code367","","367 (unregistered)",10],[12,"Code368","","368 (unregistered)",10],[12,"Code369","","369 (unregistered)",10],[12,"Code370","","370 (unregistered)",10],[12,"Code371","","371 (unregistered)",10],[12,"Code372","","372 (unregistered)",10],[12,"Code373","","373 (unregistered)",10],[12,"Code374","","374 (unregistered)",10],[12,"Code375","","375 (unregistered)",10],[12,"Code376","","376 (unregistered)",10],[12,"Code377","","377 (unregistered)",10],[12,"Code378","","378 (unregistered)",10],[12,"Code379","","379 (unregistered)",10],[12,"Code380","","380 (unregistered)",10],[12,"Code381","","381 (unregistered)",10],[12,"Code382","","382 (unregistered)",10],[12,"Code383","","383 (unregistered)",10],[12,"Code384","","384 (unregistered)",10],[12,"Code385","","385 (unregistered)",10],[12,"Code386","","386 (unregistered)",10],[12,"Code387","","387 (unregistered)",10],[12,"Code388","","388 (unregistered)",10],[12,"Code389","","389 (unregistered)",10],[12,"Code390","","390 (unregistered)",10],[12,"Code391","","391 (unregistered)",10],[12,"Code392","","392 (unregistered)",10],[12,"Code393","","393 (unregistered)",10],[12,"Code394","","394 (unregistered)",10],[12,"Code395","","395 (unregistered)",10],[12,"Code396","","396 (unregistered)",10],[12,"Code397","","397 (unregistered)",10],[12,"Code398","","398 (unregistered)",10],[12,"Code399","","399 (unregistered)",10],[12,"BadRequest","","400 Bad Request",10],[12,"Unauthorized","","401 Unauthorized",10],[12,"PaymentRequired","","402 Payment Required",10],[12,"Forbidden","","403 Forbidden",10],[12,"NotFound","","404 Not Found",10],[12,"MethodNotAllowed","","405 Method Not Allowed",10],[12,"NotAcceptable","","406 Not Acceptable",10],[12,"ProxyAuthenticationRequired","","407 Proxy Authentication Required",10],[12,"RequestTimeout","","408 Request Timeout",10],[12,"Conflict","","409 Conflict",10],[12,"Gone","","410 Gone",10],[12,"LengthRequired","","411 Length Required",10],[12,"PreconditionFailed","","412 Precondition Failed",10],[12,"RequestEntityTooLarge","","413 Request Entity Too Large",10],[12,"RequestUriTooLong","","414 Request-URI Too Long",10],[12,"UnsupportedMediaType","","415 Unsupported Media Type",10],[12,"RequestedRangeNotSatisfiable","","416 Requested Range Not Satisfiable",10],[12,"ExpectationFailed","","417 Expectation Failed",10],[12,"ImATeapot","","418 I'm a teapot",10],[12,"AuthenticationTimeout","","419 Authentication Timeout",10],[12,"Code420","","420 (unregistered)",10],[12,"Code421","","421 (unregistered)",10],[12,"UnprocessableEntity","","422 Unprocessable Entity",10],[12,"Locked","","423 Locked",10],[12,"FailedDependency","","424 Failed Dependency",10],[12,"UnorderedCollection","","425 Unordered Collection",10],[12,"UpgradeRequired","","426 Upgrade Required",10],[12,"Code427","","427 (unregistered)",10],[12,"PreconditionRequired","","428 Precondition Required",10],[12,"TooManyRequests","","429 Too Many Requests",10],[12,"Code430","","430 (unregistered)",10],[12,"RequestHeaderFieldsTooLarge","","431 Request Header Fields Too Large",10],[12,"Code432","","432 (unregistered)",10],[12,"Code433","","433 (unregistered)",10],[12,"Code434","","434 (unregistered)",10],[12,"Code435","","435 (unregistered)",10],[12,"Code436","","436 (unregistered)",10],[12,"Code437","","437 (unregistered)",10],[12,"Code438","","438 (unregistered)",10],[12,"Code439","","439 (unregistered)",10],[12,"Code440","","440 (unregistered)",10],[12,"Code441","","441 (unregistered)",10],[12,"Code442","","442 (unregistered)",10],[12,"Code443","","443 (unregistered)",10],[12,"Code444","","444 (unregistered)",10],[12,"Code445","","445 (unregistered)",10],[12,"Code446","","446 (unregistered)",10],[12,"Code447","","447 (unregistered)",10],[12,"Code448","","448 (unregistered)",10],[12,"Code449","","449 (unregistered)",10],[12,"Code450","","450 (unregistered)",10],[12,"UnavailableForLegalReasons","","451 Unavailable For Legal Reasons",10],[12,"Code452","","452 (unregistered)",10],[12,"Code453","","453 (unregistered)",10],[12,"Code454","","454 (unregistered)",10],[12,"Code455","","455 (unregistered)",10],[12,"Code456","","456 (unregistered)",10],[12,"Code457","","457 (unregistered)",10],[12,"Code458","","458 (unregistered)",10],[12,"Code459","","459 (unregistered)",10],[12,"Code460","","460 (unregistered)",10],[12,"Code461","","461 (unregistered)",10],[12,"Code462","","462 (unregistered)",10],[12,"Code463","","463 (unregistered)",10],[12,"Code464","","464 (unregistered)",10],[12,"Code465","","465 (unregistered)",10],[12,"Code466","","466 (unregistered)",10],[12,"Code467","","467 (unregistered)",10],[12,"Code468","","468 (unregistered)",10],[12,"Code469","","469 (unregistered)",10],[12,"Code470","","470 (unregistered)",10],[12,"Code471","","471 (unregistered)",10],[12,"Code472","","472 (unregistered)",10],[12,"Code473","","473 (unregistered)",10],[12,"Code474","","474 (unregistered)",10],[12,"Code475","","475 (unregistered)",10],[12,"Code476","","476 (unregistered)",10],[12,"Code477","","477 (unregistered)",10],[12,"Code478","","478 (unregistered)",10],[12,"Code479","","479 (unregistered)",10],[12,"Code480","","480 (unregistered)",10],[12,"Code481","","481 (unregistered)",10],[12,"Code482","","482 (unregistered)",10],[12,"Code483","","483 (unregistered)",10],[12,"Code484","","484 (unregistered)",10],[12,"Code485","","485 (unregistered)",10],[12,"Code486","","486 (unregistered)",10],[12,"Code487","","487 (unregistered)",10],[12,"Code488","","488 (unregistered)",10],[12,"Code489","","489 (unregistered)",10],[12,"Code490","","490 (unregistered)",10],[12,"Code491","","491 (unregistered)",10],[12,"Code492","","492 (unregistered)",10],[12,"Code493","","493 (unregistered)",10],[12,"Code494","","494 (unregistered)",10],[12,"Code495","","495 (unregistered)",10],[12,"Code496","","496 (unregistered)",10],[12,"Code497","","497 (unregistered)",10],[12,"Code498","","498 (unregistered)",10],[12,"Code499","","499 (unregistered)",10],[12,"InternalServerError","","500 Internal Server Error",10],[12,"NotImplemented","","501 Not Implemented",10],[12,"BadGateway","","502 Bad Gateway",10],[12,"ServiceUnavailable","","503 Service Unavailable",10],[12,"GatewayTimeout","","504 Gateway Timeout",10],[12,"HttpVersionNotSupported","","505 HTTP Version Not Supported",10],[12,"VariantAlsoNegotiates","","506 Variant Also Negotiates",10],[12,"InsufficientStorage","","507 Insufficient Storage",10],[12,"LoopDetected","","508 Loop Detected",10],[12,"Code509","","509 (unregistered)",10],[12,"NotExtended","","510 Not Extended",10],[12,"NetworkAuthenticationRequired","","511 Network Authentication Required",10],[12,"Code512","","512 (unregistered)",10],[12,"Code513","","513 (unregistered)",10],[12,"Code514","","514 (unregistered)",10],[12,"Code515","","515 (unregistered)",10],[12,"Code516","","516 (unregistered)",10],[12,"Code517","","517 (unregistered)",10],[12,"Code518","","518 (unregistered)",10],[12,"Code519","","519 (unregistered)",10],[12,"Code520","","520 (unregistered)",10],[12,"Code521","","521 (unregistered)",10],[12,"Code522","","522 (unregistered)",10],[12,"Code523","","523 (unregistered)",10],[12,"Code524","","524 (unregistered)",10],[12,"Code525","","525 (unregistered)",10],[12,"Code526","","526 (unregistered)",10],[12,"Code527","","527 (unregistered)",10],[12,"Code528","","528 (unregistered)",10],[12,"Code529","","529 (unregistered)",10],[12,"Code530","","530 (unregistered)",10],[12,"Code531","","531 (unregistered)",10],[12,"Code532","","532 (unregistered)",10],[12,"Code533","","533 (unregistered)",10],[12,"Code534","","534 (unregistered)",10],[12,"Code535","","535 (unregistered)",10],[12,"Code536","","536 (unregistered)",10],[12,"Code537","","537 (unregistered)",10],[12,"Code538","","538 (unregistered)",10],[12,"Code539","","539 (unregistered)",10],[12,"Code540","","540 (unregistered)",10],[12,"Code541","","541 (unregistered)",10],[12,"Code542","","542 (unregistered)",10],[12,"Code543","","543 (unregistered)",10],[12,"Code544","","544 (unregistered)",10],[12,"Code545","","545 (unregistered)",10],[12,"Code546","","546 (unregistered)",10],[12,"Code547","","547 (unregistered)",10],[12,"Code548","","548 (unregistered)",10],[12,"Code549","","549 (unregistered)",10],[12,"Code550","","550 (unregistered)",10],[12,"Code551","","551 (unregistered)",10],[12,"Code552","","552 (unregistered)",10],[12,"Code553","","553 (unregistered)",10],[12,"Code554","","554 (unregistered)",10],[12,"Code555","","555 (unregistered)",10],[12,"Code556","","556 (unregistered)",10],[12,"Code557","","557 (unregistered)",10],[12,"Code558","","558 (unregistered)",10],[12,"Code559","","559 (unregistered)",10],[12,"Code560","","560 (unregistered)",10],[12,"Code561","","561 (unregistered)",10],[12,"Code562","","562 (unregistered)",10],[12,"Code563","","563 (unregistered)",10],[12,"Code564","","564 (unregistered)",10],[12,"Code565","","565 (unregistered)",10],[12,"Code566","","566 (unregistered)",10],[12,"Code567","","567 (unregistered)",10],[12,"Code568","","568 (unregistered)",10],[12,"Code569","","569 (unregistered)",10],[12,"Code570","","570 (unregistered)",10],[12,"Code571","","571 (unregistered)",10],[12,"Code572","","572 (unregistered)",10],[12,"Code573","","573 (unregistered)",10],[12,"Code574","","574 (unregistered)",10],[12,"Code575","","575 (unregistered)",10],[12,"Code576","","576 (unregistered)",10],[12,"Code577","","577 (unregistered)",10],[12,"Code578","","578 (unregistered)",10],[12,"Code579","","579 (unregistered)",10],[12,"Code580","","580 (unregistered)",10],[12,"Code581","","581 (unregistered)",10],[12,"Code582","","582 (unregistered)",10],[12,"Code583","","583 (unregistered)",10],[12,"Code584","","584 (unregistered)",10],[12,"Code585","","585 (unregistered)",10],[12,"Code586","","586 (unregistered)",10],[12,"Code587","","587 (unregistered)",10],[12,"Code588","","588 (unregistered)",10],[12,"Code589","","589 (unregistered)",10],[12,"Code590","","590 (unregistered)",10],[12,"Code591","","591 (unregistered)",10],[12,"Code592","","592 (unregistered)",10],[12,"Code593","","593 (unregistered)",10],[12,"Code594","","594 (unregistered)",10],[12,"Code595","","595 (unregistered)",10],[12,"Code596","","596 (unregistered)",10],[12,"Code597","","597 (unregistered)",10],[12,"Code598","","598 (unregistered)",10],[12,"Code599","","599 (unregistered)",10],[0,"method","iron","HTTP Methods"],[2,"Method","iron::method","The Request Method (VERB)"],[12,"Options","","OPTIONS",14],[12,"Get","","GET",14],[12,"Post","","POST",14],[12,"Put","","PUT",14],[12,"Delete","","DELETE",14],[12,"Head","","HEAD",14],[12,"Trace","","TRACE",14],[12,"Connect","","CONNECT",14],[12,"Patch","","PATCH",14],[12,"Extension","","Method extentions. An example would be `let m = Extension(\"FOO\".to_string())`.",14],[0,"middleware","iron","Iron's Middleware and Handler System"],[1,"ChainBuilder","iron::middleware","The default Chain used in Iron."],[6,"Handler","","`Handler`s are responsible for handling requests by creating Responses from Requests."],[9,"call","","Produce a `Response` from a Request, with the possibility of error.",62],[10,"catch","","If `Handler`'s call method produces an Err, then this method is called\nto produce a `Response` and possibly handle the error.",62],[6,"BeforeMiddleware","","`BeforeMiddleware` are fired before a `Handler` is called inside of a Chain."],[9,"before","","Do whatever work this middleware should do with a `Request` object.",63],[10,"catch","","Try to `catch` an error thrown by this Middleware or a previous `BeforeMiddleware`.",63],[6,"AfterMiddleware","","`AfterMiddleware` are fired after a `Handler` is called inside of a Chain."],[9,"after","","Do whatever work this middleware needs to do with both a `Request` and `Response` objects.",64],[10,"catch","","Try to catch an error thrown by previous `AfterMiddleware`, the `Handler`, or a previous\n`BeforeMiddleware`.",64],[6,"AroundMiddleware","","AroundMiddleware are used to wrap and replace the `Handler` in a `Chain`."],[9,"around","","Produce a `Handler` from this `AroundMiddleware` given another `Handler`.",65],[6,"Chain","","Chain's hold `BeforeMiddleware`, a `Handler`, and `AfterMiddleware` and are responsible\nfor correctly dispatching a `Request` through them."],[9,"new","","Create a new Chain from a `Handler`.",66],[9,"link","","Link both a before and after middleware to the chain at once.",66],[9,"link_before","","Link a `BeforeMiddleware` to the Chain.",66],[9,"link_after","","Link a `AfterMiddleware` to the Chain.",66],[9,"around","","Wrap the Chain's `Handler` using an AroundMiddleware.",66],[10,"new","","Construct a new ChainBuilder from a `Handler`.",67],[10,"new","","",67],[10,"link","","",67],[10,"link_before","","",67],[10,"link_after","","",67],[10,"around","","",67],[10,"call","","",67],[10,"catch","","",67],[10,"call","alloc::boxed","",34],[10,"catch","","",34],[10,"call","alloc::arc","",68],[10,"catch","","",68],[0,"errors","iron","Some common error types for use within Iron and in downstream middleware."],[1,"FileError","iron::errors","The standard Error implementation used to wrap IoErrors\nthat occur when reading or writing files or otherwise\ninteracting with the file system."],[1,"HyperError","","An error occuring within Hyper, Iron's underlying HTTP implementation."],[1,"InvalidAddressError","","Occurs when the address to listen on is not valid."],[10,"eq","","",69],[10,"ne","","",69],[10,"clone","","",69],[10,"fmt","","",69],[10,"new","","Create a new FileError from an IoError.",69],[10,"unwrap","","Access the original IoError.",69],[10,"name","","",69],[10,"description","","",69],[10,"fmt","","",70],[10,"name","","",70],[10,"fmt","","",71],[10,"new","","Create a new InvalidAddressError.",71],[10,"name","","",71],[0,"response","iron","Iron's HTTP Response representation and associated methods."],[1,"Response","iron::response","The response representation given to `Middleware`"],[11,"status","","The response status-code.",72],[11,"headers","","The headers of the response.",72],[11,"extensions","","A TypeMap to be used as an extensible storage for data\nassociated with this Response.",72],[11,"body","","The body of the response.",72],[0,"modifiers","","Defines a series of convenience modifiers for editing Responses"],[1,"ContentType","iron::response::modifiers","A response modifier for setting the content-type header."],[1,"Body","","A response modifier for setting the body of a response."],[1,"Status","","A modifier for setting the status of a response."],[1,"Redirect","","A modifier for creating redirect responses."],[6,"Bodyable","","Something that can be used to set the body of a response."],[9,"set_body","","Set the body of this response, possibly also setting headers.",73],[10,"new","","Create a new ContentType modifier from  a content-type header value.",74],[10,"modify","","",74],[10,"modify","","",75],[10,"set_body","alloc::boxed","",34],[10,"set_body","collections::string","",17],[10,"set_body","collections::vec","",76],[10,"set_body","std::io::fs","",77],[10,"set_body","std::path::posix","Set the body to the contents of the File at this path.",78],[10,"modify","iron::response::modifiers","",79],[10,"modify","","",80],[10,"new","iron::response","Construct a blank Response",72],[10,"fmt","","",72],[10,"extensions","","",72],[10,"extensions_mut","","",72],[1,"HttpResponse","","The outgoing half for a Tcp connection, created by a `Server` and given to a `Handler`."],[11,"version","","The HTTP version of this response.",50],[10,"clone","iron","",1],[10,"eq","","",1],[10,"ne","","",1],[10,"parse","","Create a URL from a string.",1],[10,"from_generic_url","","Create a `Url` from a `rust-url` `Url`.",1],[10,"into_generic_url","","Create a `rust-url` `Url` from a `Url`.",1],[10,"fmt","","",1],[10,"encode","","",1],[10,"decode","","",1],[10,"fmt","","",0],[10,"from_http","","Create a request from an HttpRequest.",0],[10,"extensions","","",0],[10,"extensions_mut","","",0],[10,"listen","","Kick off the server process.",2],[10,"listen_with","","Kick off the server process with X threads.",2],[10,"new","","Instantiate a new instance of `Iron`.",2],[10,"handle","","",2],[4,"IronError","",""],[4,"IronResult","",""],[1,"TypeMap","","A map keyed by types."],[0,"headers","","Common Headers\nA Collection of Header implementations for common HTTP Headers."],[0,"accept","iron::headers","Exposes the Accept header."],[1,"Accept","iron::headers::accept","The `Accept` header."],[0,"authorization","iron::headers","Exposes the Authorization header."],[1,"Authorization","iron::headers::authorization","The `Authorization` header field."],[6,"Scheme","","An Authorization scheme to be used in the header."],[9,"scheme","","An optional Scheme name.",81],[9,"fmt_scheme","","Format the Scheme data into a header value.",81],[1,"Basic","","Credential holder for Basic Authentication"],[11,"username","","The username as a possibly empty string",18],[11,"password","","The password. `None` if the `:` delimiter character was not\npart of the parsed input.",18],[0,"cookie","iron::headers","Exposes the Cookie header."],[1,"Cookies","iron::headers::cookie","The `Cookie` header. Defined in [RFC6265](tools.ietf.org/html/rfc6265#section-5.4):"],[0,"connection","iron::headers","Exposes the Connection header."],[1,"Connection","iron::headers::connection","The `Connection` header."],[2,"ConnectionOption","","Values that can be in the `Connection` header."],[12,"KeepAlive","","The `keep-alive` connection value.",21],[12,"Close","","The `close` connection value.",21],[12,"ConnectionHeader","","Values in the Connection header that are supposed to be names of other Headers.",21],[0,"content_length","iron::headers","Exposes the ContentLength header."],[1,"ContentLength","iron::headers::content_length","The `Content-Length` header."],[0,"content_type","iron::headers","Exposes the ContentType header."],[1,"ContentType","iron::headers::content_type","The `Content-Type` header."],[0,"date","iron::headers","Exposes the Date header."],[1,"Date","iron::headers::date","The `Date` header field."],[0,"host","iron::headers","Exposes the Host header."],[1,"Host","iron::headers::host","The `Host` header."],[11,"hostname","","The hostname, such a example.domain.",25],[11,"port","","An optional port number.",25],[0,"location","iron::headers","Exposes the Location header."],[1,"Location","iron::headers::location","The `Location` header."],[0,"server","iron::headers","Exposes the Server header."],[1,"Server","iron::headers::server","The `Server` header field."],[0,"set_cookie","iron::headers","Exposes the Set-Cookie header."],[1,"SetCookie","iron::headers::set_cookie","The `Set-Cookie` header"],[0,"transfer_encoding","iron::headers","Exposes the TransferEncoding header."],[1,"TransferEncoding","iron::headers::transfer_encoding","The `Transfer-Encoding` header."],[2,"Encoding","","A value to be used with the `Transfer-Encoding` header."],[12,"Chunked","","The `chunked` encoding.",30],[12,"Gzip","","The `gzip` encoding.",30],[12,"Deflate","","The `deflate` encoding.",30],[12,"Compress","","The `compress` encoding.",30],[12,"EncodingExt","","Some other encoding that is less common, can be any String.",30],[0,"upgrade","iron::headers","Exposes the Upgrade header."],[1,"Upgrade","iron::headers::upgrade","The `Upgrade` header."],[2,"Protocol","","Protocol values that can appear in the Upgrade header."],[12,"WebSocket","","The websocket protocol.",32],[12,"ProtocolExt","","Some other less common protocol.",32],[0,"user_agent","iron::headers","Exposes the UserAgent header."],[1,"UserAgent","iron::headers::user_agent","The `User-Agent` header field."],[0,"util","iron::headers","Utility functions for Header implementations."],[3,"from_one_raw_str","iron::headers::util","Reads a single raw string when parsing a header"],[3,"from_comma_delimited","","Reads a comma-delimited raw string into a Vec."],[3,"fmt_comma_delimited","","Format an array into a comma-delimited string."],[1,"Authorization","iron::headers","The `Authorization` header field."],[1,"Host","","The `Host` header."],[11,"hostname","","The hostname, such a example.domain.",25],[11,"port","","An optional port number.",25],[1,"Date","","The `Date` header field."],[1,"Server","","The `Server` header field."],[1,"Cookies","","The `Cookie` header. Defined in [RFC6265](tools.ietf.org/html/rfc6265#section-5.4):"],[1,"UserAgent","","The `User-Agent` header field."],[1,"TransferEncoding","","The `Transfer-Encoding` header."],[1,"ContentType","","The `Content-Type` header."],[1,"Location","","The `Location` header."],[1,"Connection","","The `Connection` header."],[1,"ContentLength","","The `Content-Length` header."],[1,"Upgrade","","The `Upgrade` header."],[1,"Accept","","The `Accept` header."],[1,"SetCookie","","The `Set-Cookie` header"],[1,"Headers","iron","A map of header fields on requests and responses."],[6,"Plugin","","An interface for plugins that cache values between calls."],[9,"get","","Return a copy of the plugin's produced value.",4],[9,"get_ref","","Return a reference to the plugin's produced value.",4],[9,"get_mut","","Return a mutable reference to the plugin's produced value.",4],[6,"Set","","A blanket trait providing the set and set_mut methods for all types."],[9,"set","","Modify self using the provided modifier.",3],[9,"set_mut","","Modify self through a mutable reference with the provided modifier.",3],[6,"Error","",""],[9,"name","","",82],[9,"description","","",82],[9,"cause","","",82],[6,"ErrorRefExt","",""],[9,"is","","",5],[9,"downcast","","",5],[0,"mime","",""],[1,"Mime","iron::mime","Mime, or Media Type. Encapsulates common registers types."],[2,"TopLevel","",""],[12,"Star","","",58],[12,"Text","","",58],[12,"Image","","",58],[12,"Audio","","",58],[12,"Video","","",58],[12,"Application","","",58],[12,"Multipart","","",58],[12,"Message","","",58],[12,"Model","","",58],[12,"Ext","","",58],[2,"SubLevel","",""],[12,"Star","","",59],[12,"Plain","","",59],[12,"Html","","",59],[12,"Xml","","",59],[12,"Javascript","","",59],[12,"Css","","",59],[12,"Json","","",59],[12,"WwwFormUrlEncoded","","",59],[12,"FormData","","",59],[12,"Png","","",59],[12,"Gif","","",59],[12,"Bmp","","",59],[12,"Jpeg","","",59],[12,"Ext","","",59],[2,"Attr","",""],[12,"Charset","","",60],[12,"Q","","",60],[12,"Ext","","",60],[2,"Value","",""],[12,"Utf8","","",61],[12,"Ext","","",61],[4,"Param","",""]],"paths":[[1,"Request"],[1,"Url"],[1,"Iron"],[6,"Set"],[6,"Plugin"],[6,"ErrorRefExt"],[1,"TypeMap"],[1,"OccupiedEntry"],[1,"VacantEntry"],[6,"Modifier"],[2,"Status"],[1,"Trace"],[1,"Request"],[1,"Response"],[2,"Method"],[1,"Accept"],[1,"Authorization"],[1,"String"],[1,"Basic"],[1,"Cookies"],[1,"Connection"],[2,"ConnectionOption"],[1,"ContentLength"],[1,"ContentType"],[1,"Date"],[1,"Host"],[1,"Location"],[1,"Server"],[1,"SetCookie"],[1,"TransferEncoding"],[2,"Encoding"],[1,"Upgrade"],[2,"Protocol"],[1,"UserAgent"],[1,"Box"],[1,"Headers"],[1,"HeadersItems"],[1,"HeaderView"],[1,"Item"],[1,"RWLock"],[1,"CaseInsensitive"],[1,"HeaderFormatter"],[2,"HttpReader"],[2,"HttpWriter"],[1,"LineEnding"],[1,"RawStatus"],[1,"HttpListener"],[1,"HttpAcceptor"],[2,"HttpStream"],[1,"Request"],[1,"HttpResponse"],[1,"Server"],[1,"Listening"],[2,"StatusClass"],[2,"RequestUri"],[2,"HttpVersion"],[2,"HttpError"],[1,"Mime"],[2,"TopLevel"],[2,"SubLevel"],[2,"Attr"],[2,"Value"],[6,"Handler"],[6,"BeforeMiddleware"],[6,"AfterMiddleware"],[6,"AroundMiddleware"],[6,"Chain"],[1,"ChainBuilder"],[1,"Arc"],[1,"FileError"],[1,"HyperError"],[1,"InvalidAddressError"],[1,"Response"],[6,"Bodyable"],[1,"ContentType"],[1,"Body"],[1,"Vec"],[1,"File"],[1,"Path"],[1,"Status"],[1,"Redirect"],[6,"Scheme"],[6,"Error"]]};
searchIndex['router'] = {"items":[[0,"","router","`Router` provides a fast router handler for the Iron web framework."],[1,"Router","","`Router` provides an interface for creating complex routes as middleware\nfor the Iron framework."],[10,"new","","`new` constructs a new, blank `Router`.",0],[10,"route","","Add a new route to a `Router`, matching both a method and glob pattern.",0],[10,"get","","Like route, but specialized to the `Get` method.",0],[10,"post","","Like route, but specialized to the `Post` method.",0],[10,"put","","Like route, but specialized to the `Put` method.",0],[10,"delete","","Like route, but specialized to the `Delete` method.",0],[10,"head","","Like route, but specialized to the `Head` method.",0],[10,"patch","","Like route, but specialized to the `Patch` method.",0],[10,"options","","Like route, but specialized to the `Options` method.",0],[10,"error","","Add a Handler to be used for this Router's `catch` method.",0],[10,"call","","",0],[10,"catch","","",0],[10,"new","route-recognizer","",1],[10,"insert","","",1],[10,"find","","",1],[10,"clone","route-recognizer::nfa","",2],[10,"clone_from","","",2],[10,"assert_receiver_is_total_eq","","",2],[10,"eq","","",2],[10,"ne","","",2],[10,"ne","","",2],[10,"new","","",2],[10,"insert","","",2],[10,"contains","","",2],[10,"clone","","",3],[10,"clone_from","","",3],[10,"assert_receiver_is_total_eq","","",3],[10,"eq","","",3],[10,"ne","","",3],[10,"ne","","",3],[10,"any","","",3],[10,"valid","","",3],[10,"invalid","","",3],[10,"valid_char","","",3],[10,"invalid_char","","",3],[10,"matches","","",3],[10,"clone","","",4],[10,"clone_from","","",4],[10,"new","","",4],[10,"start_capture","","",4],[10,"end_capture","","",4],[10,"extract","","",4],[10,"clone","","",5],[10,"clone_from","","",5],[10,"eq","","",5],[10,"ne","","",5],[10,"new","","",5],[10,"new","","",6],[10,"clone","","",7],[10,"clone_from","","",7],[10,"new","","",7],[10,"process","","",7],[10,"get","","",7],[10,"get_mut","","",7],[10,"put","","",7],[10,"put_state","","",7],[10,"acceptance","","",7],[10,"start_capture","","",7],[10,"end_capture","","",7],[10,"metadata","","",7],[10,"clone","route-recognizer","",8],[10,"clone_from","","",8],[10,"new","","",8],[10,"cmp","","",8],[10,"partial_cmp","","",8],[10,"lt","","",8],[10,"le","","",8],[10,"gt","","",8],[10,"ge","","",8],[10,"eq","","",8],[10,"ne","","",8],[10,"assert_receiver_is_total_eq","","",8],[10,"fmt","","",1],[10,"clone","","",1],[10,"clone_from","","",1],[10,"eq","","",1],[10,"ne","","",1],[10,"ne","","",1],[10,"index","","",1],[10,"new","","",9],[10,"clone","","",10],[10,"clone_from","","",10],[10,"new","","",10],[10,"add","","",10],[10,"recognize","","",10],[1,"Params","router",""]],"paths":[[1,"Router"],[1,"Params"],[1,"CharSet"],[2,"CharacterClass"],[1,"Thread"],[1,"State"],[1,"Match"],[1,"NFA"],[1,"Metadata"],[1,"Match"],[1,"Router"]]};
searchIndex['persistent'] = {"items":[[0,"","persistent","A set of middleware for sharing data between requests in the Iron\nframework."],[1,"State","","Middleware for data that persists between requests with read and write capabilities."],[1,"Read","","Middleware for data that persists between Requests with read-only capabilities."],[1,"Write","","Middleware for data that persists between Requests for data which mostly\nneeds to be written instead of read."],[10,"clone","","",0],[10,"clone","","",1],[10,"clone","","",2],[10,"eval","","",1],[10,"eval","","",0],[10,"eval","","",2],[10,"before","","",1],[10,"after","","",1],[10,"before","","",0],[10,"after","","",0],[10,"before","","",2],[10,"after","","",2],[10,"both","","Construct a new pair of `State` that can be passed directly to `Chain::link`.",1],[10,"one","","Construct a new `State` that can be passed directly to\n`Chain::link_before` or `Chain::link_after`.",1],[10,"both","","Construct a new pair of `Read` that can be passed directly to `Chain::link`.",0],[10,"one","","Construct a new `Read` that can be passed directly to\n`Chain::link_before` or `Chain::link_after`.",0],[10,"both","","Construct a new pair of `Write` that can be passed directly to `Chain::link`.",2],[10,"one","","Construct a new `Write` that can be passed directly to\n`Chain::link_before` or `Chain::link_after`.",2]],"paths":[[1,"Read"],[1,"State"],[1,"Write"]]};
searchIndex['urlencoded'] = {"items":[[0,"","urlencoded","URL Encoded Plugin for Iron."],[1,"UrlEncodedQuery","","Plugin for `Request` that extracts URL encoded data from the URL query string."],[1,"UrlEncodedBody","","Plugin for `Request` that extracts URL encoded data from the request body."],[4,"QueryMap","","Hashmap mapping strings to vectors of strings."],[10,"eval","","",0],[10,"eval","","",1]],"paths":[[1,"UrlEncodedQuery"],[1,"UrlEncodedBody"]]};
initSearch(searchIndex);

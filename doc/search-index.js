var searchIndex = {};
searchIndex['iron'] = {"items":[[0,"","iron","The main crate for Iron."],[11,"new","typemap","Create a new, empty TypeMap.",0],[11,"insert","","Insert a value into the map with a specified key type.",0],[11,"find","","Find a value in the map and get a reference to it.",0],[11,"find_mut","","Find a value in the map and get a mutable reference to it.",0],[11,"get","","Find a value in the map and get a reference to it.",0],[11,"get_mut","","Find a value in the map and get a mutable reference to it.",0],[11,"contains","","Check if a key has an associated value stored in the map.",0],[11,"remove","","Remove a value from the map.",0],[11,"entry","","Get the given key's corresponding entry in the map for in-place manipulation.",0],[11,"data","","Read the underlying HashMap",0],[11,"data_mut","","Get a mutable reference to the underlying HashMap",0],[11,"len","","Get the number of values stored in the map.",0],[11,"is_empty","","Return true if the map contains no values.",0],[11,"clear","","Remove all entries from the map.",0],[11,"default","","",0],[11,"get","","Get a reference to the entry's value.",1],[11,"get_mut","","Get a mutable reference to the entry's value.",1],[11,"into_mut","","Transform the entry into a mutable reference with the same lifetime as the map.",1],[11,"insert","","Set the entry's value and return the previous value.",1],[11,"remove","","Move the entry's value out of the map, consuming the entry.",1],[11,"insert","","Set the entry's value and return a mutable reference to it.",2],[3,"TypeMap","iron","A map keyed by types."],[0,"headers","","Headers container, and common header fields."],[0,"parsing","iron::headers","Utility functions for Header implementations."],[5,"from_one_raw_str","iron::headers::parsing","Reads a single raw string when parsing a header"],[5,"from_comma_delimited","","Reads a comma-delimited raw header into a Vec."],[5,"from_one_comma_delimited","","Reads a comma-delimited raw string into a Vec."],[5,"fmt_comma_delimited","","Format an array into a comma-delimited string."],[5,"tm_from_str","","Get a Tm from HTTP date formats."],[8,"Header","iron::headers","A trait for any object that will represent a header field and value."],[10,"header_name","","Returns the name of the header field this belongs to.",3],[10,"parse_header","","Parse a header from a raw stream of bytes.",3],[8,"HeaderFormat","","A trait for any object that will represent a header field and value."],[10,"fmt_header","","Format a header to be output into a TcpStream.",4],[11,"new","hyper::header","Creates a new, empty headers map.",5],[11,"set","","Set a header field to the corresponding value.",5],[11,"get_raw","","Access the raw value of a header.",5],[11,"set_raw","","Set the raw value of a header, bypassing any typed headers.",5],[11,"remove_raw","","Remove a header set by set_raw",5],[11,"get","","Get a reference to the header field's value, if it exists.",5],[11,"get_mut","","Get a mutable reference to the header field's value, if it exists.",5],[11,"has","","Returns a boolean of whether a certain header is in the map.",5],[11,"remove","","Removes a header from the map, if one existed.\nReturns true if a header has been removed.",5],[11,"iter","","Returns an iterator over the header fields.",5],[11,"len","","Returns the number of headers in the map.",5],[11,"clear","","Remove all headers from the map.",5],[11,"headers","hyper::client::request","Read the Request headers.",6],[11,"method","","Read the Request method.",6],[11,"new","","Create a new client request.",6],[11,"with_connector","","Create a new client request with a specific underlying NetworkStream.",6],[11,"start","","Consume a Fresh Request, writing the headers and method,\nreturning a Streaming Request.",6],[11,"headers_mut","","Get a mutable reference to the Request headers.",6],[11,"send","","Completes writing the request, and returns a response to read from.",6],[11,"write","","",6],[11,"flush","","",6],[11,"new","hyper::client::response","Creates a new response from a server.",7],[11,"status_raw","","Get the raw status code and reason.",7],[11,"into_inner","","Consumes the Request to return the NetworkStream underneath.",7],[11,"read","","",7],[11,"new","hyper::client","Create a new Client.",8],[11,"set_ssl_verifier","","Set the SSL verifier callback for use with OpenSSL.",8],[11,"with_connector","","Create a new client with a specific connector.",8],[11,"set_redirect_policy","","Set the RedirectPolicy.",8],[11,"get","","Execute a Get request.",8],[11,"head","","Execute a Head request.",8],[11,"post","","Execute a Post request.",8],[11,"put","","Execute a Put request.",8],[11,"delete","","Execute a Delete request.",8],[11,"request","","Build a new request using this Client.",8],[11,"body","","Set a request body to be sent.",9],[11,"headers","","Add additional headers to the request.",9],[11,"header","","Add an individual new header to the request.",9],[11,"send","","Execute this request and receive a Response back.",9],[11,"read","","",10],[11,"into_body","","",10],[11,"into_url","url","",11],[11,"clone","hyper::client","",12],[11,"default","","",12],[11,"fmt","hyper::method","",13],[11,"hash","","",13],[11,"eq","","",13],[11,"ne","","",13],[11,"clone","","",13],[11,"safe","","Whether a method is considered \"safe\", meaning the request is\nessentially read-only.",13],[11,"idempotent","","Whether a method is considered \"idempotent\", meaning the request has\nthe same result is executed multiple times.",13],[6,"Err","iron::headers",""],[11,"from_str","hyper::method","",13],[11,"fmt","","",13],[11,"fmt","hyper::header::common::access_control::allow_headers","",14],[11,"eq","","",14],[11,"ne","","",14],[11,"clone","","",14],[11,"header_name","","",14],[11,"parse_header","","",14],[11,"fmt_header","","",14],[11,"fmt","hyper::header::common::access_control::allow_methods","",15],[11,"eq","","",15],[11,"ne","","",15],[11,"clone","","",15],[11,"header_name","","",15],[11,"parse_header","","",15],[11,"fmt_header","","",15],[11,"fmt","hyper::header::common::access_control::allow_origin","",16],[11,"eq","","",16],[11,"ne","","",16],[11,"clone","","",16],[11,"header_name","","",16],[11,"parse_header","","",16],[11,"fmt_header","","",16],[11,"fmt","hyper::header::common::access_control::max_age","",17],[11,"eq","","",17],[11,"ne","","",17],[11,"clone","","",17],[11,"header_name","","",17],[11,"parse_header","","",17],[11,"fmt_header","","",17],[11,"fmt","hyper::header::common::access_control::request_headers","",18],[11,"eq","","",18],[11,"ne","","",18],[11,"clone","","",18],[11,"header_name","","",18],[11,"parse_header","","",18],[11,"fmt_header","","",18],[11,"fmt","hyper::header::common::access_control::request_method","",19],[11,"eq","","",19],[11,"ne","","",19],[11,"clone","","",19],[11,"header_name","","",19],[11,"parse_header","","",19],[11,"fmt_header","","",19],[11,"fmt","hyper::header::common::accept","",20],[11,"eq","","",20],[11,"ne","","",20],[11,"clone","","",20],[6,"Target","iron::headers",""],[11,"deref","hyper::header::common::accept","",20],[11,"deref_mut","","",20],[11,"header_name","","",20],[11,"parse_header","","",20],[11,"fmt_header","","",20],[11,"fmt","","",20],[11,"fmt","hyper::header::common::accept_charset","",21],[11,"eq","","",21],[11,"ne","","",21],[11,"clone","","",21],[6,"Target","iron::headers",""],[11,"deref","hyper::header::common::accept_charset","",21],[11,"deref_mut","","",21],[11,"header_name","","",21],[11,"parse_header","","",21],[11,"fmt_header","","",21],[11,"fmt","","",21],[11,"fmt","hyper::header::common::accept_encoding","",22],[11,"eq","","",22],[11,"ne","","",22],[11,"clone","","",22],[6,"Target","iron::headers",""],[11,"deref","hyper::header::common::accept_encoding","",22],[11,"deref_mut","","",22],[11,"header_name","","",22],[11,"parse_header","","",22],[11,"fmt_header","","",22],[11,"fmt","","",22],[11,"fmt","hyper::header::common::accept_language","",23],[11,"eq","","",23],[11,"ne","","",23],[11,"clone","","",23],[6,"Err","iron::headers",""],[11,"from_str","hyper::header::common::accept_language","",23],[11,"fmt","","",23],[11,"fmt","","",24],[11,"eq","","",24],[11,"ne","","",24],[11,"clone","","",24],[6,"Target","iron::headers",""],[11,"deref","hyper::header::common::accept_language","",24],[11,"deref_mut","","",24],[11,"header_name","","",24],[11,"parse_header","","",24],[11,"fmt_header","","",24],[11,"fmt","","",24],[11,"fmt","hyper::header::common::allow","",25],[11,"eq","","",25],[11,"ne","","",25],[11,"clone","","",25],[6,"Target","iron::headers",""],[11,"deref","hyper::header::common::allow","",25],[11,"deref_mut","","",25],[11,"header_name","","",25],[11,"parse_header","","",25],[11,"fmt_header","","",25],[11,"fmt","","",25],[11,"fmt","hyper::header::common::authorization","",26],[11,"eq","","",26],[11,"ne","","",26],[11,"clone","","",26],[6,"Target","iron::headers",""],[11,"deref","hyper::header::common::authorization","",26],[11,"deref_mut","","",26],[11,"header_name","","",26],[11,"parse_header","","",26],[11,"fmt_header","","",26],[11,"scheme","collections::string","",27],[11,"fmt_scheme","","",27],[11,"fmt","hyper::header::common::authorization","",28],[11,"eq","","",28],[11,"ne","","",28],[11,"clone","","",28],[11,"scheme","","",28],[11,"fmt_scheme","","",28],[6,"Err","iron::headers",""],[11,"from_str","hyper::header::common::authorization","",28],[11,"fmt","hyper::header::common::cache_control","",29],[11,"clone","","",29],[11,"eq","","",29],[11,"ne","","",29],[6,"Target","iron::headers",""],[11,"deref","hyper::header::common::cache_control","",29],[11,"deref_mut","","",29],[11,"header_name","","",29],[11,"parse_header","","",29],[11,"fmt_header","","",29],[11,"fmt","","",30],[11,"clone","","",30],[11,"eq","","",30],[11,"ne","","",30],[11,"fmt","","",30],[6,"Err","iron::headers",""],[11,"from_str","hyper::header::common::cache_control","",30],[11,"fmt","hyper::header::common::cookie","",31],[11,"eq","","",31],[11,"ne","","",31],[11,"clone","","",31],[6,"Target","iron::headers",""],[11,"deref","hyper::header::common::cookie","",31],[11,"deref_mut","","",31],[11,"header_name","","",31],[11,"parse_header","","",31],[11,"fmt_header","","",31],[11,"to_cookie_jar","","This method can be used to create CookieJar that can be used\nto manipulate cookies and create a corresponding `SetCookie` header afterwards.",31],[11,"from_cookie_jar","","Extracts all cookies from `CookieJar` and creates Cookie header.\nUseful for clients.",31],[11,"fmt","hyper::header::common::connection","",32],[11,"eq","","",32],[11,"ne","","",32],[11,"clone","","",32],[6,"Target","iron::headers",""],[11,"deref","hyper::header::common::connection","",32],[11,"deref_mut","","",32],[11,"fmt","","",33],[11,"eq","","",33],[11,"ne","","",33],[11,"clone","","",33],[6,"Err","iron::headers",""],[11,"from_str","hyper::header::common::connection","",33],[11,"fmt","","",33],[11,"header_name","","",32],[11,"parse_header","","",32],[11,"fmt_header","","",32],[11,"fmt","hyper::header::common::content_length","",34],[11,"eq","","",34],[11,"ne","","",34],[11,"clone","","",34],[6,"Target","iron::headers",""],[11,"deref","hyper::header::common::content_length","",34],[11,"deref_mut","","",34],[11,"header_name","","",34],[11,"parse_header","","",34],[11,"fmt_header","","",34],[11,"fmt","","",34],[11,"fmt","hyper::header::common::content_type","",35],[11,"eq","","",35],[11,"ne","","",35],[11,"clone","","",35],[6,"Target","iron::headers",""],[11,"deref","hyper::header::common::content_type","",35],[11,"deref_mut","","",35],[11,"header_name","","",35],[11,"parse_header","","",35],[11,"fmt_header","","",35],[11,"fmt","","",35],[11,"fmt","hyper::header::common::date","",36],[11,"clone","","",36],[11,"eq","","",36],[11,"ne","","",36],[6,"Target","iron::headers",""],[11,"deref","hyper::header::common::date","",36],[11,"deref_mut","","",36],[11,"header_name","","",36],[11,"parse_header","","",36],[11,"fmt_header","","",36],[6,"Err","iron::headers",""],[11,"from_str","hyper::header::common::date","",36],[11,"fmt","hyper::header::common::etag","",37],[11,"eq","","",37],[11,"ne","","",37],[11,"clone","","",37],[6,"Target","iron::headers",""],[11,"deref","hyper::header::common::etag","",37],[11,"deref_mut","","",37],[11,"header_name","","",37],[11,"parse_header","","",37],[11,"fmt_header","","",37],[11,"fmt","hyper::header::common::expires","",38],[11,"clone","","",38],[11,"eq","","",38],[11,"ne","","",38],[6,"Target","iron::headers",""],[11,"deref","hyper::header::common::expires","",38],[11,"deref_mut","","",38],[11,"header_name","","",38],[11,"parse_header","","",38],[11,"fmt_header","","",38],[6,"Err","iron::headers",""],[11,"from_str","hyper::header::common::expires","",38],[11,"fmt","hyper::header::common::host","",39],[11,"eq","","",39],[11,"ne","","",39],[11,"clone","","",39],[11,"header_name","","",39],[11,"parse_header","","",39],[11,"fmt_header","","",39],[11,"fmt","hyper::header::common::if_match","",40],[11,"eq","","",40],[11,"ne","","",40],[11,"clone","","",40],[11,"header_name","","",40],[11,"parse_header","","",40],[11,"fmt_header","","",40],[11,"fmt","hyper::header::common::last_modified","",41],[11,"clone","","",41],[11,"eq","","",41],[11,"ne","","",41],[6,"Target","iron::headers",""],[11,"deref","hyper::header::common::last_modified","",41],[11,"deref_mut","","",41],[11,"header_name","","",41],[11,"parse_header","","",41],[11,"fmt_header","","",41],[6,"Err","iron::headers",""],[11,"from_str","hyper::header::common::last_modified","",41],[11,"fmt","hyper::header::common::if_modified_since","",42],[11,"clone","","",42],[11,"eq","","",42],[11,"ne","","",42],[6,"Target","iron::headers",""],[11,"deref","hyper::header::common::if_modified_since","",42],[11,"deref_mut","","",42],[11,"header_name","","",42],[11,"parse_header","","",42],[11,"fmt_header","","",42],[6,"Err","iron::headers",""],[11,"from_str","hyper::header::common::if_modified_since","",42],[11,"fmt","hyper::header::common::if_none_match","",43],[11,"eq","","",43],[11,"ne","","",43],[11,"clone","","",43],[11,"header_name","","",43],[11,"parse_header","","",43],[11,"fmt_header","","",43],[11,"fmt","hyper::header::common::if_unmodified_since","",44],[11,"clone","","",44],[11,"eq","","",44],[11,"ne","","",44],[6,"Target","iron::headers",""],[11,"deref","hyper::header::common::if_unmodified_since","",44],[11,"deref_mut","","",44],[11,"header_name","","",44],[11,"parse_header","","",44],[11,"fmt_header","","",44],[6,"Err","iron::headers",""],[11,"from_str","hyper::header::common::if_unmodified_since","",44],[11,"fmt","hyper::header::common::location","",45],[11,"eq","","",45],[11,"ne","","",45],[11,"clone","","",45],[6,"Target","iron::headers",""],[11,"deref","hyper::header::common::location","",45],[11,"deref_mut","","",45],[11,"header_name","","",45],[11,"parse_header","","",45],[11,"fmt_header","","",45],[11,"fmt","","",45],[11,"fmt","hyper::header::common::pragma","",46],[11,"eq","","",46],[11,"ne","","",46],[11,"clone","","",46],[11,"header_name","","",46],[11,"parse_header","","",46],[11,"fmt_header","","",46],[11,"fmt","hyper::header::common::referer","",47],[11,"eq","","",47],[11,"ne","","",47],[11,"clone","","",47],[6,"Target","iron::headers",""],[11,"deref","hyper::header::common::referer","",47],[11,"deref_mut","","",47],[11,"header_name","","",47],[11,"parse_header","","",47],[11,"fmt_header","","",47],[11,"fmt","","",47],[11,"fmt","hyper::header::common::server","",48],[11,"eq","","",48],[11,"ne","","",48],[11,"clone","","",48],[6,"Target","iron::headers",""],[11,"deref","hyper::header::common::server","",48],[11,"deref_mut","","",48],[11,"header_name","","",48],[11,"parse_header","","",48],[11,"fmt_header","","",48],[11,"fmt","","",48],[11,"fmt","hyper::header::common::set_cookie","",49],[11,"eq","","",49],[11,"ne","","",49],[11,"clone","","",49],[6,"Target","iron::headers",""],[11,"deref","hyper::header::common::set_cookie","",49],[11,"deref_mut","","",49],[11,"header_name","","",49],[11,"parse_header","","",49],[11,"fmt_header","","",49],[11,"from_cookie_jar","","Use this to create SetCookie header from CookieJar using\ncalculated delta.",49],[11,"apply_to_cookie_jar","","Use this on client to apply changes from SetCookie to CookieJar.\nNote that this will `panic!` if `CookieJar` is not root.",49],[11,"fmt","hyper::header::common::transfer_encoding","",50],[11,"eq","","",50],[11,"ne","","",50],[11,"clone","","",50],[6,"Target","iron::headers",""],[11,"deref","hyper::header::common::transfer_encoding","",50],[11,"deref_mut","","",50],[11,"header_name","","",50],[11,"parse_header","","",50],[11,"fmt_header","","",50],[11,"fmt","","",50],[11,"fmt","hyper::header::common::upgrade","",51],[11,"eq","","",51],[11,"ne","","",51],[11,"clone","","",51],[6,"Target","iron::headers",""],[11,"deref","hyper::header::common::upgrade","",51],[11,"deref_mut","","",51],[11,"fmt","","",52],[11,"eq","","",52],[11,"ne","","",52],[11,"clone","","",52],[6,"Err","iron::headers",""],[11,"from_str","hyper::header::common::upgrade","",52],[11,"fmt","","",52],[11,"header_name","","",51],[11,"parse_header","","",51],[11,"fmt_header","","",51],[11,"fmt","hyper::header::common::user_agent","",53],[11,"eq","","",53],[11,"ne","","",53],[11,"clone","","",53],[6,"Target","iron::headers",""],[11,"deref","hyper::header::common::user_agent","",53],[11,"deref_mut","","",53],[11,"header_name","","",53],[11,"parse_header","","",53],[11,"fmt_header","","",53],[11,"fmt","","",53],[11,"fmt","hyper::header::common::vary","",54],[11,"eq","","",54],[11,"ne","","",54],[11,"clone","","",54],[11,"header_name","","",54],[11,"parse_header","","",54],[11,"fmt_header","","",54],[11,"new","hyper::header::internals::cell","",55],[11,"set","","",55],[11,"get_mut","","",55],[6,"Target","iron::headers",""],[11,"deref","hyper::header::internals::cell","",55],[11,"clone","","",55],[11,"fmt","","",56],[11,"clone","","",56],[11,"new","","",57],[11,"get","","",57],[11,"get_mut","","",57],[11,"insert","","",57],[11,"one","","",57],[11,"clone","","",57],[11,"clone","hyper::header::internals::item","",58],[11,"new_raw","","",58],[11,"new_typed","","",58],[11,"mut_raw","","",58],[11,"raw","","",58],[11,"typed","","",58],[11,"typed_mut","","",58],[11,"fmt","","",58],[11,"eq","hyper::header::shared::charset","",59],[11,"ne","","",59],[11,"fmt","","",59],[11,"clone","","",59],[11,"fmt","","",59],[6,"Err","iron::headers",""],[11,"from_str","hyper::header::shared::charset","",59],[11,"fmt","hyper::header::shared::encoding","",60],[11,"eq","","",60],[11,"ne","","",60],[11,"clone","","",60],[11,"fmt","","",60],[6,"Err","iron::headers",""],[11,"from_str","hyper::header::shared::encoding","",60],[11,"fmt","hyper::header::shared::entity","",61],[11,"eq","","",61],[11,"ne","","",61],[11,"clone","","",61],[11,"fmt","","",61],[6,"Err","iron::headers",""],[11,"from_str","hyper::header::shared::entity","",61],[11,"partial_cmp","hyper::header::shared::quality_item","",62],[11,"lt","","",62],[11,"le","","",62],[11,"gt","","",62],[11,"ge","","",62],[11,"eq","","",62],[11,"ne","","",62],[11,"cmp","","",62],[11,"fmt","","",62],[11,"clone","","",62],[11,"fmt","","",62],[11,"from_i64","","",62],[11,"from_u64","","",62],[11,"from_f64","","",62],[11,"to_i64","","",62],[11,"to_u64","","",62],[11,"to_f64","","",62],[11,"default","","",62],[11,"fmt","","",63],[11,"eq","","",63],[11,"ne","","",63],[11,"clone","","",63],[11,"new","","Creates a new `QualityItem` from an item and a quality.\nThe item can be of any type.\nThe quality should be a value in the range [0, 1].",63],[11,"partial_cmp","","",63],[11,"fmt","","",63],[6,"Err","iron::headers",""],[11,"from_str","hyper::header::shared::quality_item","",63],[11,"clone","alloc::boxed","",64],[11,"clone","hyper::header","",5],[11,"fmt","","",5],[11,"fmt","","",5],[6,"Item","iron::headers",""],[11,"next","hyper::header","",65],[11,"is","","Check if a HeaderView is a certain Header.",66],[11,"name","","Get the Header name as a slice.",66],[11,"value","","Cast the value to a certain Header type.",66],[11,"value_string","","Get just the header value as a String.",66],[11,"fmt","","",66],[11,"fmt","","",66],[11,"extend","","",5],[11,"from_iter","","",5],[11,"fmt","","",67],[11,"fmt","","",67],[11,"into_inner","hyper::http","Unwraps this HttpReader and returns the underlying Reader.",68],[11,"read","","",68],[11,"into_inner","","Unwraps the HttpWriter and returns the underlying Writer.",69],[11,"get_ref","","Access the inner Writer.",69],[11,"get_mut","","Access the inner Writer mutably.",69],[11,"end","","Ends the HttpWriter, and returns the underlying Writer.",69],[11,"write","","",69],[11,"flush","","",69],[11,"fmt","","",70],[11,"eq","","",70],[11,"ne","","",70],[11,"clone","","",70],[6,"Item","iron::headers",""],[11,"next","hyper::net","",71],[11,"fmt","alloc::boxed","",64],[11,"clone","","",64],[11,"is","iron","Is the underlying type in this trait object a T?",72],[11,"downcast_ref","","If the underlying type is T, get a reference to the contained data.",72],[11,"downcast_mut","","If the underlying type is T, get a mutable reference to the contained\ndata.",72],[11,"downcast","","If the underlying type is T, extract it.",72],[11,"clone","hyper::net","",73],[11,"http","","Start listening to an address over HTTP.",73],[11,"https","","Start listening to an address over HTTPS.",73],[6,"Stream","iron::headers",""],[11,"accept","hyper::net","",73],[11,"socket_addr","","",73],[11,"clone","","",74],[11,"read","","",74],[11,"write","","",74],[11,"flush","","",74],[11,"clone","","",75],[11,"read","","",75],[11,"write","","",75],[11,"flush","","",75],[11,"peer_addr","","",75],[6,"Stream","iron::headers",""],[11,"connect","hyper::net","",76],[11,"new","hyper::server::request","Create a new Request, reading the StartLine and Headers so they are\nimmediately useful.",77],[11,"deconstruct","","Deconstruct a Request into its constituent parts.",77],[11,"read","","",77],[11,"status","hyper::server::response","The status of this response.",78],[11,"headers","","The headers of this response.",78],[11,"construct","","Construct a Response from its constituent parts.",78],[11,"deconstruct","","Deconstruct this Response into its constituent parts.",78],[11,"new","","Creates a new Response that can be used to write to a network stream.",78],[11,"start","","Consume this Response<Fresh>, writing the Headers and Status and creating a Response<Streaming>",78],[11,"status_mut","","Get a mutable reference to the status.",78],[11,"headers_mut","","Get a mutable reference to the Headers.",78],[11,"end","","Flushes all writing of a response to the client.",78],[11,"write","","",78],[11,"flush","","",78],[11,"new","hyper::server::listener","Create a thread pool to manage the acceptor.",79],[11,"accept","","Runs the acceptor pool. Blocks until the acceptors are closed.",79],[11,"drop","","",80],[11,"new","hyper::server","",81],[11,"http","","Creates a new server that will handle `HttpStream`s.",81],[11,"https","","Creates a new server that will handler `HttpStreams`s using a TLS connection.",81],[11,"listen_threads","","Binds to a socket, and starts handling connections using a task pool.",81],[11,"listen","","Binds to a socket and starts handling connections.",81],[11,"with_listener","","Creates a new server that will handle `HttpStream`s.",81],[11,"close","","Stop the server from listening to its socket address.",82],[11,"canonical_reason","hyper::status","Get the standardised `reason-phrase` for this status code.",83],[11,"class","","Determine the class of a status code, based on its first digit.",83],[11,"is_informational","","Check if class is Informational.",83],[11,"is_success","","Check if class is Success.",83],[11,"is_redirection","","Check if class is Redirection.",83],[11,"is_client_error","","Check if class is ClientError.",83],[11,"is_server_error","","Check if class is ServerError.",83],[11,"is_strange_status","","Check if class is NoClass",83],[11,"fmt","","",83],[11,"fmt","","",83],[11,"eq","","",83],[11,"clone","","",83],[11,"from_i64","","",83],[11,"from_u64","","",83],[11,"partial_cmp","","",83],[11,"cmp","","",83],[11,"to_i64","","",83],[11,"to_u64","","",83],[11,"cmp","","",84],[11,"partial_cmp","","",84],[11,"lt","","",84],[11,"le","","",84],[11,"gt","","",84],[11,"ge","","",84],[11,"eq","","",84],[11,"ne","","",84],[11,"clone","","",84],[11,"default_code","","Get the default status code for the class.",84],[11,"to_i64","","",84],[11,"to_u64","","",84],[11,"clone","hyper::uri","",85],[11,"eq","","",85],[11,"ne","","",85],[11,"fmt","","",85],[11,"fmt","hyper::version","",86],[11,"partial_cmp","","",86],[11,"lt","","",86],[11,"le","","",86],[11,"gt","","",86],[11,"ge","","",86],[11,"eq","","",86],[11,"ne","","",86],[11,"fmt","","",86],[11,"clone","hyper","",87],[11,"eq","","",87],[11,"ne","","",87],[11,"fmt","","",87],[11,"fmt","","",87],[11,"description","","",87],[11,"cause","","",87],[11,"from_error","","",87],[11,"from_error","","",87],[11,"fmt","mime","",88],[11,"eq","","",88],[11,"ne","","",88],[11,"clone","","",88],[11,"fmt","","",89],[11,"clone","","",89],[11,"eq","","",89],[11,"fmt","","",89],[6,"Err","iron::headers",""],[11,"from_str","mime","",89],[11,"fmt","","",90],[11,"clone","","",90],[11,"eq","","",90],[11,"fmt","","",90],[6,"Err","iron::headers",""],[11,"from_str","mime","",90],[11,"fmt","","",91],[11,"clone","","",91],[11,"eq","","",91],[11,"fmt","","",91],[6,"Err","iron::headers",""],[11,"from_str","mime","",91],[11,"fmt","","",92],[11,"clone","","",92],[11,"eq","","",92],[11,"fmt","","",92],[6,"Err","iron::headers",""],[11,"from_str","mime","",92],[11,"fmt","","",88],[6,"Err","iron::headers",""],[11,"from_str","mime","",88],[3,"Headers","iron::headers","A map of header fields on requests and responses."],[3,"HeadersItems","","An `Iterator` over the fields in a `Headers` map."],[3,"HeaderView","","Returned with the `HeadersItems` iterator."],[3,"HeaderFormatter","","A wrapper around any Header with a Display impl that calls fmt_header."],[3,"Cookie","","The `Cookie` header. Defined in [RFC6265](tools.ietf.org/html/rfc6265#section-5.4):"],[3,"AcceptCharset","","The `Accept-Charset` header"],[4,"IfMatch","","The `If-Match` header"],[13,"Any","","This corresponds to '*'.",40],[13,"EntityTags","","The header field names which will influence the response representation.",40],[5,"qitem","","Convinience function to wrap a value in a `QualityItem`\nSets `q` to the default 1.0"],[3,"LastModified","","The `LastModified` header field."],[3,"QualityItem","","Represents an item with a quality value as defined in\n[RFC7231](https://tools.ietf.org/html/rfc7231#section-5.3.1)."],[12,"item","","The actual contents of the field.",63],[12,"quality","","The quality (client or server preference) for the value.",63],[3,"Basic","","Credential holder for Basic Authentication"],[12,"username","","The username as a possibly empty string",28],[12,"password","","The password. `None` if the `:` delimiter character was not\npart of the parsed input.",28],[4,"Pragma","","The `Pragma` header defined by HTTP/1.0."],[13,"NoCache","","Corresponds to the `no-cache` value.",46],[13,"Ext","","Every value other than `no-cache`.",46],[3,"Etag","","The `Etag` header."],[3,"UserAgent","","The `User-Agent` header field."],[3,"AccessControlRequestHeaders","","The `Access-Control-Request-Headers` request header,\npart of [CORS](http://www.w3.org/TR/cors/)."],[3,"IfUnmodifiedSince","","The `If-Unmodified-Since` header field."],[3,"EntityTag","","An entity tag"],[12,"weak","","Weakness indicator for the tag",61],[12,"tag","","The opaque string in between the DQUOTEs",61],[3,"AcceptLanguage","","The `Accept-Language` header"],[3,"Allow","","The `Allow` header.\nSee also https://tools.ietf.org/html/rfc7231#section-7.4.1"],[3,"AccessControlAllowHeaders","","The `Access-Control-Allow-Headers` response header,\npart of [CORS](http://www.w3.org/TR/cors/)."],[4,"Vary","","The `Allow` header.\nSee also https://tools.ietf.org/html/rfc7231#section-7.1.4"],[13,"Any","","This corresponds to '*'.",54],[13,"Headers","","The header field names which will influence the response representation.",54],[5,"q","","Convenience function to create a `Quality` fromt a float."],[4,"IfNoneMatch","","The `If-None-Match` header defined by HTTP/1.1."],[13,"Any","","This corresponds to '*'.",43],[13,"EntityTags","","The header field names which will influence the response representation.",43],[3,"SetCookie","","The `Set-Cookie` header"],[4,"AccessControlAllowOrigin","","The `Access-Control-Allow-Origin` response header,\npart of [CORS](http://www.w3.org/TR/cors/)."],[13,"AllowStar","","Allow all origins",16],[13,"AllowOrigin","","Allow one particular origin",16],[3,"Authorization","","The `Authorization` header field."],[3,"Date","","The `Date` header field."],[4,"Charset","","A Mime charset."],[13,"Us_Ascii","","US ASCII",59],[13,"Iso_8859_1","","ISO-8859-1",59],[13,"Iso_8859_2","","ISO-8859-2",59],[13,"Iso_8859_3","","ISO-8859-3",59],[13,"Iso_8859_4","","ISO-8859-4",59],[13,"Iso_8859_5","","ISO-8859-5",59],[13,"Iso_8859_6","","ISO-8859-6",59],[13,"Iso_8859_7","","ISO-8859-7",59],[13,"Iso_8859_8","","ISO-8859-8",59],[13,"Iso_8859_9","","ISO-8859-9",59],[13,"Iso_8859_10","","ISO-8859-10",59],[13,"Shift_Jis","","Shift_JIS",59],[13,"Euc_Jp","","EUC-JP",59],[13,"Iso_2022_Kr","","ISO-2022-KR",59],[13,"Euc_Kr","","EUC-KR",59],[13,"Iso_2022_Jp","","ISO-2022-JP",59],[13,"Iso_2022_Jp_2","","ISO-2022-JP-2",59],[13,"Iso_8859_6_E","","ISO-8859-6-E",59],[13,"Iso_8859_6_I","","ISO-8859-6-I",59],[13,"Iso_8859_8_E","","ISO-8859-8-E",59],[13,"Iso_8859_8_I","","ISO-8859-8-I",59],[13,"Gb2312","","GB2312",59],[13,"Big5","","Big5",59],[13,"Koi8_R","","KOI8-R",59],[13,"Ext","","An arbitrary charset specified as a string",59],[3,"AccessControlMaxAge","","The `Access-Control-Max-Age` response header,\npart of [CORS](http://www.w3.org/TR/cors/)."],[4,"ConnectionOption","","Values that can be in the `Connection` header."],[13,"KeepAlive","","The `keep-alive` connection value.",33],[13,"Close","","The `close` connection value.",33],[13,"ConnectionHeader","","Values in the Connection header that are supposed to be names of other Headers.",33],[3,"CacheControl","","The Cache-Control header."],[3,"Upgrade","","The `Upgrade` header."],[3,"Quality","","Represents a quality used in quality values."],[3,"TransferEncoding","","The `Transfer-Encoding` header."],[8,"Scheme","","An Authorization scheme to be used in the header."],[10,"scheme","","An optional Scheme name.",93],[10,"fmt_scheme","","Format the Scheme data into a header value.",93],[4,"Encoding","","A value to represent an encoding used in `Transfer-Encoding`\nor `Accept-Encoding` header."],[13,"Chunked","","The `chunked` encoding.",60],[13,"Gzip","","The `gzip` encoding.",60],[13,"Deflate","","The `deflate` encoding.",60],[13,"Compress","","The `compress` encoding.",60],[13,"Identity","","The `identity` encoding.",60],[13,"EncodingExt","","Some other encoding that is less common, can be any String.",60],[3,"Connection","","The `Connection` header."],[3,"IfModifiedSince","","The `If-Modified-Since` header field."],[3,"Server","","The `Server` header field."],[3,"Accept","","The `Accept` header."],[3,"AcceptEncoding","","The `Accept-Encoding` header"],[3,"Expires","","The `Expires` header field."],[3,"Referer","","The `Referer` header."],[3,"ContentLength","","The `Content-Length` header."],[3,"AccessControlAllowMethods","","The `Access-Control-Allow-Methods` response header,\npart of [CORS](http://www.w3.org/TR/cors/)."],[4,"Protocol","","Protocol values that can appear in the Upgrade header."],[13,"WebSocket","","The websocket protocol.",52],[13,"ProtocolExt","","Some other less common protocol.",52],[3,"AccessControlRequestMethod","","The `Access-Control-Request-Method` request header,\npart of [CORS](http://www.w3.org/TR/cors/)."],[3,"Host","","The `Host` header."],[12,"hostname","","The hostname, such a example.domain.",39],[12,"port","","An optional port number.",39],[4,"CacheDirective","","CacheControl contains a list of these directives."],[13,"NoCache","","\"no-cache\"",30],[13,"NoStore","","\"no-store\"",30],[13,"NoTransform","","\"no-transform\"",30],[13,"OnlyIfCached","","\"only-if-cached\"",30],[13,"MaxAge","","\"max-age=delta\"",30],[13,"MaxStale","","\"max-stale=delta\"",30],[13,"MinFresh","","\"min-fresh=delta\"",30],[13,"MustRevalidate","","\"must-revalidate\"",30],[13,"Public","","\"public\"",30],[13,"Private","","\"private\"",30],[13,"ProxyRevalidate","","\"proxy-revalidate\"",30],[13,"SMaxAge","","\"s-maxage=delta\"",30],[13,"Extension","","Extension directives. Optionally include an argument.",30],[3,"ContentType","","The `Content-Type` header."],[3,"Location","","The `Location` header."],[3,"Headers","iron","A map of header fields on requests and responses."],[8,"Plugin","","An interface for plugins that cache values between calls."],[10,"get","","Return a copy of the plugin's produced value.",94],[10,"get_ref","","Return a reference to the plugin's produced value.",94],[10,"get_mut","","Return a mutable reference to the plugin's produced value.",94],[10,"compute","","Create and evaluate a once-off instance of a plugin.",94],[8,"Set","","A trait providing the set and set_mut methods for all types."],[10,"set","","Modify self using the provided modifier.",95],[10,"set_mut","","Modify self through a mutable reference with the provided modifier.",95],[8,"Error","","An extension to std::error::Error which provides dynamic downcasting of\nerrors for use in highly generic contexts."],[0,"mime","",""],[3,"Mime","iron::mime","Mime, or Media Type. Encapsulates common registers types."],[4,"TopLevel","",""],[13,"Star","","",89],[13,"Text","","",89],[13,"Image","","",89],[13,"Audio","","",89],[13,"Video","","",89],[13,"Application","","",89],[13,"Multipart","","",89],[13,"Message","","",89],[13,"Model","","",89],[13,"Ext","","",89],[4,"SubLevel","",""],[13,"Star","","",90],[13,"Plain","","",90],[13,"Html","","",90],[13,"Xml","","",90],[13,"Javascript","","",90],[13,"Css","","",90],[13,"Json","","",90],[13,"WwwFormUrlEncoded","","",90],[13,"FormData","","",90],[13,"Png","","",90],[13,"Gif","","",90],[13,"Bmp","","",90],[13,"Jpeg","","",90],[13,"Ext","","",90],[4,"Attr","",""],[13,"Charset","","",91],[13,"Q","","",91],[13,"Ext","","",91],[4,"Value","",""],[13,"Utf8","","",92],[13,"Ext","","",92],[6,"Param","",""],[3,"Url","iron","HTTP/HTTPS URL type for Iron."],[12,"scheme","","The lower-cased scheme of the URL, typically \"http\" or \"https\".",96],[12,"host","","The host field of the URL, probably a domain.",96],[12,"port","","The connection port.",96],[12,"path","","The URL path, the resource to be accessed.",96],[12,"username","","The URL username field, from the userinfo section of the URL.",96],[12,"password","","The URL password field, from the userinfo section of the URL.",96],[12,"query","","The URL query string.",96],[12,"fragment","","The URL fragment.",96],[3,"Iron","","The primary entrance point to `Iron`, a `struct` to instantiate a new server."],[12,"handler","","Iron contains a `Handler`, which it uses to create responses for client\nrequests.",97],[12,"addr","","Once listening, the local address that this server is bound to.",97],[12,"protocol","","Once listening, the protocol used to serve content.",97],[4,"Protocol","","Protocol used to serve content. Future versions of Iron may add new protocols\nto this enum. Thus you should not exhaustively match on its variants."],[13,"Http","","Plaintext HTTP/1",98],[13,"Https","","HTTP/1 over SSL/TLS",98],[12,"certificate","iron::Protocol","Path to SSL certificate file",98],[12,"key","","Path to SSL private key file",98],[0,"error","iron","Iron's error type and associated utilities."],[8,"Error","iron::error","An extension to std::error::Error which provides dynamic downcasting of\nerrors for use in highly generic contexts."],[6,"HttpResult","",""],[4,"HttpError","","A set of errors that can occur parsing HTTP streams."],[13,"HttpMethodError","","An invalid `Method`, such as `GE,T`.",87],[13,"HttpUriError","","An invalid `RequestUri`, such as `exam ple.domain`.",87],[13,"HttpVersionError","","An invalid `HttpVersion`, such as `HTP/1.1`",87],[13,"HttpHeaderError","","An invalid `Header`.",87],[13,"HttpStatusError","","An invalid `Status`, such as `1337 ELITE`.",87],[13,"HttpIoError","","An `IoError` that occured while trying to read or write to a network stream.",87],[3,"IronError","","The type of Errors inside and when using Iron."],[12,"error","","The underlying error",99],[12,"response","","What to do about this error.",99],[11,"fmt","","",99],[11,"new","","Create a new IronError from an error and a modifier.",99],[11,"fmt","","",99],[11,"description","","",99],[11,"cause","","",99],[0,"prelude","iron","A module meant to be glob imported when using Iron, for instance:"],[8,"Set","iron::prelude","A trait providing the set and set_mut methods for all types."],[10,"set","","Modify self using the provided modifier.",95],[10,"set_mut","","Modify self through a mutable reference with the provided modifier.",95],[8,"Pluggable","","An interface for plugins that cache values between calls."],[10,"get","","Return a copy of the plugin's produced value.",94],[10,"get_ref","","Return a reference to the plugin's produced value.",94],[10,"get_mut","","Return a mutable reference to the plugin's produced value.",94],[10,"compute","","Create and evaluate a once-off instance of a plugin.",94],[0,"typemap","iron","Re-exports from the TypeMap crate."],[3,"TypeMap","iron::typemap","A map keyed by types."],[8,"Key","","This trait defines the relationship between keys and values in a TypeMap."],[16,"Value","iron::typemap::Key",""],[0,"modifier","iron","Re-exports from the Modifier crate."],[0,"status","","Status Codes"],[4,"Status","iron::status","An HTTP status code (`status-code` in RFC 7230 et al.)."],[13,"Continue","","100 Continue\n[[RFC7231, Section 6.2.1](https://tools.ietf.org/html/rfc7231#section-6.2.1)]",83],[13,"SwitchingProtocols","","101 Switching Protocols\n[[RFC7231, Section 6.2.2](https://tools.ietf.org/html/rfc7231#section-6.2.2)]",83],[13,"Processing","","102 Processing\n[[RFC2518](https://tools.ietf.org/html/rfc2518)]",83],[13,"Ok","","200 OK\n[[RFC7231, Section 6.3.1](https://tools.ietf.org/html/rfc7231#section-6.3.1)]",83],[13,"Created","","201 Created\n[[RFC7231, Section 6.3.2](https://tools.ietf.org/html/rfc7231#section-6.3.2)]",83],[13,"Accepted","","202 Accepted\n[[RFC7231, Section 6.3.3](https://tools.ietf.org/html/rfc7231#section-6.3.3)]",83],[13,"NonAuthoritativeInformation","","203 Non-Authoritative Information\n[[RFC7231, Section 6.3.4](https://tools.ietf.org/html/rfc7231#section-6.3.4)]",83],[13,"NoContent","","204 No Content\n[[RFC7231, Section 6.3.5](https://tools.ietf.org/html/rfc7231#section-6.3.5)]",83],[13,"ResetContent","","205 Reset Content\n[[RFC7231, Section 6.3.6](https://tools.ietf.org/html/rfc7231#section-6.3.6)]",83],[13,"PartialContent","","206 Partial Content\n[[RFC7233, Section 4.1](https://tools.ietf.org/html/rfc7233#section-4.1)]",83],[13,"MultiStatus","","207 Multi-Status\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",83],[13,"AlreadyReported","","208 Already Reported\n[[RFC5842](https://tools.ietf.org/html/rfc5842)]",83],[13,"ImUsed","","226 IM Used\n[[RFC3229](https://tools.ietf.org/html/rfc3229)]",83],[13,"MultipleChoices","","300 Multiple Choices\n[[RFC7231, Section 6.4.1](https://tools.ietf.org/html/rfc7231#section-6.4.1)]",83],[13,"MovedPermanently","","301 Moved Permanently\n[[RFC7231, Section 6.4.2](https://tools.ietf.org/html/rfc7231#section-6.4.2)]",83],[13,"Found","","302 Found\n[[RFC7231, Section 6.4.3](https://tools.ietf.org/html/rfc7231#section-6.4.3)]",83],[13,"SeeOther","","303 See Other\n[[RFC7231, Section 6.4.4](https://tools.ietf.org/html/rfc7231#section-6.4.4)]",83],[13,"NotModified","","304 Not Modified\n[[RFC7232, Section 4.1](https://tools.ietf.org/html/rfc7232#section-4.1)]",83],[13,"UseProxy","","305 Use Proxy\n[[RFC7231, Section 6.4.5](https://tools.ietf.org/html/rfc7231#section-6.4.5)]",83],[13,"TemporaryRedirect","","307 Temporary Redirect\n[[RFC7231, Section 6.4.7](https://tools.ietf.org/html/rfc7231#section-6.4.7)]",83],[13,"PermanentRedirect","","308 Permanent Redirect\n[[RFC7238](https://tools.ietf.org/html/rfc7238)]",83],[13,"BadRequest","","400 Bad Request\n[[RFC7231, Section 6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)]",83],[13,"Unauthorized","","401 Unauthorized\n[[RFC7235, Section 3.1](https://tools.ietf.org/html/rfc7235#section-3.1)]",83],[13,"PaymentRequired","","402 Payment Required\n[[RFC7231, Section 6.5.2](https://tools.ietf.org/html/rfc7231#section-6.5.2)]",83],[13,"Forbidden","","403 Forbidden\n[[RFC7231, Section 6.5.3](https://tools.ietf.org/html/rfc7231#section-6.5.3)]",83],[13,"NotFound","","404 Not Found\n[[RFC7231, Section 6.5.4](https://tools.ietf.org/html/rfc7231#section-6.5.4)]",83],[13,"MethodNotAllowed","","405 Method Not Allowed\n[[RFC7231, Section 6.5.5](https://tools.ietf.org/html/rfc7231#section-6.5.5)]",83],[13,"NotAcceptable","","406 Not Acceptable\n[[RFC7231, Section 6.5.6](https://tools.ietf.org/html/rfc7231#section-6.5.6)]",83],[13,"ProxyAuthenticationRequired","","407 Proxy Authentication Required\n[[RFC7235, Section 3.2](https://tools.ietf.org/html/rfc7235#section-3.2)]",83],[13,"RequestTimeout","","408 Request Timeout\n[[RFC7231, Section 6.5.7](https://tools.ietf.org/html/rfc7231#section-6.5.7)]",83],[13,"Conflict","","409 Conflict\n[[RFC7231, Section 6.5.8](https://tools.ietf.org/html/rfc7231#section-6.5.8)]",83],[13,"Gone","","410 Gone\n[[RFC7231, Section 6.5.9](https://tools.ietf.org/html/rfc7231#section-6.5.9)]",83],[13,"LengthRequired","","411 Length Required\n[[RFC7231, Section 6.5.10](https://tools.ietf.org/html/rfc7231#section-6.5.10)]",83],[13,"PreconditionFailed","","412 Precondition Failed\n[[RFC7232, Section 4.2](https://tools.ietf.org/html/rfc7232#section-4.2)]",83],[13,"PayloadTooLarge","","413 Payload Too Large\n[[RFC7231, Section 6.5.11](https://tools.ietf.org/html/rfc7231#section-6.5.11)]",83],[13,"UriTooLong","","414 URI Too Long\n[[RFC7231, Section 6.5.12](https://tools.ietf.org/html/rfc7231#section-6.5.12)]",83],[13,"UnsupportedMediaType","","415 Unsupported Media Type\n[[RFC7231, Section 6.5.13](https://tools.ietf.org/html/rfc7231#section-6.5.13)]",83],[13,"RangeNotSatisfiable","","416 Range Not Satisfiable\n[[RFC7233, Section 4.4](https://tools.ietf.org/html/rfc7233#section-4.4)]",83],[13,"ExpectationFailed","","417 Expectation Failed\n[[RFC7231, Section 6.5.14](https://tools.ietf.org/html/rfc7231#section-6.5.14)]",83],[13,"ImATeapot","","418 I'm a teapot\n[curiously, not registered by IANA, but [RFC2324](https://tools.ietf.org/html/rfc2324)]",83],[13,"UnprocessableEntity","","422 Unprocessable Entity\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",83],[13,"Locked","","423 Locked\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",83],[13,"FailedDependency","","424 Failed Dependency\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",83],[13,"UpgradeRequired","","426 Upgrade Required\n[[RFC7231, Section 6.5.15](https://tools.ietf.org/html/rfc7231#section-6.5.15)]",83],[13,"PreconditionRequired","","428 Precondition Required\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",83],[13,"TooManyRequests","","429 Too Many Requests\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",83],[13,"RequestHeaderFieldsTooLarge","","431 Request Header Fields Too Large\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",83],[13,"InternalServerError","","500 Internal Server Error\n[[RFC7231, Section 6.6.1](https://tools.ietf.org/html/rfc7231#section-6.6.1)]",83],[13,"NotImplemented","","501 Not Implemented\n[[RFC7231, Section 6.6.2](https://tools.ietf.org/html/rfc7231#section-6.6.2)]",83],[13,"BadGateway","","502 Bad Gateway\n[[RFC7231, Section 6.6.3](https://tools.ietf.org/html/rfc7231#section-6.6.3)]",83],[13,"ServiceUnavailable","","503 Service Unavailable\n[[RFC7231, Section 6.6.4](https://tools.ietf.org/html/rfc7231#section-6.6.4)]",83],[13,"GatewayTimeout","","504 Gateway Timeout\n[[RFC7231, Section 6.6.5](https://tools.ietf.org/html/rfc7231#section-6.6.5)]",83],[13,"HttpVersionNotSupported","","505 HTTP Version Not Supported\n[[RFC7231, Section 6.6.6](https://tools.ietf.org/html/rfc7231#section-6.6.6)]",83],[13,"VariantAlsoNegotiates","","506 Variant Also Negotiates\n[[RFC2295](https://tools.ietf.org/html/rfc2295)]",83],[13,"InsufficientStorage","","507 Insufficient Storage\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",83],[13,"LoopDetected","","508 Loop Detected\n[[RFC5842](https://tools.ietf.org/html/rfc5842)]",83],[13,"NotExtended","","510 Not Extended\n[[RFC2774](https://tools.ietf.org/html/rfc2774)]",83],[13,"NetworkAuthenticationRequired","","511 Network Authentication Required\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",83],[13,"Unregistered","","A status code not in the IANA HTTP status code registry or very well known",83],[0,"method","iron","HTTP Methods"],[4,"Method","iron::method","The Request Method (VERB)"],[13,"Options","","OPTIONS",13],[13,"Get","","GET",13],[13,"Post","","POST",13],[13,"Put","","PUT",13],[13,"Delete","","DELETE",13],[13,"Head","","HEAD",13],[13,"Trace","","TRACE",13],[13,"Connect","","CONNECT",13],[13,"Patch","","PATCH",13],[13,"Extension","","Method extentions. An example would be `let m = Extension(\"FOO\".to_string())`.",13],[0,"middleware","iron","Iron's Middleware and Handler System"],[3,"Chain","iron::middleware","The middleware chain used in Iron."],[8,"Handler","","`Handler`s are responsible for handling requests by creating Responses from Requests."],[10,"handle","","Produce a `Response` from a Request, with the possibility of error.",100],[8,"BeforeMiddleware","","`BeforeMiddleware` are fired before a `Handler` is called inside of a Chain."],[11,"before","","Do whatever work this middleware should do with a `Request` object.",101],[11,"catch","","Respond to an error thrown by a previous `BeforeMiddleware`.",101],[8,"AfterMiddleware","","`AfterMiddleware` are fired after a `Handler` is called inside of a Chain."],[11,"after","","Do whatever post-processing this middleware should do.",102],[11,"catch","","Respond to an error thrown by previous `AfterMiddleware`, the `Handler`,\nor a `BeforeMiddleware`.",102],[8,"AroundMiddleware","","AroundMiddleware are used to wrap and replace the `Handler` in a `Chain`."],[10,"around","","Produce a `Handler` from this `AroundMiddleware` given another `Handler`.",103],[11,"new","","Construct a new ChainBuilder from a `Handler`.",104],[11,"link","","Link both a before and after middleware to the chain at once.",104],[11,"link_before","","Link a `BeforeMiddleware` to the `Chain`, after all previously linked\n`BeforeMiddleware`.",104],[11,"link_after","","Link a `AfterMiddleware` to the `Chain`, after all previously linked\n`AfterMiddleware`.",104],[11,"around","","Apply an `AroundMiddleware` to the `Handler` in this `Chain`.",104],[11,"handle","","",104],[11,"handle","alloc::boxed","",64],[11,"before","","",64],[11,"catch","","",64],[11,"after","","",64],[11,"catch","","",64],[0,"response","iron","Iron's HTTP Response representation and associated methods."],[3,"HttpResponse","iron::response","The outgoing half for a Tcp connection, created by a `Server` and given to a `Handler`."],[12,"version","","The HTTP version of this response.",78],[3,"Response","","The response representation given to `Middleware`"],[12,"status","","The response status-code.",105],[12,"headers","","The headers of the response.",105],[12,"extensions","","A TypeMap to be used as an extensible storage for data\nassociated with this Response.",105],[12,"body","","The body of the response.",105],[11,"new","","Construct a blank Response",105],[11,"with","","Construct a Response with the specified modifier pre-applied.",105],[11,"fmt","","",105],[11,"fmt","","",105],[11,"extensions","","",105],[11,"extensions_mut","","",105],[0,"request","iron","Iron's HTTP Request representation and associated methods."],[3,"HttpRequest","iron::request","A request bundles several parts of an incoming `NetworkStream`, given to a `Handler`."],[12,"remote_addr","","The IP address of the remote connection.",77],[12,"method","","The `Method`, such as `Get`, `Post`, etc.",77],[12,"headers","","The headers of the incoming request.",77],[12,"uri","","The target request-uri for this request.",77],[12,"version","","The version of HTTP for this request.",77],[3,"Request","","The `Request` given to all `Middleware`."],[12,"url","","The requested URL.",106],[12,"remote_addr","","The originating address of the request.",106],[12,"local_addr","","The local address of the request.",106],[12,"headers","","The request headers.",106],[12,"body","","The request body as a reader.",106],[12,"method","","The request method.",106],[12,"extensions","","Extensible storage for data passed between middleware.",106],[3,"Body","","The body of an Iron request,"],[11,"fmt","iron","",96],[11,"clone","","",96],[11,"eq","","",96],[11,"ne","","",96],[11,"parse","","Create a URL from a string.",96],[11,"from_generic_url","","Create a `Url` from a `rust-url` `Url`.",96],[11,"into_generic_url","","Create a `rust-url` `Url` from a `Url`.",96],[11,"fmt","","",96],[11,"fmt","iron::request","",106],[11,"from_http","","Create a request from an HttpRequest.",106],[11,"new","","Create a new reader for use in an Iron request from a hyper HttpReader.",107],[11,"read","","",107],[11,"extensions","","",106],[11,"extensions_mut","","",106],[0,"modifiers","iron","Defines a series of convenience modifiers for editing Responses"],[3,"Header","iron::modifiers","A modifier for changing headers on requests and responses."],[3,"Redirect","","A modifier for creating redirect responses."],[11,"modify","iron::mime","",88],[11,"modify","alloc::boxed","",64],[11,"modify","collections::string","",27],[11,"modify","collections::vec","",108],[11,"modify","std::fs","",109],[11,"modify","std::path","Set the body to the contents of the File at this path.",110],[11,"modify","iron::status","",83],[11,"modify","iron::modifiers","",111],[11,"modify","","",111],[11,"modify","","",112],[11,"clone","iron","",98],[11,"name","","Return the name used for this protocol in a URI's scheme part.",98],[11,"http","","Kick off the server process using the HTTP protocol.",97],[11,"https","","Kick off the server process using the HTTPS protocol.",97],[11,"listen_with","","Kick off the server process with X threads.",97],[11,"new","","Instantiate a new instance of `Iron`.",97],[11,"handle","","",97],[6,"IronResult","","The Result alias used throughout Iron and in clients of Iron."]],"paths":[[3,"TypeMap"],[3,"OccupiedEntry"],[3,"VacantEntry"],[8,"Header"],[8,"HeaderFormat"],[3,"Headers"],[3,"Request"],[3,"Response"],[3,"Client"],[3,"RequestBuilder"],[4,"Body"],[3,"Url"],[4,"RedirectPolicy"],[4,"Method"],[3,"AccessControlAllowHeaders"],[3,"AccessControlAllowMethods"],[4,"AccessControlAllowOrigin"],[3,"AccessControlMaxAge"],[3,"AccessControlRequestHeaders"],[3,"AccessControlRequestMethod"],[3,"Accept"],[3,"AcceptCharset"],[3,"AcceptEncoding"],[3,"Language"],[3,"AcceptLanguage"],[3,"Allow"],[3,"Authorization"],[3,"String"],[3,"Basic"],[3,"CacheControl"],[4,"CacheDirective"],[3,"Cookie"],[3,"Connection"],[4,"ConnectionOption"],[3,"ContentLength"],[3,"ContentType"],[3,"Date"],[3,"Etag"],[3,"Expires"],[3,"Host"],[4,"IfMatch"],[3,"LastModified"],[3,"IfModifiedSince"],[4,"IfNoneMatch"],[3,"IfUnmodifiedSince"],[3,"Location"],[4,"Pragma"],[3,"Referer"],[3,"Server"],[3,"SetCookie"],[3,"TransferEncoding"],[3,"Upgrade"],[4,"Protocol"],[3,"UserAgent"],[4,"Vary"],[3,"OptCell"],[4,"PtrMap"],[3,"PtrMapCell"],[3,"Item"],[4,"Charset"],[4,"Encoding"],[3,"EntityTag"],[3,"Quality"],[3,"QualityItem"],[3,"Box"],[3,"HeadersItems"],[3,"HeaderView"],[3,"HeaderFormatter"],[4,"HttpReader"],[4,"HttpWriter"],[3,"RawStatus"],[3,"NetworkConnections"],[8,"NetworkStream"],[4,"HttpListener"],[3,"CloneTcpStream"],[4,"HttpStream"],[3,"HttpConnector"],[3,"HttpRequest"],[3,"HttpResponse"],[3,"ListenerPool"],[3,"Sentinel"],[3,"Server"],[3,"Listening"],[4,"Status"],[4,"StatusClass"],[4,"RequestUri"],[4,"HttpVersion"],[4,"HttpError"],[3,"Mime"],[4,"TopLevel"],[4,"SubLevel"],[4,"Attr"],[4,"Value"],[8,"Scheme"],[8,"Pluggable"],[8,"Set"],[3,"Url"],[3,"Iron"],[4,"Protocol"],[3,"IronError"],[8,"Handler"],[8,"BeforeMiddleware"],[8,"AfterMiddleware"],[8,"AroundMiddleware"],[3,"Chain"],[3,"Response"],[3,"Request"],[3,"Body"],[3,"Vec"],[3,"File"],[3,"PathBuf"],[3,"Header"],[3,"Redirect"]]};
searchIndex['mount'] = {"items":[[0,"","mount","`Mount` provides mounting middleware for the Iron framework."],[3,"Mount","","`Mount` is a simple mounting middleware."],[3,"OriginalUrl","","Exposes the original, unmodified path to be stored in `Request::extensions`."],[11,"new","","Creates a new instance of `Mount`.",0],[11,"mount","","Mounts a given `Handler` onto a route.",0],[11,"handle","","",0]],"paths":[[3,"Mount"]]};
searchIndex['persistent'] = {"items":[[0,"","persistent","A set of middleware for sharing data between requests in the Iron\nframework."],[3,"State","","Middleware for data that persists between requests with read and write capabilities."],[3,"Read","","Middleware for data that persists between Requests with read-only capabilities."],[3,"Write","","Middleware for data that persists between Requests for data which mostly\nneeds to be written instead of read."],[4,"PersistentError","","The type that can be returned by `eval` to indicate error."],[13,"NotFound","","The value was not found.",0],[11,"clone","","",0],[11,"clone","","",1],[11,"clone","","",2],[11,"clone","","",3],[6,"Value","",""],[6,"Value","",""],[6,"Value","",""],[6,"Error","",""],[11,"eval","","",2],[6,"Error","",""],[11,"eval","","",1],[6,"Error","",""],[11,"eval","","",3],[11,"before","","",2],[11,"before","","",1],[11,"before","","",3],[11,"after","","",2],[11,"after","","",1],[11,"after","","",3],[11,"both","","Construct a new pair of `State` that can be passed directly to `Chain::link`.",2],[11,"one","","Construct a new `State` that can be passed directly to\n`Chain::link_before` or `Chain::link_after`.",2],[11,"both","","Construct a new pair of `Read` that can be passed directly to `Chain::link`.",1],[11,"one","","Construct a new `Read` that can be passed directly to\n`Chain::link_before` or `Chain::link_after`.",1],[11,"both","","Construct a new pair of `Write` that can be passed directly to `Chain::link`.",3],[11,"one","","Construct a new `Write` that can be passed directly to\n`Chain::link_before` or `Chain::link_after`.",3]],"paths":[[4,"PersistentError"],[3,"Read"],[3,"State"],[3,"Write"]]};
searchIndex['router'] = {"items":[[0,"","router","`Router` provides fast and flexible routing for Iron."],[11,"new","route-recognizer","",0],[11,"insert","","",0],[11,"find","","",0],[11,"clone","route-recognizer::nfa","",1],[11,"eq","","",1],[11,"ne","","",1],[11,"new","","",1],[11,"insert","","",1],[11,"contains","","",1],[11,"clone","","",2],[11,"eq","","",2],[11,"ne","","",2],[11,"any","","",2],[11,"valid","","",2],[11,"invalid","","",2],[11,"valid_char","","",2],[11,"invalid_char","","",2],[11,"matches","","",2],[11,"clone","","",3],[11,"new","","",3],[11,"start_capture","","",3],[11,"end_capture","","",3],[11,"extract","","",3],[11,"clone","","",4],[11,"eq","","",4],[11,"new","","",4],[11,"new","","",5],[11,"clone","","",6],[11,"new","","",6],[11,"process","","",6],[11,"get","","",6],[11,"get_mut","","",6],[11,"put","","",6],[11,"put_state","","",6],[11,"acceptance","","",6],[11,"start_capture","","",6],[11,"end_capture","","",6],[11,"metadata","","",6],[11,"clone","route-recognizer","",7],[11,"new","","",7],[11,"cmp","","",7],[11,"partial_cmp","","",7],[11,"eq","","",7],[11,"fmt","","",0],[11,"clone","","",0],[11,"eq","","",0],[11,"ne","","",0],[6,"Output","router",""],[11,"index","route-recognizer","",0],[11,"new","","",8],[11,"clone","","",9],[11,"new","","",9],[11,"add","","",9],[11,"recognize","","",9],[3,"Params","router",""],[3,"Router","","`Router` provides an interface for creating complex routes as middleware\nfor the Iron framework."],[11,"new","","Construct a new, empty `Router`.",10],[11,"route","","Add a new route to a `Router`, matching both a method and glob pattern.",10],[11,"get","","Like route, but specialized to the `Get` method.",10],[11,"post","","Like route, but specialized to the `Post` method.",10],[11,"put","","Like route, but specialized to the `Put` method.",10],[11,"delete","","Like route, but specialized to the `Delete` method.",10],[11,"head","","Like route, but specialized to the `Head` method.",10],[11,"patch","","Like route, but specialized to the `Patch` method.",10],[11,"options","","Like route, but specialized to the `Options` method.",10],[11,"handle","","",10]],"paths":[[3,"Params"],[3,"CharSet"],[4,"CharacterClass"],[3,"Thread"],[3,"State"],[3,"Match"],[3,"NFA"],[3,"Metadata"],[3,"Match"],[3,"Router"],[3,"Router"]]};
searchIndex['bodyparser'] = {"items":[[0,"","bodyparser","Body Parser Plugin for Iron"],[3,"BodyError","",""],[12,"detail","","",0],[12,"cause","","",0],[3,"LimitReader","","[Original impl](https://github.com/rust-lang/rust/blob/17bc7d8d5be3be9674d702ccad2fa88c487d23b0/src/libstd/old_io/util.rs#L20)"],[3,"MaxBodyLength","","Use this key to modify the default body limit."],[3,"Raw","","Raw is a plugin to read a request body into UTF-8 String.\nDoesn't read `multipart/form-data`."],[3,"Json","","Json is a plugin to parse a request body into JSON.\nUses Raw plugin to parse the body with limit."],[3,"Struct","","Struct is a plugin to parse a request body into a struct.\nUses Raw plugin to parse the body with limit."],[4,"BodyErrorCause","",""],[13,"Utf8Error","","",1],[13,"IoError","","",1],[13,"ParserError","","",1],[13,"DecoderError","","",1],[11,"clone","","",1],[11,"fmt","","",1],[11,"clone","","",0],[11,"fmt","","",0],[11,"description","","",0],[11,"fmt","","",0],[11,"fmt","","",2],[11,"new","","",2],[11,"into_inner","","",2],[11,"limit","","",2],[11,"read","","",2],[6,"Value","",""],[6,"Value","",""],[6,"Error","",""],[11,"eval","","",3],[11,"clone","","",4],[6,"Value","",""],[6,"Error","",""],[11,"eval","","",4],[11,"clone","","",5],[6,"Value","",""],[6,"Error","",""],[11,"eval","","",5]],"paths":[[3,"BodyError"],[4,"BodyErrorCause"],[3,"LimitReader"],[3,"Raw"],[3,"Json"],[3,"Struct"]]};
searchIndex['static'] = {"items":[[0,"","static","Static file-serving handler."],[3,"Static","","The static file-serving `Handler`."],[12,"root","","The path this handler is serving files from.",0],[3,"Cache","","A modifier for `Static` to specify a response's `cache-control`."],[12,"duration","","The length of time the file should be cached for.",1],[11,"clone","","",0],[11,"new","","Create a new instance of `Static` with a given root path.",0],[11,"cache","","Specify the response's `cache-control` header with a given duration. Internally, this is\na helper function to set a `Cache` on an instance of `Static`.",0],[11,"handle","","",0],[11,"clone","","",1],[11,"new","","Create a new instance of `Cache` with a given duration.",1],[11,"modify","","",1]],"paths":[[3,"Static"],[3,"Cache"]]};
searchIndex['urlencoded'] = {"items":[[0,"","urlencoded","URL Encoded Plugin for Iron."],[3,"UrlEncodedQuery","","Plugin for `Request` that extracts URL encoded data from the URL query string."],[3,"UrlEncodedBody","","Plugin for `Request` that extracts URL encoded data from the request body."],[4,"UrlDecodingError","","An error representing the two possible errors that can occur during URL decoding."],[13,"BodyError","","An error parsing the request body",0],[13,"EmptyQuery","","An empty query string, either in body or url query",0],[6,"QueryMap","","Hashmap mapping strings to vectors of strings."],[6,"QueryResult","","Result type for decoding query parameters."],[11,"fmt","","",0],[11,"clone","","",0],[11,"fmt","","",0],[11,"description","","",0],[11,"cause","","",0],[6,"Value","",""],[6,"Value","",""],[6,"Error","",""],[11,"eval","","",1],[6,"Error","",""],[11,"eval","","",2]],"paths":[[4,"UrlDecodingError"],[3,"UrlEncodedQuery"],[3,"UrlEncodedBody"]]};
initSearch(searchIndex);

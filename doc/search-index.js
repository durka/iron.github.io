var searchIndex = {};
searchIndex['iron'] = {"items":[[0,"","iron","The main crate for Iron.",null,null],[11,"new","typemap","Create a new, empty TypeMap.",0,{"inputs":[{"name":"typemap"}],"output":{"name":"typemap"}}],[11,"custom","","Create a new, empty TypeMap.",0,{"inputs":[{"name":"typemap"}],"output":{"name":"typemap"}}],[11,"insert","","Insert a value into the map with a specified key type.",0,null],[11,"get","","Find a value in the map and get a reference to it.",0,{"inputs":[{"name":"typemap"}],"output":{"name":"option"}}],[11,"get_mut","","Find a value in the map and get a mutable reference to it.",0,{"inputs":[{"name":"typemap"}],"output":{"name":"option"}}],[11,"contains","","Check if a key has an associated value stored in the map.",0,{"inputs":[{"name":"typemap"}],"output":{"name":"bool"}}],[11,"remove","","Remove a value from the map.",0,{"inputs":[{"name":"typemap"}],"output":{"name":"option"}}],[11,"entry","","Get the given key's corresponding entry in the map for in-place manipulation.",0,{"inputs":[{"name":"typemap"}],"output":{"name":"entry"}}],[11,"data","","Read the underlying HashMap",0,{"inputs":[{"name":"typemap"}],"output":{"name":"hashmap"}}],[11,"data_mut","","Get a mutable reference to the underlying HashMap",0,{"inputs":[{"name":"typemap"}],"output":{"name":"hashmap"}}],[11,"len","","Get the number of values stored in the map.",0,{"inputs":[{"name":"typemap"}],"output":{"name":"usize"}}],[11,"is_empty","","Return true if the map contains no values.",0,{"inputs":[{"name":"typemap"}],"output":{"name":"bool"}}],[11,"clear","","Remove all entries from the map.",0,null],[11,"fmt","","",0,{"inputs":[{"name":"typemap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",0,{"inputs":[{"name":"typemap"}],"output":{"name":"typemap"}}],[11,"clone","","",0,{"inputs":[{"name":"typemap"}],"output":{"name":"typemap"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",1,null],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",1,null],[11,"get","","Get a reference to the entry's value.",2,null],[11,"get_mut","","Get a mutable reference to the entry's value.",2,null],[11,"into_mut","","Transform the entry into a mutable reference with the same lifetime as the map.",2,null],[11,"insert","","Set the entry's value and return the previous value.",2,null],[11,"remove","","Move the entry's value out of the map, consuming the entry.",2,null],[11,"insert","","Set the entry's value and return a mutable reference to it.",3,null],[11,"clone","alloc::boxed","",4,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone","","",4,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone","","",4,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone","","",4,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[3,"TypeMap","iron","A map keyed by types.",null,null],[0,"headers","","Headers container, and common header fields.",null,null],[0,"parsing","iron::headers","Utility functions for Header implementations.",null,null],[5,"from_one_raw_str","iron::headers::parsing","Reads a single raw string when parsing a header",null,null],[5,"from_comma_delimited","","Reads a comma-delimited raw header into a Vec.",null,null],[5,"from_one_comma_delimited","","Reads a comma-delimited raw string into a Vec.",null,null],[5,"fmt_comma_delimited","","Format an array into a comma-delimited string.",null,null],[8,"Header","iron::headers","A trait for any object that will represent a header field and value.",null,null],[10,"header_name","","Returns the name of the header field this belongs to.",5,{"inputs":[{"name":"header"}],"output":{"name":"str"}}],[10,"parse_header","","Parse a header from a raw stream of bytes.",5,null],[8,"HeaderFormat","","A trait for any object that will represent a header field and value.",null,null],[10,"fmt_header","","Format a header to be output into a TcpStream.",6,{"inputs":[{"name":"headerformat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","hyper::header","Creates a new, empty headers map.",7,{"inputs":[{"name":"headers"}],"output":{"name":"headers"}}],[11,"set","","Set a header field to the corresponding value.",7,null],[11,"get_raw","","Access the raw value of a header.",7,{"inputs":[{"name":"headers"},{"name":"str"}],"output":{"name":"option"}}],[11,"set_raw","","Set the raw value of a header, bypassing any typed headers.",7,null],[11,"remove_raw","","Remove a header set by set_raw",7,null],[11,"get","","Get a reference to the header field's value, if it exists.",7,{"inputs":[{"name":"headers"}],"output":{"name":"option"}}],[11,"get_mut","","Get a mutable reference to the header field's value, if it exists.",7,{"inputs":[{"name":"headers"}],"output":{"name":"option"}}],[11,"has","","Returns a boolean of whether a certain header is in the map.",7,{"inputs":[{"name":"headers"}],"output":{"name":"bool"}}],[11,"remove","","Removes a header from the map, if one existed.\nReturns true if a header has been removed.",7,{"inputs":[{"name":"headers"}],"output":{"name":"bool"}}],[11,"iter","","Returns an iterator over the header fields.",7,{"inputs":[{"name":"headers"}],"output":{"name":"headersitems"}}],[11,"len","","Returns the number of headers in the map.",7,{"inputs":[{"name":"headers"}],"output":{"name":"usize"}}],[11,"clear","","Remove all headers from the map.",7,null],[11,"new","hyper::buffer","",8,{"inputs":[{"name":"bufreader"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"with_capacity","","",8,{"inputs":[{"name":"bufreader"},{"name":"r"},{"name":"usize"}],"output":{"name":"bufreader"}}],[11,"get_ref","","",8,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"get_mut","","",8,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"get_buf","","",8,null],[11,"into_inner","","",8,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"read_into_buf","","",8,{"inputs":[{"name":"bufreader"}],"output":{"name":"result"}}],[11,"read","","",8,null],[11,"fill_buf","","",8,{"inputs":[{"name":"bufreader"}],"output":{"name":"result"}}],[11,"consume","","",8,null],[11,"fmt","hyper::client::pool","",9,{"inputs":[{"name":"config"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",9,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"fmt","","",10,{"inputs":[{"name":"poolimpl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",11,null],[11,"fmt","","",11,{"inputs":[{"name":"scheme"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",11,{"inputs":[{"name":"scheme"},{"name":"scheme"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"scheme"},{"name":"scheme"}],"output":{"name":"bool"}}],[11,"clone","","",11,{"inputs":[{"name":"scheme"}],"output":{"name":"scheme"}}],[11,"from","","",11,{"inputs":[{"name":"scheme"},{"name":"str"}],"output":{"name":"scheme"}}],[11,"new","","Creates a `Pool` with an `HttpConnector`.",12,{"inputs":[{"name":"pool"},{"name":"config"}],"output":{"name":"pool"}}],[11,"with_connector","","Creates a `Pool` with a specified `NetworkConnector`.",12,{"inputs":[{"name":"pool"},{"name":"config"},{"name":"c"}],"output":{"name":"pool"}}],[11,"clear_idle","","Clear all idle connections from the Pool, closing them.",12,null],[6,"Stream","iron::headers","",null,null],[11,"connect","hyper::client::pool","",12,{"inputs":[{"name":"pool"},{"name":"str"},{"name":"u16"},{"name":"str"}],"output":{"name":"result"}}],[11,"set_ssl_verifier","","",12,null],[11,"read","","",13,null],[11,"write","","",13,null],[11,"flush","","",13,{"inputs":[{"name":"pooledstream"}],"output":{"name":"result"}}],[11,"peer_addr","","",13,{"inputs":[{"name":"pooledstream"}],"output":{"name":"result"}}],[11,"close","","",13,{"inputs":[{"name":"pooledstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"drop","","",13,null],[11,"headers","hyper::client::request","Read the Request headers.",14,{"inputs":[{"name":"request"}],"output":{"name":"headers"}}],[11,"method","","Read the Request method.",14,{"inputs":[{"name":"request"}],"output":{"name":"method"}}],[11,"new","","Create a new client request.",14,{"inputs":[{"name":"request"},{"name":"method"},{"name":"url"}],"output":{"name":"result"}}],[11,"with_connector","","Create a new client request with a specific underlying NetworkStream.",14,{"inputs":[{"name":"request"},{"name":"method"},{"name":"url"},{"name":"c"}],"output":{"name":"result"}}],[11,"start","","Consume a Fresh Request, writing the headers and method,\nreturning a Streaming Request.",14,{"inputs":[{"name":"request"}],"output":{"name":"result"}}],[11,"headers_mut","","Get a mutable reference to the Request headers.",14,{"inputs":[{"name":"request"}],"output":{"name":"headers"}}],[11,"send","","Completes writing the request, and returns a response to read from.",14,{"inputs":[{"name":"request"}],"output":{"name":"result"}}],[11,"write","","",14,null],[11,"flush","","",14,{"inputs":[{"name":"request"}],"output":{"name":"result"}}],[11,"fmt","hyper::client::response","",15,{"inputs":[{"name":"response"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new response from a server.",15,{"inputs":[{"name":"response"},{"name":"box"}],"output":{"name":"result"}}],[11,"status_raw","","Get the raw status code and reason.",15,{"inputs":[{"name":"response"}],"output":{"name":"rawstatus"}}],[11,"into_inner","","Consumes the Request to return the NetworkStream underneath.",15,{"inputs":[{"name":"response"}],"output":{"name":"box"}}],[11,"read","","",15,null],[11,"new","hyper::client","Create a new Client.",16,{"inputs":[{"name":"client"}],"output":{"name":"client"}}],[11,"with_pool_config","","Create a new Client with a configured Pool Config.",16,{"inputs":[{"name":"client"},{"name":"config"}],"output":{"name":"client"}}],[11,"with_connector","","Create a new client with a specific connector.",16,{"inputs":[{"name":"client"},{"name":"c"}],"output":{"name":"client"}}],[11,"set_ssl_verifier","","Set the SSL verifier callback for use with OpenSSL.",16,null],[11,"set_redirect_policy","","Set the RedirectPolicy.",16,null],[11,"get","","Build a Get request.",16,{"inputs":[{"name":"client"},{"name":"u"}],"output":{"name":"requestbuilder"}}],[11,"head","","Build a Head request.",16,{"inputs":[{"name":"client"},{"name":"u"}],"output":{"name":"requestbuilder"}}],[11,"post","","Build a Post request.",16,{"inputs":[{"name":"client"},{"name":"u"}],"output":{"name":"requestbuilder"}}],[11,"put","","Build a Put request.",16,{"inputs":[{"name":"client"},{"name":"u"}],"output":{"name":"requestbuilder"}}],[11,"delete","","Build a Delete request.",16,{"inputs":[{"name":"client"},{"name":"u"}],"output":{"name":"requestbuilder"}}],[11,"request","","Build a new request using this Client.",16,{"inputs":[{"name":"client"},{"name":"method"},{"name":"u"}],"output":{"name":"requestbuilder"}}],[6,"Stream","iron::headers","",null,null],[11,"connect","hyper::client","",17,{"inputs":[{"name":"connadapter"},{"name":"str"},{"name":"u16"},{"name":"str"}],"output":{"name":"result"}}],[11,"set_ssl_verifier","","",17,null],[6,"Stream","iron::headers","",null,null],[11,"connect","hyper::client","",18,{"inputs":[{"name":"connector"},{"name":"str"},{"name":"u16"},{"name":"str"}],"output":{"name":"result"}}],[11,"set_ssl_verifier","","",18,null],[11,"body","","Set a request body to be sent.",19,{"inputs":[{"name":"requestbuilder"},{"name":"b"}],"output":{"name":"requestbuilder"}}],[11,"headers","","Add additional headers to the request.",19,{"inputs":[{"name":"requestbuilder"},{"name":"headers"}],"output":{"name":"requestbuilder"}}],[11,"header","","Add an individual new header to the request.",19,{"inputs":[{"name":"requestbuilder"},{"name":"h"}],"output":{"name":"requestbuilder"}}],[11,"send","","Execute this request and receive a Response back.",19,{"inputs":[{"name":"requestbuilder"}],"output":{"name":"result"}}],[11,"read","","",20,null],[11,"from","","",20,{"inputs":[{"name":"body"},{"name":"r"}],"output":{"name":"body"}}],[11,"into_url","url","",21,{"inputs":[{"name":"url"}],"output":{"name":"result"}}],[11,"clone","hyper::client","",22,{"inputs":[{"name":"redirectpolicy"}],"output":{"name":"redirectpolicy"}}],[11,"default","","",22,{"inputs":[{"name":"redirectpolicy"}],"output":{"name":"redirectpolicy"}}],[11,"fmt","hyper::error","",23,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",23,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",23,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"cause","","",23,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"from","","",23,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",23,{"inputs":[{"name":"error"},{"name":"parseerror"}],"output":{"name":"error"}}],[11,"from","","",23,{"inputs":[{"name":"error"},{"name":"sslerror"}],"output":{"name":"error"}}],[11,"from","","",23,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"error"}}],[11,"fmt","hyper::method","",24,{"inputs":[{"name":"method"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",24,null],[11,"eq","","",24,{"inputs":[{"name":"method"},{"name":"method"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"method"},{"name":"method"}],"output":{"name":"bool"}}],[11,"clone","","",24,{"inputs":[{"name":"method"}],"output":{"name":"method"}}],[11,"as_ref","","",24,{"inputs":[{"name":"method"}],"output":{"name":"str"}}],[11,"safe","","Whether a method is considered \"safe\", meaning the request is\nessentially read-only.",24,{"inputs":[{"name":"method"}],"output":{"name":"bool"}}],[11,"idempotent","","Whether a method is considered \"idempotent\", meaning the request has\nthe same result is executed multiple times.",24,{"inputs":[{"name":"method"}],"output":{"name":"bool"}}],[6,"Err","iron::headers","",null,null],[11,"from_str","hyper::method","",24,{"inputs":[{"name":"method"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",24,{"inputs":[{"name":"method"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::accept","",25,{"inputs":[{"name":"accept"},{"name":"accept"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"accept"},{"name":"accept"}],"output":{"name":"bool"}}],[11,"fmt","","",25,{"inputs":[{"name":"accept"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",25,{"inputs":[{"name":"accept"}],"output":{"name":"accept"}}],[11,"new","collections::vec","Constructs a new, empty `Vec<T>`.",26,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec<T>` with the specified capacity.",26,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec<T>` directly from the raw components of another vector.",26,null],[11,"from_raw_buf","","Creates a vector by copying the elements from a raw pointer.",26,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",26,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec<T>`. The collection may reserve more space to avoid\nfrequent reallocations.",26,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec<T>`. Does nothing if the capacity is already\nsufficient.",26,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",26,null],[11,"into_boxed_slice","","Converts the vector into Box<[T]>.",26,{"inputs":[{"name":"vec"}],"output":{"name":"box"}}],[11,"truncate","","Shorten a vector, dropping excess elements.",26,null],[11,"as_slice","","Extracts a slice containing the entire vector.",26,null],[11,"as_mut_slice","","Deprecated: use `&mut s[..]` instead.",26,null],[11,"set_len","","Sets the length of a vector.",26,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",26,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after position `i` one position to the right.",26,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after position `index` one position to the left.",26,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"retain","","Retains only the elements specified by the predicate.",26,null],[11,"push","","Appends an element to the back of a collection.",26,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it is empty.",26,{"inputs":[{"name":"vec"}],"output":{"name":"option"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",26,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items from start to end. The element range is\nremoved even if the iterator is not consumed until the end.",26,{"inputs":[{"name":"vec"},{"name":"r"}],"output":{"name":"drain"}}],[11,"clear","","Clears the vector, removing all values.",26,null],[11,"len","","Returns the number of elements in the vector.",26,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the vector contains no elements.",26,{"inputs":[{"name":"vec"}],"output":{"name":"bool"}}],[11,"map_in_place","","Converts a `Vec<T>` to a `Vec<U>` where `T` and `U` have the same\nsize and in case they are not zero-sized the same minimal alignment.",26,{"inputs":[{"name":"vec"},{"name":"f"}],"output":{"name":"vec"}}],[11,"split_off","","Splits the collection into two at the given index.",26,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",26,null],[11,"push_all","","Appends all elements in a slice to the `Vec`.",26,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",26,null],[11,"clone","collections::binary_heap","",27,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"default","","",27,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",27,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",27,{"inputs":[{"name":"binaryheap"},{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"from_vec","","Creates a `BinaryHeap` from a vector. This is sometimes called\n`heapifying` the vector.",27,{"inputs":[{"name":"binaryheap"},{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",27,{"inputs":[{"name":"binaryheap"}],"output":{"name":"iter"}}],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",27,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",27,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",27,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",27,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",27,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",27,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"push","","Pushes an item onto the binary heap.",27,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",27,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"t"}}],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",27,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"option"}}],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",27,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",27,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"len","","Returns the length of the binary heap.",27,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"is_empty","","Checks if the binary heap is empty.",27,{"inputs":[{"name":"binaryheap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",27,{"inputs":[{"name":"binaryheap"}],"output":{"name":"drain"}}],[11,"clear","","Drops all items from the binary heap.",27,null],[11,"clone","","",28,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[6,"Item","iron::headers","",null,null],[11,"next","collections::binary_heap","",28,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",28,null],[11,"next_back","","",28,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[6,"Item","iron::headers","",null,null],[11,"next","collections::binary_heap","",29,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",29,null],[11,"next_back","","",29,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[6,"Item","iron::headers","",null,null],[11,"next","collections::binary_heap","",30,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",30,null],[11,"next_back","","",30,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"from_iter","","",27,{"inputs":[{"name":"binaryheap"},{"name":"i"}],"output":{"name":"binaryheap"}}],[6,"Item","iron::headers","",null,null],[6,"IntoIter","","",null,null],[11,"into_iter","collections::binary_heap","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",27,{"inputs":[{"name":"binaryheap"}],"output":{"name":"intoiter"}}],[6,"Item","iron::headers","",null,null],[6,"IntoIter","","",null,null],[11,"extend","collections::binary_heap","",27,null],[6,"Output","iron::headers","",null,null],[11,"index","collections::bit","",31,{"inputs":[{"name":"bitvec"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"new","","Creates an empty `BitVec`.",31,{"inputs":[{"name":"bitvec"}],"output":{"name":"bitvec"}}],[11,"from_elem","","Creates a `BitVec` that holds `nbits` elements, setting each element\nto `bit`.",31,{"inputs":[{"name":"bitvec"},{"name":"usize"},{"name":"bool"}],"output":{"name":"bitvec"}}],[11,"with_capacity","","Constructs a new, empty `BitVec` with the specified capacity.",31,{"inputs":[{"name":"bitvec"},{"name":"usize"}],"output":{"name":"bitvec"}}],[11,"from_bytes","","Transforms a byte-vector into a `BitVec`. Each byte becomes eight bits,\nwith the most significant bits of each byte coming first. Each\nbit becomes `true` if equal to 1 or `false` if equal to 0.",31,null],[11,"from_fn","","Creates a `BitVec` of the specified length where the value at each index\nis `f(index)`.",31,{"inputs":[{"name":"bitvec"},{"name":"usize"},{"name":"f"}],"output":{"name":"bitvec"}}],[11,"get","","Retrieves the value at index `i`, or `None` if the index is out of bounds.",31,{"inputs":[{"name":"bitvec"},{"name":"usize"}],"output":{"name":"option"}}],[11,"set","","Sets the value of a bit at an index `i`.",31,null],[11,"set_all","","Sets all bits to 1.",31,null],[11,"negate","","Flips all bits.",31,null],[11,"union","","Calculates the union of two bitvectors. This acts like the bitwise `or`\nfunction.",31,{"inputs":[{"name":"bitvec"},{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"intersect","","Calculates the intersection of two bitvectors. This acts like the\nbitwise `and` function.",31,{"inputs":[{"name":"bitvec"},{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"difference","","Calculates the difference between two bitvectors.",31,{"inputs":[{"name":"bitvec"},{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"all","","Returns `true` if all bits are 1.",31,{"inputs":[{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"iter","","Returns an iterator over the elements of the vector in order.",31,{"inputs":[{"name":"bitvec"}],"output":{"name":"iter"}}],[11,"append","","Moves all bits from `other` into `Self`, leaving `other` empty.",31,null],[11,"split_off","","Splits the `BitVec` into two at the given bit,\nretaining the first half in-place and returning the second one.",31,{"inputs":[{"name":"bitvec"},{"name":"usize"}],"output":{"name":"bitvec"}}],[11,"none","","Returns `true` if all bits are 0.",31,{"inputs":[{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"any","","Returns `true` if any bit is 1.",31,{"inputs":[{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"to_bytes","","Organises the bits into bytes, such that the first bit in the\n`BitVec` becomes the high-order bit of the first byte. If the\nsize of the `BitVec` is not a multiple of eight then trailing bits\nwill be filled-in with `false`.",31,{"inputs":[{"name":"bitvec"}],"output":{"name":"vec"}}],[11,"eq_vec","","Compares a `BitVec` to a slice of `bool`s.\nBoth the `BitVec` and slice must have the same length.",31,null],[11,"truncate","","Shortens a `BitVec`, dropping excess elements.",31,null],[11,"reserve","","Reserves capacity for at least `additional` more bits to be inserted in the given\n`BitVec`. The collection may reserve more space to avoid frequent reallocations.",31,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more bits to be inserted in the\ngiven `BitVec`. Does nothing if the capacity is already sufficient.",31,null],[11,"capacity","","Returns the capacity in bits for this bit vector. Inserting any\nelement less than this amount will not trigger a resizing.",31,{"inputs":[{"name":"bitvec"}],"output":{"name":"usize"}}],[11,"grow","","Grows the `BitVec` in-place, adding `n` copies of `value` to the `BitVec`.",31,null],[11,"pop","","Removes the last bit from the BitVec, and returns it. Returns None if the BitVec is empty.",31,{"inputs":[{"name":"bitvec"}],"output":{"name":"option"}}],[11,"push","","Pushes a `bool` onto the end.",31,null],[11,"len","","Returns the total number of bits in this vector",31,{"inputs":[{"name":"bitvec"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if there are no bits in this vector",31,{"inputs":[{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"clear","","Clears all bits in this vector.",31,null],[11,"default","","",31,{"inputs":[{"name":"bitvec"}],"output":{"name":"bitvec"}}],[11,"from_iter","","",31,{"inputs":[{"name":"bitvec"},{"name":"i"}],"output":{"name":"bitvec"}}],[11,"extend","","",31,null],[11,"clone","","",31,{"inputs":[{"name":"bitvec"}],"output":{"name":"bitvec"}}],[11,"clone_from","","",31,null],[11,"partial_cmp","","",31,{"inputs":[{"name":"bitvec"},{"name":"bitvec"}],"output":{"name":"option"}}],[11,"cmp","","",31,{"inputs":[{"name":"bitvec"},{"name":"bitvec"}],"output":{"name":"ordering"}}],[11,"fmt","","",31,{"inputs":[{"name":"bitvec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",31,null],[11,"eq","","",31,{"inputs":[{"name":"bitvec"},{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"clone","","",32,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[6,"Item","iron::headers","",null,null],[11,"next","collections::bit","",32,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",32,null],[11,"next_back","","",32,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"indexable","","",32,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"idx","","",32,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[6,"Item","iron::headers","",null,null],[6,"IntoIter","","",null,null],[11,"clone","collections::bit","",33,{"inputs":[{"name":"bitset"}],"output":{"name":"bitset"}}],[11,"default","","",33,{"inputs":[{"name":"bitset"}],"output":{"name":"bitset"}}],[11,"from_iter","","",33,{"inputs":[{"name":"bitset"},{"name":"i"}],"output":{"name":"bitset"}}],[11,"extend","","",33,null],[11,"partial_cmp","","",33,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"option"}}],[11,"cmp","","",33,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"ordering"}}],[11,"eq","","",33,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"bool"}}],[11,"new","","Creates a new empty `BitSet`.",33,{"inputs":[{"name":"bitset"}],"output":{"name":"bitset"}}],[11,"with_capacity","","Creates a new `BitSet` with initially no contents, able to\nhold `nbits` elements without resizing.",33,{"inputs":[{"name":"bitset"},{"name":"usize"}],"output":{"name":"bitset"}}],[11,"from_bit_vec","","Creates a new `BitSet` from the given bit vector.",33,{"inputs":[{"name":"bitset"},{"name":"bitvec"}],"output":{"name":"bitset"}}],[11,"capacity","","Returns the capacity in bits for this bit vector. Inserting any\nelement less than this amount will not trigger a resizing.",33,{"inputs":[{"name":"bitset"}],"output":{"name":"usize"}}],[11,"reserve_len","","Reserves capacity for the given `BitSet` to contain `len` distinct elements. In the case\nof `BitSet` this means reallocations will not occur as long as all inserted elements\nare less than `len`.",33,null],[11,"reserve_len_exact","","Reserves the minimum capacity for the given `BitSet` to contain `len` distinct elements.\nIn the case of `BitSet` this means reallocations will not occur as long as all inserted\nelements are less than `len`.",33,null],[11,"into_bit_vec","","Consumes this set to return the underlying bit vector.",33,{"inputs":[{"name":"bitset"}],"output":{"name":"bitvec"}}],[11,"get_ref","","Returns a reference to the underlying bit vector.",33,{"inputs":[{"name":"bitset"}],"output":{"name":"bitvec"}}],[11,"shrink_to_fit","","Truncates the underlying vector to the least length required.",33,null],[11,"iter","","Iterator over each usize stored in the `BitSet`.",33,{"inputs":[{"name":"bitset"}],"output":{"name":"setiter"}}],[11,"union","","Iterator over each usize stored in `self` union `other`.\nSee [union_with](#method.union_with) for an efficient in-place version.",33,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"union"}}],[11,"intersection","","Iterator over each usize stored in `self` intersect `other`.\nSee [intersect_with](#method.intersect_with) for an efficient in-place version.",33,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"intersection"}}],[11,"difference","","Iterator over each usize stored in the `self` setminus `other`.\nSee [difference_with](#method.difference_with) for an efficient in-place version.",33,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"difference"}}],[11,"symmetric_difference","","Iterator over each usize stored in the symmetric difference of `self` and `other`.\nSee [symmetric_difference_with](#method.symmetric_difference_with) for\nan efficient in-place version.",33,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"symmetricdifference"}}],[11,"union_with","","Unions in-place with the specified other bit vector.",33,null],[11,"intersect_with","","Intersects in-place with the specified other bit vector.",33,null],[11,"difference_with","","Makes this bit vector the difference with the specified other bit vector\nin-place.",33,null],[11,"symmetric_difference_with","","Makes this bit vector the symmetric difference with the specified other\nbit vector in-place.",33,null],[11,"append","","Moves all elements from `other` into `Self`, leaving `other` empty.",33,null],[11,"split_off","","Splits the `BitSet` into two at the given key including the key.\nRetains the first part in-place while returning the second part.",33,{"inputs":[{"name":"bitset"},{"name":"usize"}],"output":{"name":"bitset"}}],[11,"len","","Returns the number of set bits in this set.",33,{"inputs":[{"name":"bitset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns whether there are no bits set in this set",33,{"inputs":[{"name":"bitset"}],"output":{"name":"bool"}}],[11,"clear","","Clears all bits in this set",33,null],[11,"contains","","Returns `true` if this set contains the specified integer.",33,{"inputs":[{"name":"bitset"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",33,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if the set is a subset of another.",33,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if the set is a superset of another.",33,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"bool"}}],[11,"insert","","Adds a value to the set. Returns `true` if the value was not already\npresent in the set.",33,{"inputs":[{"name":"bitset"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",33,{"inputs":[{"name":"bitset"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"fmt","","",33,{"inputs":[{"name":"bitset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",33,null],[11,"clone","","",34,{"inputs":[{"name":"setiter"}],"output":{"name":"setiter"}}],[11,"clone","","",35,{"inputs":[{"name":"twobitpositions"}],"output":{"name":"twobitpositions"}}],[11,"clone","","",36,{"inputs":[{"name":"union"}],"output":{"name":"union"}}],[11,"clone","","",37,{"inputs":[{"name":"intersection"}],"output":{"name":"intersection"}}],[11,"clone","","",38,{"inputs":[{"name":"difference"}],"output":{"name":"difference"}}],[11,"clone","","",39,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"symmetricdifference"}}],[6,"Item","iron::headers","",null,null],[11,"next","collections::bit","",34,{"inputs":[{"name":"setiter"}],"output":{"name":"option"}}],[11,"size_hint","","",34,null],[6,"Item","iron::headers","",null,null],[11,"next","collections::bit","",35,{"inputs":[{"name":"twobitpositions"}],"output":{"name":"option"}}],[11,"size_hint","","",35,null],[6,"Item","iron::headers","",null,null],[11,"next","collections::bit","",36,{"inputs":[{"name":"union"}],"output":{"name":"option"}}],[11,"size_hint","","",36,null],[6,"Item","iron::headers","",null,null],[11,"next","collections::bit","",37,{"inputs":[{"name":"intersection"}],"output":{"name":"option"}}],[11,"size_hint","","",37,null],[6,"Item","iron::headers","",null,null],[11,"next","collections::bit","",38,{"inputs":[{"name":"difference"}],"output":{"name":"option"}}],[11,"size_hint","","",38,null],[6,"Item","iron::headers","",null,null],[11,"next","collections::bit","",39,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"option"}}],[11,"size_hint","","",39,null],[6,"Item","iron::headers","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[11,"next","collections::btree::node","",40,{"inputs":[{"name":"rawitems"}],"output":{"name":"option"}}],[11,"next_back","","",40,{"inputs":[{"name":"rawitems"}],"output":{"name":"option"}}],[11,"drop","","",40,null],[11,"drop","","",41,null],[11,"as_slices","","",41,null],[11,"as_slices_mut","","",41,null],[11,"as_slices_internal","","",41,{"inputs":[{"name":"node"}],"output":{"name":"nodeslice"}}],[11,"as_slices_internal_mut","","",41,{"inputs":[{"name":"node"}],"output":{"name":"mutnodeslice"}}],[11,"keys","","",41,null],[11,"keys_mut","","",41,null],[11,"vals","","",41,null],[11,"vals_mut","","",41,null],[11,"edges","","",41,null],[11,"edges_mut","","",41,null],[11,"clone","","",41,{"inputs":[{"name":"node"}],"output":{"name":"node"}}],[11,"clone","","",42,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"search","","Searches for the given key in the node. If it finds an exact match,\n`Found` will be yielded with the matching index. If it doesn't find an exact match,\n`GoDown` will be yielded with the index of the subtree the key must lie in.",41,{"inputs":[{"name":"node"},{"name":"noderef"},{"name":"q"}],"output":{"name":"searchresult"}}],[11,"make_leaf_root","","Make a leaf root from scratch",41,{"inputs":[{"name":"node"},{"name":"usize"}],"output":{"name":"node"}}],[11,"make_internal_root","","Make an internal root and swap it with an old root",41,null],[11,"len","","How many key-value pairs the node contains",41,{"inputs":[{"name":"node"}],"output":{"name":"usize"}}],[11,"is_empty","","Does the node not contain any key-value pairs",41,{"inputs":[{"name":"node"}],"output":{"name":"bool"}}],[11,"capacity","","How many key-value pairs the node can fit",41,{"inputs":[{"name":"node"}],"output":{"name":"usize"}}],[11,"is_leaf","","If the node has any children",41,{"inputs":[{"name":"node"}],"output":{"name":"bool"}}],[11,"is_underfull","","if the node has too few elements",41,{"inputs":[{"name":"node"}],"output":{"name":"bool"}}],[11,"is_full","","if the node cannot fit any more elements",41,{"inputs":[{"name":"node"}],"output":{"name":"bool"}}],[11,"node","","Returns a reference to the node that contains the pointed-to edge or key/value pair. This\nis very different from `edge` and `edge_mut` because those return children of the node\nreturned by `node`.",42,{"inputs":[{"name":"handle"}],"output":{"name":"node"}}],[11,"as_raw","","Converts a handle into one that stores the same information using a raw pointer. This can\nbe useful in conjunction with `from_raw` when the type system is insufficient for\ndetermining the lifetimes of the nodes.",42,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"from_raw","","Converts from a handle stored with a raw pointer, which isn't directly usable, to a handle\nstored with a reference. This is an unsafe inverse of `as_raw`, and together they allow\nunsafely extending the lifetime of the reference to the `Node`.",42,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"from_raw_mut","","Converts from a handle stored with a raw pointer, which isn't directly usable, to a handle\nstored with a mutable reference. This is an unsafe inverse of `as_raw`, and together they\nallow unsafely extending the lifetime of the reference to the `Node`.",42,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"into_edge","","Turns the handle into a reference to the edge it points at. This is necessary because the\nreturned pointer has a larger lifetime than what would be returned by `edge` or `edge_mut`,\nmaking it more suitable for moving down a chain of nodes.",42,{"inputs":[{"name":"handle"}],"output":{"name":"node"}}],[11,"into_edge_mut","","Turns the handle into a mutable reference to the edge it points at. This is necessary\nbecause the returned pointer has a larger lifetime than what would be returned by\n`edge_mut`, making it more suitable for moving down a chain of nodes.",42,{"inputs":[{"name":"handle"}],"output":{"name":"node"}}],[11,"force","","Figure out whether this handle is pointing to something in a leaf node or to something in\nan internal node, clarifying the type according to the result.",42,{"inputs":[{"name":"handle"}],"output":{"name":"forceresult"}}],[11,"insert_as_leaf","","Tries to insert this key-value pair at the given index in this leaf node\nIf the node is full, we have to split it.",42,null],[11,"edge_mut","","Returns a mutable reference to the edge pointed-to by this handle. This should not be\nconfused with `node`, which references the parent node of what is returned here.",42,{"inputs":[{"name":"handle"}],"output":{"name":"node"}}],[11,"insert_as_internal","","Tries to insert this key-value pair at the given index in this internal node\nIf the node is full, we have to split it.",42,{"inputs":[{"name":"handle"},{"name":"k"},{"name":"v"},{"name":"node"}],"output":{"name":"insertionresult"}}],[11,"handle_underflow","","Handle an underflow in this node's child. We favour handling \"to the left\" because we know\nwe're empty, but our neighbour can be full. Handling to the left means when we choose to\nsteal, we pop off the end of our neighbour (always fast) and \"unshift\" ourselves\n(always slow, but at least faster since we know we're half-empty).\nHandling \"to the right\" reverses these roles. Of course, we merge whenever possible\nbecause we want dense nodes, and merging is about equal work regardless of direction.",42,null],[11,"into_kv","","Turns the handle into references to the key and value it points at. This is necessary\nbecause the returned pointers have larger lifetimes than what would be returned by `key`\nor `val`.",42,null],[11,"into_kv_mut","","Turns the handle into mutable references to the key and value it points at. This is\nnecessary because the returned pointers have larger lifetimes than what would be returned\nby `key_mut` or `val_mut`.",42,null],[11,"into_left_edge","","Convert this handle into one pointing at the edge immediately to the left of the key/value\npair pointed-to by this handle. This is useful because it returns a reference with larger\nlifetime than `left_edge`.",42,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"key_mut","","Returns a mutable reference to the key pointed-to by this handle. This doesn't return a\nreference with a lifetime as large as `into_kv_mut`, but it also does not consume the\nhandle.",42,{"inputs":[{"name":"handle"}],"output":{"name":"k"}}],[11,"val_mut","","Returns a mutable reference to the value pointed-to by this handle. This doesn't return a\nreference with a lifetime as large as `into_kv_mut`, but it also does not consume the\nhandle.",42,{"inputs":[{"name":"handle"}],"output":{"name":"v"}}],[11,"left_edge","","Gets the handle pointing to the edge immediately to the left of the key/value pair pointed\nto by this handle.",42,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"right_edge","","Gets the handle pointing to the edge immediately to the right of the key/value pair pointed\nto by this handle.",42,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"remove_as_leaf","","Removes the key/value pair at the handle's location.",42,null],[11,"kv_handle","","Returns the mutable handle pointing to the key/value pair at a given index.",41,{"inputs":[{"name":"node"},{"name":"usize"}],"output":{"name":"handle"}}],[11,"iter","","",41,{"inputs":[{"name":"node"}],"output":{"name":"abstraversal"}}],[11,"iter_mut","","",41,{"inputs":[{"name":"node"}],"output":{"name":"abstraversal"}}],[11,"into_iter","","",41,{"inputs":[{"name":"node"}],"output":{"name":"abstraversal"}}],[11,"hoist_lone_child","","When a node has no keys or values and only a single edge, extract that edge.",41,null],[11,"clone","","",43,{"inputs":[{"name":"elemsandedges"}],"output":{"name":"elemsandedges"}}],[6,"Item","iron::headers","",null,null],[6,"Edge","","",null,null],[11,"next_kv","collections::btree::node","",43,{"inputs":[{"name":"elemsandedges"}],"output":{"name":"option"}}],[11,"next_kv_back","","",43,{"inputs":[{"name":"elemsandedges"}],"output":{"name":"option"}}],[11,"next_edge","","",43,{"inputs":[{"name":"elemsandedges"}],"output":{"name":"option"}}],[11,"next_edge_back","","",43,{"inputs":[{"name":"elemsandedges"}],"output":{"name":"option"}}],[6,"Item","iron::headers","",null,null],[6,"Edge","","",null,null],[11,"next_kv","collections::btree::node","",44,{"inputs":[{"name":"movetraversalimpl"}],"output":{"name":"option"}}],[11,"next_kv_back","","",44,{"inputs":[{"name":"movetraversalimpl"}],"output":{"name":"option"}}],[11,"next_edge","","",44,{"inputs":[{"name":"movetraversalimpl"}],"output":{"name":"option"}}],[11,"next_edge_back","","",44,{"inputs":[{"name":"movetraversalimpl"}],"output":{"name":"option"}}],[11,"drop","","",44,null],[11,"clone","","",45,{"inputs":[{"name":"abstraversal"}],"output":{"name":"abstraversal"}}],[6,"Item","iron::headers","",null,null],[11,"next","collections::btree::node","",45,{"inputs":[{"name":"abstraversal"}],"output":{"name":"option"}}],[11,"next_back","","",45,{"inputs":[{"name":"abstraversal"}],"output":{"name":"option"}}],[11,"next_edge_item","","Advances the iterator and returns the item if it's an edge. Returns None\nand does nothing if the first item is not an edge.",45,{"inputs":[{"name":"abstraversal"}],"output":{"name":"option"}}],[11,"next_edge_item_back","","Advances the iterator and returns the item if it's an edge. Returns None\nand does nothing if the last item is not an edge.",45,{"inputs":[{"name":"abstraversal"}],"output":{"name":"option"}}],[11,"next_kv_item","","Advances the iterator and returns the item if it's a key-value pair. Returns None\nand does nothing if the first item is not a key-value pair.",45,{"inputs":[{"name":"abstraversal"}],"output":{"name":"option"}}],[11,"next_kv_item_back","","Advances the iterator and returns the item if it's a key-value pair. Returns None\nand does nothing if the last item is not a key-value pair.",45,{"inputs":[{"name":"abstraversal"}],"output":{"name":"option"}}],[11,"slice_from","","Returns a sub-slice with elements starting with `min_key`.",46,{"inputs":[{"name":"nodeslice"},{"name":"k"}],"output":{"name":"nodeslice"}}],[11,"slice_to","","Returns a sub-slice with elements up to and including `max_key`.",46,{"inputs":[{"name":"nodeslice"},{"name":"k"}],"output":{"name":"nodeslice"}}],[11,"iter","","Returns an iterator over key/value pairs and edges in a slice.",46,{"inputs":[{"name":"nodeslice"}],"output":{"name":"abstraversal"}}],[11,"slice_from","","Returns a sub-slice with elements starting with `min_key`.",47,{"inputs":[{"name":"mutnodeslice"},{"name":"k"}],"output":{"name":"mutnodeslice"}}],[11,"slice_to","","Returns a sub-slice with elements up to and including `max_key`.",47,{"inputs":[{"name":"mutnodeslice"},{"name":"k"}],"output":{"name":"mutnodeslice"}}],[11,"iter_mut","","Returns an iterator over key/value pairs and edges in a slice.",47,{"inputs":[{"name":"mutnodeslice"}],"output":{"name":"abstraversal"}}],[11,"clone","collections::btree::map","",48,{"inputs":[{"name":"btreemap"}],"output":{"name":"btreemap"}}],[11,"clone","","",49,{"inputs":[{"name":"absiter"}],"output":{"name":"absiter"}}],[11,"new","","Makes a new empty BTreeMap with a reasonable choice for B.",48,{"inputs":[{"name":"btreemap"}],"output":{"name":"btreemap"}}],[11,"with_b","","Makes a new empty BTreeMap with the given B.",48,{"inputs":[{"name":"btreemap"},{"name":"usize"}],"output":{"name":"btreemap"}}],[11,"clear","","Clears the map, removing all values.",48,null],[11,"get","","Returns a reference to the value corresponding to the key.",48,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"option"}}],[11,"contains_key","","Returns true if the map contains a value for the specified key.",48,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",48,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"option"}}],[11,"insert","","Inserts a key-value pair into the map. If the key already had a value\npresent in the map, that value is returned. Otherwise, `None` is returned.",48,{"inputs":[{"name":"btreemap"},{"name":"k"},{"name":"v"}],"output":{"name":"option"}}],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",48,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"option"}}],[6,"Item","iron::headers","",null,null],[6,"IntoIter","","",null,null],[11,"into_iter","collections::btree::map","Gets an owning iterator over the entries of the map.",48,{"inputs":[{"name":"btreemap"}],"output":{"name":"intoiter"}}],[6,"Item","iron::headers","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Target","","",null,null],[11,"deref","collections::btree::map::stack","",50,{"inputs":[{"name":"idref"}],"output":{"name":"t"}}],[11,"deref_mut","","",50,{"inputs":[{"name":"idref"}],"output":{"name":"t"}}],[11,"new","","Creates a new PartialSearchStack from a BTreeMap by initializing the stack with the\nroot of the tree.",51,{"inputs":[{"name":"partialsearchstack"},{"name":"btreemap"}],"output":{"name":"partialsearchstack"}}],[11,"with","","Breaks up the stack into a `Pusher` and the next `Node`, allowing the given closure\nto interact with, search, and finally push the `Node` onto the stack. The passed in\nclosure must be polymorphic on the `'id` lifetime parameter, as this statically\nensures that only `Handle`s from the correct `Node` can be pushed.",51,{"inputs":[{"name":"partialsearchstack"},{"name":"f"}],"output":{"name":"t"}}],[11,"push","","Pushes the requested child of the stack's current top on top of the stack. If the child\nexists, then a new PartialSearchStack is yielded. Otherwise, a VacantSearchStack is\nyielded.",52,{"inputs":[{"name":"pusher"},{"name":"handle"}],"output":{"name":"partialsearchstack"}}],[11,"seal","","Converts the PartialSearchStack into a SearchStack.",52,{"inputs":[{"name":"pusher"},{"name":"handle"}],"output":{"name":"searchstack"}}],[11,"peek","","Gets a reference to the value the stack points to.",53,{"inputs":[{"name":"searchstack"}],"output":{"name":"v"}}],[11,"peek_mut","","Gets a mutable reference to the value the stack points to.",53,{"inputs":[{"name":"searchstack"}],"output":{"name":"v"}}],[11,"into_top","","Converts the stack into a mutable reference to the value it points to, with a lifetime\ntied to the original tree.",53,{"inputs":[{"name":"searchstack"}],"output":{"name":"v"}}],[11,"remove","","Removes the key and value in the top element of the stack, then handles underflows as\ndescribed in BTree's pop function.",53,{"inputs":[{"name":"searchstack"}],"output":{"name":"v"}}],[11,"insert","","Inserts the key and value into the top element in the stack, and if that node has to\nsplit recursively inserts the split contents into the next element stack until\nsplits stop.",53,{"inputs":[{"name":"searchstack"},{"name":"k"},{"name":"v"}],"output":{"name":"v"}}],[11,"from_iter","collections::btree::map","",48,{"inputs":[{"name":"btreemap"},{"name":"t"}],"output":{"name":"btreemap"}}],[11,"extend","","",48,null],[11,"hash","","",48,null],[11,"default","","",48,{"inputs":[{"name":"btreemap"}],"output":{"name":"btreemap"}}],[11,"eq","","",48,{"inputs":[{"name":"btreemap"},{"name":"btreemap"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",48,{"inputs":[{"name":"btreemap"},{"name":"btreemap"}],"output":{"name":"option"}}],[11,"cmp","","",48,{"inputs":[{"name":"btreemap"},{"name":"btreemap"}],"output":{"name":"ordering"}}],[11,"fmt","","",48,{"inputs":[{"name":"btreemap"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Output","iron::headers","",null,null],[11,"index","collections::btree::map","",48,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"v"}}],[11,"traverse","collections::btree::node","",45,{"inputs":[{"name":"abstraversal"},{"name":"node"}],"output":{"name":"abstraversal"}}],[11,"traverse","","",45,{"inputs":[{"name":"abstraversal"},{"name":"node"}],"output":{"name":"abstraversal"}}],[11,"traverse","","",45,{"inputs":[{"name":"abstraversal"},{"name":"node"}],"output":{"name":"abstraversal"}}],[6,"Item","iron::headers","",null,null],[11,"next","collections::btree::map","",49,{"inputs":[{"name":"absiter"}],"output":{"name":"option"}}],[11,"size_hint","","",49,null],[11,"next_back","","",49,{"inputs":[{"name":"absiter"}],"output":{"name":"option"}}],[11,"clone","","",54,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[6,"Item","iron::headers","",null,null],[11,"next","collections::btree::map","",54,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",54,null],[11,"next_back","","",54,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[6,"Item","iron::headers","",null,null],[11,"next","collections::btree::map","",55,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",55,null],[11,"next_back","","",55,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[6,"Item","iron::headers","",null,null],[11,"next","collections::btree::map","",56,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",56,null],[11,"next_back","","",56,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"clone","","",57,{"inputs":[{"name":"keys"}],"output":{"name":"keys"}}],[6,"Item","iron::headers","",null,null],[11,"next","collections::btree::map","",57,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"size_hint","","",57,null],[11,"next_back","","",57,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"clone","","",58,{"inputs":[{"name":"values"}],"output":{"name":"values"}}],[6,"Item","iron::headers","",null,null],[11,"next","collections::btree::map","",58,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"size_hint","","",58,null],[11,"next_back","","",58,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"clone","","",59,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[6,"Item","iron::headers","",null,null],[11,"next","collections::btree::map","",59,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next_back","","",59,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[6,"Item","iron::headers","",null,null],[11,"next","collections::btree::map","",60,{"inputs":[{"name":"rangemut"}],"output":{"name":"option"}}],[11,"next_back","","",60,{"inputs":[{"name":"rangemut"}],"output":{"name":"option"}}],[11,"get","","Returns a mutable reference to the entry if occupied, or the VacantEntry if vacant",61,{"inputs":[{"name":"entry"}],"output":{"name":"result"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",61,{"inputs":[{"name":"entry"},{"name":"v"}],"output":{"name":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",61,{"inputs":[{"name":"entry"},{"name":"f"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the VacantEntry's key,\nand returns a mutable reference to it.",62,{"inputs":[{"name":"vacantentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"get","","Gets a reference to the value in the entry.",63,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",63,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"into_mut","","Converts the entry into a mutable reference to its value.",63,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the OccupiedEntry's key,\nand returns the entry's old value.",63,{"inputs":[{"name":"occupiedentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"remove","","Takes the value of the entry out of the map, and returns it.",63,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"iter","","Gets an iterator over the entries of the map.",48,{"inputs":[{"name":"btreemap"}],"output":{"name":"iter"}}],[11,"iter_mut","","Gets a mutable iterator over the entries of the map.",48,{"inputs":[{"name":"btreemap"}],"output":{"name":"itermut"}}],[11,"keys","","Gets an iterator over the keys of the map.",48,{"inputs":[{"name":"btreemap"}],"output":{"name":"keys"}}],[11,"values","","Gets an iterator over the values of the map.",48,{"inputs":[{"name":"btreemap"}],"output":{"name":"values"}}],[11,"len","","Returns the number of elements in the map.",48,{"inputs":[{"name":"btreemap"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",48,{"inputs":[{"name":"btreemap"}],"output":{"name":"bool"}}],[11,"range","","Constructs a double-ended iterator over a sub-range of elements in the map, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as \"negative\ninfinity\", and if max is `Unbounded`, then it will be treated as \"positive infinity\".\nThus range(Unbounded, Unbounded) will yield the whole collection.",48,{"inputs":[{"name":"btreemap"},{"name":"bound"},{"name":"bound"}],"output":{"name":"range"}}],[11,"range_mut","","Constructs a mutable double-ended iterator over a sub-range of elements in the map, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as \"negative\ninfinity\", and if max is `Unbounded`, then it will be treated as \"positive infinity\".\nThus range(Unbounded, Unbounded) will yield the whole collection.",48,{"inputs":[{"name":"btreemap"},{"name":"bound"},{"name":"bound"}],"output":{"name":"rangemut"}}],[11,"entry","","Gets the given key's corresponding entry in the map for in-place manipulation.",48,{"inputs":[{"name":"btreemap"},{"name":"k"}],"output":{"name":"entry"}}],[11,"partial_cmp","collections::btree::set","",64,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"option"}}],[11,"lt","","",64,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"le","","",64,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"gt","","",64,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"ge","","",64,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"cmp","","",64,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"ordering"}}],[11,"eq","","",64,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"ne","","",64,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"hash","","",64,null],[11,"clone","","",64,{"inputs":[{"name":"btreeset"}],"output":{"name":"btreeset"}}],[11,"new","","Makes a new BTreeSet with a reasonable choice of B.",64,{"inputs":[{"name":"btreeset"}],"output":{"name":"btreeset"}}],[11,"with_b","","Makes a new BTreeSet with the given B.",64,{"inputs":[{"name":"btreeset"},{"name":"usize"}],"output":{"name":"btreeset"}}],[11,"iter","","Gets an iterator over the BTreeSet's contents.",64,{"inputs":[{"name":"btreeset"}],"output":{"name":"iter"}}],[11,"range","","Constructs a double-ended iterator over a sub-range of elements in the set, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as \"negative\ninfinity\", and if max is `Unbounded`, then it will be treated as \"positive infinity\".\nThus range(Unbounded, Unbounded) will yield the whole collection.",64,{"inputs":[{"name":"btreeset"},{"name":"bound"},{"name":"bound"}],"output":{"name":"range"}}],[11,"difference","","Visits the values representing the difference, in ascending order.",64,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"difference"}}],[11,"symmetric_difference","","Visits the values representing the symmetric difference, in ascending order.",64,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"symmetricdifference"}}],[11,"intersection","","Visits the values representing the intersection, in ascending order.",64,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"intersection"}}],[11,"union","","Visits the values representing the union, in ascending order.",64,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"union"}}],[11,"len","","Returns the number of elements in the set.",64,{"inputs":[{"name":"btreeset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the set contains no elements.",64,{"inputs":[{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"clear","","Clears the set, removing all values.",64,null],[11,"contains","","Returns `true` if the set contains a value.",64,{"inputs":[{"name":"btreeset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",64,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if the set is a subset of another.",64,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if the set is a superset of another.",64,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"insert","","Adds a value to the set. Returns `true` if the value was not already\npresent in the set.",64,{"inputs":[{"name":"btreeset"},{"name":"t"}],"output":{"name":"bool"}}],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",64,{"inputs":[{"name":"btreeset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"from_iter","","",64,{"inputs":[{"name":"btreeset"},{"name":"i"}],"output":{"name":"btreeset"}}],[6,"Item","iron::headers","",null,null],[6,"IntoIter","","",null,null],[11,"into_iter","collections::btree::set","Gets an iterator for moving out the BtreeSet's contents.",64,{"inputs":[{"name":"btreeset"}],"output":{"name":"intoiter"}}],[6,"Item","iron::headers","",null,null],[6,"IntoIter","","",null,null],[11,"extend","collections::btree::set","",64,null],[11,"default","","",64,{"inputs":[{"name":"btreeset"}],"output":{"name":"btreeset"}}],[6,"Output","iron::headers","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"fmt","collections::btree::set","",64,{"inputs":[{"name":"btreeset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",65,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[6,"Item","iron::headers","",null,null],[11,"next","collections::btree::set","",65,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",65,null],[11,"next_back","","",65,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[6,"Item","iron::headers","",null,null],[11,"next","collections::btree::set","",66,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",66,null],[11,"next_back","","",66,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"clone","","",67,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[6,"Item","iron::headers","",null,null],[11,"next","collections::btree::set","",67,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next_back","","",67,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"clone","","",68,{"inputs":[{"name":"difference"}],"output":{"name":"difference"}}],[6,"Item","iron::headers","",null,null],[11,"next","collections::btree::set","",68,{"inputs":[{"name":"difference"}],"output":{"name":"option"}}],[11,"clone","","",69,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"symmetricdifference"}}],[6,"Item","iron::headers","",null,null],[11,"next","collections::btree::set","",69,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"option"}}],[11,"clone","","",70,{"inputs":[{"name":"intersection"}],"output":{"name":"intersection"}}],[6,"Item","iron::headers","",null,null],[11,"next","collections::btree::set","",70,{"inputs":[{"name":"intersection"}],"output":{"name":"option"}}],[11,"clone","","",71,{"inputs":[{"name":"union"}],"output":{"name":"union"}}],[6,"Item","iron::headers","",null,null],[11,"next","collections::btree::set","",71,{"inputs":[{"name":"union"}],"output":{"name":"option"}}],[11,"borrow","alloc::rc","",72,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"borrow","alloc::arc","",73,{"inputs":[{"name":"arc"}],"output":{"name":"t"}}],[11,"borrow","collections::borrow","",74,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[6,"Owned","iron::headers","",null,null],[11,"clone","collections::borrow","",74,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",74,null],[11,"into_owned","","Extracts the owned data.",74,null],[6,"Target","iron::headers","",null,null],[11,"deref","collections::borrow","",74,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"cmp","","",74,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"ordering"}}],[11,"eq","","",74,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",74,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"option"}}],[11,"fmt","","",74,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",74,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",74,null],[11,"into_cow","","",74,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"as_ref","","",74,{"inputs":[{"name":"cow"}],"output":{"name":"t"}}],[11,"hash","collections::enum_set","",75,null],[11,"cmp","","",75,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",75,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"option"}}],[11,"lt","","",75,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"le","","",75,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"gt","","",75,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"ge","","",75,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"eq","","",75,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"ne","","",75,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"clone","","",75,{"inputs":[{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"fmt","","",75,{"inputs":[{"name":"enumset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Returns an empty `EnumSet`.",75,{"inputs":[{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"len","","Returns the number of elements in the given `EnumSet`.",75,{"inputs":[{"name":"enumset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the `EnumSet` is empty.",75,{"inputs":[{"name":"enumset"}],"output":{"name":"bool"}}],[11,"clear","","",75,null],[11,"is_disjoint","","Returns `false` if the `EnumSet` contains any enum of the given `EnumSet`.",75,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if a given `EnumSet` is included in this `EnumSet`.",75,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if this `EnumSet` is included in the given `EnumSet`.",75,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"union","","Returns the union of both `EnumSets`.",75,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"intersection","","Returns the intersection of both `EnumSets`.",75,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"insert","","Adds an enum to the `EnumSet`, and returns `true` if it wasn't there before",75,{"inputs":[{"name":"enumset"},{"name":"e"}],"output":{"name":"bool"}}],[11,"remove","","Removes an enum from the EnumSet",75,{"inputs":[{"name":"enumset"},{"name":"e"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` if an `EnumSet` contains a given enum.",75,{"inputs":[{"name":"enumset"},{"name":"e"}],"output":{"name":"bool"}}],[11,"iter","","Returns an iterator over an `EnumSet`.",75,{"inputs":[{"name":"enumset"}],"output":{"name":"iter"}}],[6,"Output","iron::headers","",null,null],[11,"sub","collections::enum_set","",75,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[6,"Output","iron::headers","",null,null],[11,"bitor","collections::enum_set","",75,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[6,"Output","iron::headers","",null,null],[11,"bitand","collections::enum_set","",75,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[6,"Output","iron::headers","",null,null],[11,"bitxor","collections::enum_set","",75,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"clone","","",76,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[6,"Item","iron::headers","",null,null],[11,"next","collections::enum_set","",76,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",76,null],[11,"from_iter","","",75,{"inputs":[{"name":"enumset"},{"name":"i"}],"output":{"name":"enumset"}}],[6,"Item","iron::headers","",null,null],[6,"IntoIter","","",null,null],[11,"extend","collections::enum_set","",75,null],[11,"clone","core::fmt::rt::v1","",77,{"inputs":[{"name":"argument"}],"output":{"name":"argument"}}],[11,"clone","","",78,{"inputs":[{"name":"formatspec"}],"output":{"name":"formatspec"}}],[11,"eq","","",79,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"ne","","",79,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"clone","","",79,{"inputs":[{"name":"alignment"}],"output":{"name":"alignment"}}],[11,"clone","","",80,{"inputs":[{"name":"count"}],"output":{"name":"count"}}],[11,"clone","","",81,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"clone","collections::linked_list","",82,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",83,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"clone","","",84,{"inputs":[{"name":"rawlink"}],"output":{"name":"rawlink"}}],[11,"default","","",85,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",85,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",85,null],[11,"iter","","Provides a forward iterator.",85,{"inputs":[{"name":"linkedlist"}],"output":{"name":"iter"}}],[11,"iter_mut","","Provides a forward iterator with mutable references.",85,{"inputs":[{"name":"linkedlist"}],"output":{"name":"itermut"}}],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",85,{"inputs":[{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"len","","Returns the length of the `LinkedList`.",85,{"inputs":[{"name":"linkedlist"}],"output":{"name":"usize"}}],[11,"clear","","Removes all elements from the `LinkedList`.",85,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",85,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",85,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",85,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",85,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_front","","Adds an element first in the list.",85,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",85,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_back","","Appends an element to the back of a list",85,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",85,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",85,{"inputs":[{"name":"linkedlist"},{"name":"usize"}],"output":{"name":"linkedlist"}}],[11,"drop","","",85,null],[6,"Item","iron::headers","",null,null],[11,"next","collections::linked_list","",82,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",82,null],[11,"next_back","","",82,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[6,"Item","iron::headers","",null,null],[11,"next","collections::linked_list","",86,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",86,null],[11,"next_back","","",86,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",86,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",86,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[6,"Item","iron::headers","",null,null],[11,"next","collections::linked_list","",83,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",83,null],[11,"next_back","","",83,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","",85,{"inputs":[{"name":"linkedlist"},{"name":"t"}],"output":{"name":"linkedlist"}}],[6,"Item","iron::headers","",null,null],[6,"IntoIter","","",null,null],[11,"into_iter","collections::linked_list","Consumes the list into an iterator yielding elements by value.",85,{"inputs":[{"name":"linkedlist"}],"output":{"name":"intoiter"}}],[6,"Item","iron::headers","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[11,"extend","collections::linked_list","",85,null],[11,"eq","","",85,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"ne","","",85,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",85,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"cmp","","",85,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"ordering"}}],[11,"clone","","",85,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"fmt","","",85,{"inputs":[{"name":"linkedlist"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",85,null],[11,"start","core::ops","",87,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"end","","",88,{"inputs":[{"name":"rangeto"}],"output":{"name":"option"}}],[11,"start","","",89,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"end","","",89,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[6,"Output","iron::headers","",null,null],[11,"clone","collections::slice","",90,{"inputs":[{"name":"elementswaps"}],"output":{"name":"elementswaps"}}],[11,"new","","Creates an `ElementSwaps` iterator for a sequence of `length` elements.",90,{"inputs":[{"name":"elementswaps"},{"name":"usize"}],"output":{"name":"elementswaps"}}],[11,"borrow","collections::vec","",26,null],[11,"borrow_mut","","",26,null],[6,"Owned","iron::headers","",null,null],[11,"clone","collections::slice","",91,{"inputs":[{"name":"direction"}],"output":{"name":"direction"}}],[11,"clone","","",92,{"inputs":[{"name":"sizedirection"}],"output":{"name":"sizedirection"}}],[6,"Item","iron::headers","",null,null],[11,"next","collections::slice","",90,{"inputs":[{"name":"elementswaps"}],"output":{"name":"option"}}],[11,"size_hint","","",90,null],[6,"Item","iron::headers","",null,null],[11,"next","collections::slice","",93,{"inputs":[{"name":"permutations"}],"output":{"name":"option"}}],[11,"size_hint","","",93,null],[6,"Output","iron::headers","",null,null],[11,"clone","collections::str","",94,{"inputs":[{"name":"decompositiontype"}],"output":{"name":"decompositiontype"}}],[11,"clone","","",95,{"inputs":[{"name":"decompositions"}],"output":{"name":"decompositions"}}],[6,"Item","iron::headers","",null,null],[11,"next","collections::str","",95,{"inputs":[{"name":"decompositions"}],"output":{"name":"option"}}],[11,"size_hint","","",95,null],[11,"clone","","",96,{"inputs":[{"name":"recompositionstate"}],"output":{"name":"recompositionstate"}}],[11,"clone","","",97,{"inputs":[{"name":"recompositions"}],"output":{"name":"recompositions"}}],[6,"Item","iron::headers","",null,null],[11,"next","collections::str","",97,{"inputs":[{"name":"recompositions"}],"output":{"name":"option"}}],[11,"clone","","",98,{"inputs":[{"name":"utf16units"}],"output":{"name":"utf16units"}}],[6,"Item","iron::headers","",null,null],[11,"next","collections::str","",98,{"inputs":[{"name":"utf16units"}],"output":{"name":"option"}}],[11,"size_hint","","",98,null],[11,"borrow","collections::string","",99,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[6,"Owned","iron::headers","",null,null],[11,"fmt","core::str::pattern","",100,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",100,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",100,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",100,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",101,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[6,"Searcher","iron::headers","",null,null],[11,"into_searcher","core::str::pattern","",102,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",101,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",101,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",101,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",103,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"eq","","",104,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ne","","",104,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"clone","","",104,{"inputs":[{"name":"state"}],"output":{"name":"state"}}],[6,"Searcher","iron::headers","",null,null],[11,"haystack","core::str::pattern","",103,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",103,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",103,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",105,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",105,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",105,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",105,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",105,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",105,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",105,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",105,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[6,"Searcher","iron::headers","",null,null],[11,"clone","core::str::pattern","",106,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",106,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",106,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",106,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",106,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",106,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",106,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",106,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[6,"Searcher","iron::headers","",null,null],[11,"clone","core::str::pattern","",107,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",107,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",107,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",107,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",107,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",107,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",107,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",107,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[6,"Searcher","iron::headers","",null,null],[6,"Searcher","","",null,null],[11,"cmp","collections::string","",99,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",99,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"option"}}],[11,"lt","","",99,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"le","","",99,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"gt","","",99,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ge","","",99,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"clone","","",99,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"fmt","","",108,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",109,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new string buffer initialized with the empty string.",99,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new string buffer with the given capacity.\nThe string will be able to hold exactly `capacity` bytes without\nreallocating. If `capacity` is 0, the string will not allocate.",99,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"string"}}],[11,"from_str","","Creates a new string buffer from the given string.",99,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"from_utf8","","Returns the vector as a string buffer, if possible, taking care not to\ncopy it.",99,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a vector of bytes to a new UTF-8 string.\nAny invalid UTF-8 sequences are replaced with U+FFFD REPLACEMENT CHARACTER.",99,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `None`\nif `v` contains any invalid data.",99,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",99,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",99,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a new `String` without checking if\nit contains valid UTF-8. This is unsafe because it assumes that\nthe UTF-8-ness of the vector has already been validated.",99,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Returns the underlying byte buffer, encoded as UTF-8.",99,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"as_str","","Extracts a string slice containing the entire string.",99,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"push_str","","Pushes the given string onto this string buffer.",99,null],[11,"capacity","","Returns the number of bytes that this string buffer can hold without\nreallocating.",99,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `String`. The collection may reserve more space to avoid\nfrequent reallocations.",99,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more bytes to be\ninserted in the given `String`. Does nothing if the capacity is already\nsufficient.",99,null],[11,"shrink_to_fit","","Shrinks the capacity of this string buffer to match its length.",99,null],[11,"push","","Adds the given character to the end of the string.",99,null],[11,"as_bytes","","Works with the underlying buffer as a byte slice.",99,null],[11,"truncate","","Shortens a string to the specified length.",99,null],[11,"pop","","Removes the last character from the string buffer and returns it.\nReturns `None` if this string buffer is empty.",99,{"inputs":[{"name":"string"}],"output":{"name":"option"}}],[11,"remove","","Removes the character from the string buffer at byte position `idx` and\nreturns it.",99,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"char"}}],[11,"insert","","Inserts a character into the string buffer at byte position `idx`.",99,null],[11,"as_mut_vec","","Views the string buffer as a mutable sequence of bytes.",99,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"len","","Returns the number of bytes in this string.",99,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the string contains no bytes",99,{"inputs":[{"name":"string"}],"output":{"name":"bool"}}],[11,"clear","","Truncates the string, returning it to 0 length.",99,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars from start to end. The element range is\nremoved even if the iterator is not consumed until the end.",99,{"inputs":[{"name":"string"},{"name":"r"}],"output":{"name":"drain"}}],[11,"into_bytes","","Consumes this error, returning the bytes that were attempted to make a\n`String` with.",108,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"vec"}}],[11,"utf8_error","","Access the underlying UTF8-error that was the cause of this error.",108,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"utf8error"}}],[11,"fmt","","",108,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",109,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",99,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",99,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",99,null],[11,"extend","","",99,null],[6,"Searcher","iron::headers","",null,null],[11,"eq","collections::string","",99,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",99,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","","",99,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",99,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",99,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",99,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",74,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",74,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",74,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",74,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","collections::string","",99,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"ne","","",99,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",74,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",74,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"default","collections::string","",99,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"fmt","","",99,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",99,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",99,null],[6,"Output","iron::headers","",null,null],[11,"add","collections::string","",99,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[6,"Output","iron::headers","",null,null],[11,"index","collections::string","",99,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[6,"Output","iron::headers","",null,null],[11,"index","collections::string","",99,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[6,"Output","iron::headers","",null,null],[11,"index","collections::string","",99,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[6,"Output","iron::headers","",null,null],[11,"index","collections::string","",99,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[6,"Target","iron::headers","",null,null],[11,"deref","collections::string","",99,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[6,"Target","iron::headers","",null,null],[11,"deref","collections::string","",110,{"inputs":[{"name":"derefstring"}],"output":{"name":"string"}}],[11,"eq","","",111,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"ne","","",111,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"fmt","","",111,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",111,{"inputs":[{"name":"parseerror"}],"output":{"name":"parseerror"}}],[6,"Err","iron::headers","",null,null],[11,"from_str","collections::string","",99,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"as_ref","","",99,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"as_ref","","",99,null],[11,"from","","",99,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",74,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",74,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",99,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"into_cow","","",99,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"write_str","","",99,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",99,{"inputs":[{"name":"string"},{"name":"char"}],"output":{"name":"result"}}],[11,"drop","","",112,null],[6,"Item","iron::headers","",null,null],[11,"next","collections::string","",112,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",112,null],[11,"next_back","","",112,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"clone","collections::vec","",26,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"clone_from","","",26,null],[11,"hash","","",26,null],[6,"Output","iron::headers","",null,null],[11,"index","collections::vec","",26,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",26,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[6,"Output","iron::headers","",null,null],[11,"index","collections::vec","",26,null],[6,"Output","iron::headers","",null,null],[11,"index","collections::vec","",26,null],[6,"Output","iron::headers","",null,null],[11,"index","collections::vec","",26,null],[6,"Output","iron::headers","",null,null],[11,"index","collections::vec","",26,null],[11,"index_mut","","",26,null],[11,"index_mut","","",26,null],[11,"index_mut","","",26,null],[11,"index_mut","","",26,null],[6,"Target","iron::headers","",null,null],[11,"deref","collections::vec","",26,null],[11,"deref_mut","","",26,null],[11,"from_iter","","",26,{"inputs":[{"name":"vec"},{"name":"i"}],"output":{"name":"vec"}}],[6,"Item","iron::headers","",null,null],[6,"IntoIter","","",null,null],[11,"into_iter","collections::vec","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",26,{"inputs":[{"name":"vec"}],"output":{"name":"intoiter"}}],[6,"Item","iron::headers","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[11,"extend","collections::vec","",26,null],[11,"eq","","",26,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","collections::borrow","",74,null],[11,"ne","","",74,null],[11,"eq","","",74,null],[11,"ne","","",74,null],[11,"eq","","",74,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",74,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","collections::vec","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"partial_cmp","","",26,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"option"}}],[11,"cmp","","",26,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"ordering"}}],[11,"drop","","",26,null],[11,"default","","",26,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"fmt","","",26,{"inputs":[{"name":"vec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",26,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"as_ref","","",26,null],[11,"from","","",26,null],[11,"from","","",26,{"inputs":[{"name":"vec"},{"name":"str"}],"output":{"name":"vec"}}],[11,"from_iter","collections::borrow","",74,{"inputs":[{"name":"cow"},{"name":"i"}],"output":{"name":"cow"}}],[11,"into_cow","collections::vec","",26,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"into_inner","","Drops all items that have not yet been moved and returns the empty vector.",113,{"inputs":[{"name":"intoiter"}],"output":{"name":"vec"}}],[6,"Item","iron::headers","",null,null],[11,"next","collections::vec","",113,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",113,null],[11,"count","","",113,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next_back","","",113,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",113,null],[6,"Item","iron::headers","",null,null],[11,"next","collections::vec","",114,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",114,null],[11,"next_back","","",114,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"drop","","",114,null],[6,"Target","iron::headers","",null,null],[11,"deref","collections::vec","",115,{"inputs":[{"name":"derefvec"}],"output":{"name":"vec"}}],[11,"drop","","",115,null],[11,"drop","","",116,null],[11,"drop","","",117,null],[11,"clone","collections::vec_deque","",118,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"drop","","",118,null],[11,"default","","",118,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",118,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",118,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",118,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",118,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap","","Swaps elements at indices `i` and `j`.",118,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",118,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",118,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`Ringbuf`. The collection may reserve more space to avoid frequent reallocations.",118,null],[11,"shrink_to_fit","","Shrinks the capacity of the ringbuf as much as possible.",118,null],[11,"truncate","","Shortens a ringbuf, dropping excess elements from the back.",118,null],[11,"iter","","Returns a front-to-back iterator.",118,{"inputs":[{"name":"vecdeque"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",118,{"inputs":[{"name":"vecdeque"}],"output":{"name":"itermut"}}],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",118,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",118,null],[11,"len","","Returns the number of elements in the `VecDeque`.",118,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the buffer contains no elements",118,{"inputs":[{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"drain","","Creates a draining iterator that clears the `VecDeque` and iterates over\nthe removed items from start to end.",118,{"inputs":[{"name":"vecdeque"}],"output":{"name":"drain"}}],[11,"clear","","Clears the buffer, removing all values.",118,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",118,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",118,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",118,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",118,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",118,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"push_front","","Inserts an element first in the sequence.",118,null],[11,"push_back","","Appends an element to the back of a buffer",118,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",118,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"swap_back_remove","","Removes an element from anywhere in the ringbuf and returns it, replacing it with the last\nelement.",118,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap_front_remove","","Removes an element from anywhere in the ringbuf and returns it, replacing it with the first\nelement.",118,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"insert","","Inserts an element at position `i` within the ringbuf. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",118,null],[11,"remove","","Removes and returns the element at position `i` from the ringbuf.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `i` is out of bounds.",118,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"split_off","","Splits the collection into two at the given index.",118,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",118,null],[11,"retain","","Retains only the elements specified by the predicate.",118,null],[11,"resize","","Modifies the ringbuf in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",118,null],[11,"clone","","",119,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[6,"Item","iron::headers","",null,null],[11,"next","collections::vec_deque","",119,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",119,null],[11,"next_back","","",119,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"indexable","","",119,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"idx","","",119,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[6,"Item","iron::headers","",null,null],[11,"next","collections::vec_deque","",120,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",120,null],[11,"next_back","","",120,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",121,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[6,"Item","iron::headers","",null,null],[11,"next","collections::vec_deque","",121,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",121,null],[11,"next_back","","",121,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",122,null],[6,"Item","iron::headers","",null,null],[11,"next","collections::vec_deque","",122,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",122,null],[11,"next_back","","",122,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"eq","","",118,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",118,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"cmp","","",118,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"ordering"}}],[11,"hash","","",118,null],[6,"Output","iron::headers","",null,null],[11,"index","collections::vec_deque","",118,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"index_mut","","",118,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"from_iter","","",118,{"inputs":[{"name":"vecdeque"},{"name":"t"}],"output":{"name":"vecdeque"}}],[6,"Item","iron::headers","",null,null],[6,"IntoIter","","",null,null],[11,"into_iter","collections::vec_deque","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",118,{"inputs":[{"name":"vecdeque"}],"output":{"name":"intoiter"}}],[6,"Item","iron::headers","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[11,"extend","collections::vec_deque","",118,null],[11,"fmt","","",118,{"inputs":[{"name":"vecdeque"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","collections::vec_map","",123,{"inputs":[{"name":"vecmap"}],"output":{"name":"vecmap"}}],[11,"clone","","",123,{"inputs":[{"name":"vecmap"}],"output":{"name":"vecmap"}}],[11,"clone_from","","",123,null],[11,"hash","","",123,null],[11,"new","","Creates an empty `VecMap`.",123,{"inputs":[{"name":"vecmap"}],"output":{"name":"vecmap"}}],[11,"with_capacity","","Creates an empty `VecMap` with space for at least `capacity`\nelements before resizing.",123,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"vecmap"}}],[11,"capacity","","Returns the number of elements the `VecMap` can hold without\nreallocating.",123,{"inputs":[{"name":"vecmap"}],"output":{"name":"usize"}}],[11,"reserve_len","","Reserves capacity for the given `VecMap` to contain `len` distinct keys.\nIn the case of `VecMap` this means reallocations will not occur as long\nas all inserted keys are less than `len`.",123,null],[11,"reserve_len_exact","","Reserves the minimum capacity for the given `VecMap` to contain `len` distinct keys.\nIn the case of `VecMap` this means reallocations will not occur as long as all inserted\nkeys are less than `len`.",123,null],[11,"keys","","Returns an iterator visiting all keys in ascending order of the keys.\nThe iterator's element type is `usize`.",123,{"inputs":[{"name":"vecmap"}],"output":{"name":"keys"}}],[11,"values","","Returns an iterator visiting all values in ascending order of the keys.\nThe iterator's element type is `&'r V`.",123,{"inputs":[{"name":"vecmap"}],"output":{"name":"values"}}],[11,"iter","","Returns an iterator visiting all key-value pairs in ascending order of the keys.\nThe iterator's element type is `(usize, &'r V)`.",123,{"inputs":[{"name":"vecmap"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns an iterator visiting all key-value pairs in ascending order of the keys,\nwith mutable references to the values.\nThe iterator's element type is `(usize, &'r mut V)`.",123,{"inputs":[{"name":"vecmap"}],"output":{"name":"itermut"}}],[11,"append","","Moves all elements from `other` into the map while overwriting existing keys.",123,null],[11,"split_off","","Splits the collection into two at the given key.",123,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"vecmap"}}],[11,"drain","","Returns an iterator visiting all key-value pairs in ascending order of\nthe keys, emptying (but not consuming) the original `VecMap`.\nThe iterator's element type is `(usize, &'r V)`. Keeps the allocated memory for reuse.",123,{"inputs":[{"name":"vecmap"}],"output":{"name":"drain"}}],[11,"len","","Returns the number of elements in the map.",123,{"inputs":[{"name":"vecmap"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",123,{"inputs":[{"name":"vecmap"}],"output":{"name":"bool"}}],[11,"clear","","Clears the map, removing all key-value pairs.",123,null],[11,"get","","Returns a reference to the value corresponding to the key.",123,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"option"}}],[11,"contains_key","","Returns true if the map contains a value for the specified key.",123,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",123,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"option"}}],[11,"insert","","Inserts a key-value pair into the map. If the key already had a value\npresent in the map, that value is returned. Otherwise, `None` is returned.",123,{"inputs":[{"name":"vecmap"},{"name":"usize"},{"name":"v"}],"output":{"name":"option"}}],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",123,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"option"}}],[11,"entry","","Gets the given key's corresponding entry in the map for in-place manipulation.",123,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"entry"}}],[11,"get","","Returns a mutable reference to the entry if occupied, or the VacantEntry if vacant",124,{"inputs":[{"name":"entry"}],"output":{"name":"result"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",124,{"inputs":[{"name":"entry"},{"name":"v"}],"output":{"name":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",124,{"inputs":[{"name":"entry"},{"name":"f"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the VacantEntry's key,\nand returns a mutable reference to it.",125,{"inputs":[{"name":"vacantentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"get","","Gets a reference to the value in the entry.",126,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",126,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"into_mut","","Converts the entry into a mutable reference to its value.",126,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the OccupiedEntry's key,\nand returns the entry's old value.",126,{"inputs":[{"name":"occupiedentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"remove","","Takes the value of the entry out of the map, and returns it.",126,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"eq","","",123,{"inputs":[{"name":"vecmap"},{"name":"vecmap"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",123,{"inputs":[{"name":"vecmap"},{"name":"vecmap"}],"output":{"name":"option"}}],[11,"cmp","","",123,{"inputs":[{"name":"vecmap"},{"name":"vecmap"}],"output":{"name":"ordering"}}],[11,"fmt","","",123,{"inputs":[{"name":"vecmap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",123,{"inputs":[{"name":"vecmap"},{"name":"i"}],"output":{"name":"vecmap"}}],[6,"Item","iron::headers","",null,null],[6,"IntoIter","","",null,null],[11,"into_iter","collections::vec_map","Returns an iterator visiting all key-value pairs in ascending order of\nthe keys, consuming the original `VecMap`.\nThe iterator's element type is `(usize, &'r V)`.",123,{"inputs":[{"name":"vecmap"}],"output":{"name":"intoiter"}}],[6,"Item","iron::headers","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[11,"extend","collections::vec_map","",123,null],[6,"Output","iron::headers","",null,null],[11,"index","collections::vec_map","",123,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"v"}}],[6,"Output","iron::headers","",null,null],[11,"index","collections::vec_map","",123,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"v"}}],[11,"index_mut","","",123,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"v"}}],[11,"index_mut","","",123,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"v"}}],[11,"clone","","",127,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[6,"Item","iron::headers","",null,null],[11,"next","collections::vec_map","",127,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",127,null],[11,"next_back","","",127,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[6,"Item","iron::headers","",null,null],[11,"next","collections::vec_map","",128,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",128,null],[11,"next_back","","",128,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",129,{"inputs":[{"name":"keys"}],"output":{"name":"keys"}}],[11,"clone","","",130,{"inputs":[{"name":"values"}],"output":{"name":"values"}}],[6,"Item","iron::headers","",null,null],[11,"next","collections::vec_map","",131,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",131,null],[11,"next_back","","",131,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[6,"Item","iron::headers","",null,null],[11,"next","collections::vec_map","",129,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"size_hint","","",129,null],[11,"next_back","","",129,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[6,"Item","iron::headers","",null,null],[11,"next","collections::vec_map","",130,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"size_hint","","",130,null],[11,"next_back","","",130,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[6,"Item","iron::headers","",null,null],[11,"next","collections::vec_map","",132,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",132,null],[11,"next_back","","",132,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"eq","collections","",133,{"inputs":[{"name":"bound"},{"name":"bound"}],"output":{"name":"bool"}}],[11,"ne","","",133,{"inputs":[{"name":"bound"},{"name":"bound"}],"output":{"name":"bool"}}],[11,"hash","","",133,null],[11,"fmt","","",133,{"inputs":[{"name":"bound"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",133,{"inputs":[{"name":"bound"}],"output":{"name":"bound"}}],[11,"new","alloc::boxed","Allocates memory on the heap and then moves `x` into it.",4,{"inputs":[{"name":"box"},{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from the raw pointer.",4,null],[11,"default","","",4,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"default","","",4,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box's contents.",4,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone_from","","Copies `source`'s contents into `self` without creating a new allocation.",4,null],[11,"eq","","",4,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"cmp","","",4,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"ordering"}}],[11,"hash","","",4,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",4,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",4,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Target","iron::headers","",null,null],[11,"deref","alloc::boxed","",4,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"deref_mut","","",4,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[6,"Item","iron::headers","",null,null],[11,"next","alloc::boxed","",4,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"size_hint","","",4,null],[11,"next_back","","",4,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[6,"Output","iron::headers","",null,null],[6,"Output","","",null,null],[11,"call_once","alloc::boxed","",4,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[6,"Output","iron::headers","",null,null],[11,"call_once","alloc::boxed","",4,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[6,"Target","iron::headers","",null,null],[11,"deref","hyper::header::common::accept","",25,{"inputs":[{"name":"accept"}],"output":{"name":"vec"}}],[11,"deref_mut","","",25,{"inputs":[{"name":"accept"}],"output":{"name":"vec"}}],[11,"header_name","","",25,{"inputs":[{"name":"accept"}],"output":{"name":"str"}}],[11,"parse_header","","",25,null],[11,"fmt_header","","",25,{"inputs":[{"name":"accept"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",25,{"inputs":[{"name":"accept"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::access_control_allow_headers","",134,{"inputs":[{"name":"accesscontrolallowheaders"},{"name":"accesscontrolallowheaders"}],"output":{"name":"bool"}}],[11,"ne","","",134,{"inputs":[{"name":"accesscontrolallowheaders"},{"name":"accesscontrolallowheaders"}],"output":{"name":"bool"}}],[11,"fmt","","",134,{"inputs":[{"name":"accesscontrolallowheaders"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",134,{"inputs":[{"name":"accesscontrolallowheaders"}],"output":{"name":"accesscontrolallowheaders"}}],[6,"Target","iron::headers","",null,null],[11,"deref","hyper::header::common::access_control_allow_headers","",134,{"inputs":[{"name":"accesscontrolallowheaders"}],"output":{"name":"vec"}}],[11,"deref_mut","","",134,{"inputs":[{"name":"accesscontrolallowheaders"}],"output":{"name":"vec"}}],[11,"header_name","","",134,{"inputs":[{"name":"accesscontrolallowheaders"}],"output":{"name":"str"}}],[11,"parse_header","","",134,null],[11,"fmt_header","","",134,{"inputs":[{"name":"accesscontrolallowheaders"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",134,{"inputs":[{"name":"accesscontrolallowheaders"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::access_control_allow_methods","",135,{"inputs":[{"name":"accesscontrolallowmethods"},{"name":"accesscontrolallowmethods"}],"output":{"name":"bool"}}],[11,"ne","","",135,{"inputs":[{"name":"accesscontrolallowmethods"},{"name":"accesscontrolallowmethods"}],"output":{"name":"bool"}}],[11,"fmt","","",135,{"inputs":[{"name":"accesscontrolallowmethods"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",135,{"inputs":[{"name":"accesscontrolallowmethods"}],"output":{"name":"accesscontrolallowmethods"}}],[6,"Target","iron::headers","",null,null],[11,"deref","hyper::header::common::access_control_allow_methods","",135,{"inputs":[{"name":"accesscontrolallowmethods"}],"output":{"name":"vec"}}],[11,"deref_mut","","",135,{"inputs":[{"name":"accesscontrolallowmethods"}],"output":{"name":"vec"}}],[11,"header_name","","",135,{"inputs":[{"name":"accesscontrolallowmethods"}],"output":{"name":"str"}}],[11,"parse_header","","",135,null],[11,"fmt_header","","",135,{"inputs":[{"name":"accesscontrolallowmethods"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",135,{"inputs":[{"name":"accesscontrolallowmethods"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","hyper::header::common::access_control_allow_origin","",136,{"inputs":[{"name":"accesscontrolalloworigin"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",136,{"inputs":[{"name":"accesscontrolalloworigin"},{"name":"accesscontrolalloworigin"}],"output":{"name":"bool"}}],[11,"ne","","",136,{"inputs":[{"name":"accesscontrolalloworigin"},{"name":"accesscontrolalloworigin"}],"output":{"name":"bool"}}],[11,"clone","","",136,{"inputs":[{"name":"accesscontrolalloworigin"}],"output":{"name":"accesscontrolalloworigin"}}],[11,"header_name","","",136,{"inputs":[{"name":"accesscontrolalloworigin"}],"output":{"name":"str"}}],[11,"parse_header","","",136,null],[11,"fmt_header","","",136,{"inputs":[{"name":"accesscontrolalloworigin"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",136,{"inputs":[{"name":"accesscontrolalloworigin"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::access_control_max_age","",137,{"inputs":[{"name":"accesscontrolmaxage"},{"name":"accesscontrolmaxage"}],"output":{"name":"bool"}}],[11,"ne","","",137,{"inputs":[{"name":"accesscontrolmaxage"},{"name":"accesscontrolmaxage"}],"output":{"name":"bool"}}],[11,"fmt","","",137,{"inputs":[{"name":"accesscontrolmaxage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",137,{"inputs":[{"name":"accesscontrolmaxage"}],"output":{"name":"accesscontrolmaxage"}}],[6,"Target","iron::headers","",null,null],[11,"deref","hyper::header::common::access_control_max_age","",137,{"inputs":[{"name":"accesscontrolmaxage"}],"output":{"name":"u32"}}],[11,"deref_mut","","",137,{"inputs":[{"name":"accesscontrolmaxage"}],"output":{"name":"u32"}}],[11,"header_name","","",137,{"inputs":[{"name":"accesscontrolmaxage"}],"output":{"name":"str"}}],[11,"parse_header","","",137,null],[11,"fmt_header","","",137,{"inputs":[{"name":"accesscontrolmaxage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",137,{"inputs":[{"name":"accesscontrolmaxage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::access_control_request_headers","",138,{"inputs":[{"name":"accesscontrolrequestheaders"},{"name":"accesscontrolrequestheaders"}],"output":{"name":"bool"}}],[11,"ne","","",138,{"inputs":[{"name":"accesscontrolrequestheaders"},{"name":"accesscontrolrequestheaders"}],"output":{"name":"bool"}}],[11,"fmt","","",138,{"inputs":[{"name":"accesscontrolrequestheaders"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",138,{"inputs":[{"name":"accesscontrolrequestheaders"}],"output":{"name":"accesscontrolrequestheaders"}}],[6,"Target","iron::headers","",null,null],[11,"deref","hyper::header::common::access_control_request_headers","",138,{"inputs":[{"name":"accesscontrolrequestheaders"}],"output":{"name":"vec"}}],[11,"deref_mut","","",138,{"inputs":[{"name":"accesscontrolrequestheaders"}],"output":{"name":"vec"}}],[11,"header_name","","",138,{"inputs":[{"name":"accesscontrolrequestheaders"}],"output":{"name":"str"}}],[11,"parse_header","","",138,null],[11,"fmt_header","","",138,{"inputs":[{"name":"accesscontrolrequestheaders"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",138,{"inputs":[{"name":"accesscontrolrequestheaders"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::access_control_request_method","",139,{"inputs":[{"name":"accesscontrolrequestmethod"},{"name":"accesscontrolrequestmethod"}],"output":{"name":"bool"}}],[11,"ne","","",139,{"inputs":[{"name":"accesscontrolrequestmethod"},{"name":"accesscontrolrequestmethod"}],"output":{"name":"bool"}}],[11,"fmt","","",139,{"inputs":[{"name":"accesscontrolrequestmethod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",139,{"inputs":[{"name":"accesscontrolrequestmethod"}],"output":{"name":"accesscontrolrequestmethod"}}],[6,"Target","iron::headers","",null,null],[11,"deref","hyper::header::common::access_control_request_method","",139,{"inputs":[{"name":"accesscontrolrequestmethod"}],"output":{"name":"method"}}],[11,"deref_mut","","",139,{"inputs":[{"name":"accesscontrolrequestmethod"}],"output":{"name":"method"}}],[11,"header_name","","",139,{"inputs":[{"name":"accesscontrolrequestmethod"}],"output":{"name":"str"}}],[11,"parse_header","","",139,null],[11,"fmt_header","","",139,{"inputs":[{"name":"accesscontrolrequestmethod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",139,{"inputs":[{"name":"accesscontrolrequestmethod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::accept_charset","",140,{"inputs":[{"name":"acceptcharset"},{"name":"acceptcharset"}],"output":{"name":"bool"}}],[11,"ne","","",140,{"inputs":[{"name":"acceptcharset"},{"name":"acceptcharset"}],"output":{"name":"bool"}}],[11,"fmt","","",140,{"inputs":[{"name":"acceptcharset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",140,{"inputs":[{"name":"acceptcharset"}],"output":{"name":"acceptcharset"}}],[6,"Target","iron::headers","",null,null],[11,"deref","hyper::header::common::accept_charset","",140,{"inputs":[{"name":"acceptcharset"}],"output":{"name":"vec"}}],[11,"deref_mut","","",140,{"inputs":[{"name":"acceptcharset"}],"output":{"name":"vec"}}],[11,"header_name","","",140,{"inputs":[{"name":"acceptcharset"}],"output":{"name":"str"}}],[11,"parse_header","","",140,null],[11,"fmt_header","","",140,{"inputs":[{"name":"acceptcharset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",140,{"inputs":[{"name":"acceptcharset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::accept_encoding","",141,{"inputs":[{"name":"acceptencoding"},{"name":"acceptencoding"}],"output":{"name":"bool"}}],[11,"ne","","",141,{"inputs":[{"name":"acceptencoding"},{"name":"acceptencoding"}],"output":{"name":"bool"}}],[11,"fmt","","",141,{"inputs":[{"name":"acceptencoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",141,{"inputs":[{"name":"acceptencoding"}],"output":{"name":"acceptencoding"}}],[6,"Target","iron::headers","",null,null],[11,"deref","hyper::header::common::accept_encoding","",141,{"inputs":[{"name":"acceptencoding"}],"output":{"name":"vec"}}],[11,"deref_mut","","",141,{"inputs":[{"name":"acceptencoding"}],"output":{"name":"vec"}}],[11,"header_name","","",141,{"inputs":[{"name":"acceptencoding"}],"output":{"name":"str"}}],[11,"parse_header","","",141,null],[11,"fmt_header","","",141,{"inputs":[{"name":"acceptencoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",141,{"inputs":[{"name":"acceptencoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::accept_language","",142,{"inputs":[{"name":"acceptlanguage"},{"name":"acceptlanguage"}],"output":{"name":"bool"}}],[11,"ne","","",142,{"inputs":[{"name":"acceptlanguage"},{"name":"acceptlanguage"}],"output":{"name":"bool"}}],[11,"fmt","","",142,{"inputs":[{"name":"acceptlanguage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",142,{"inputs":[{"name":"acceptlanguage"}],"output":{"name":"acceptlanguage"}}],[6,"Target","iron::headers","",null,null],[11,"deref","hyper::header::common::accept_language","",142,{"inputs":[{"name":"acceptlanguage"}],"output":{"name":"vec"}}],[11,"deref_mut","","",142,{"inputs":[{"name":"acceptlanguage"}],"output":{"name":"vec"}}],[11,"header_name","","",142,{"inputs":[{"name":"acceptlanguage"}],"output":{"name":"str"}}],[11,"parse_header","","",142,null],[11,"fmt_header","","",142,{"inputs":[{"name":"acceptlanguage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",142,{"inputs":[{"name":"acceptlanguage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::accept_ranges","",143,{"inputs":[{"name":"acceptranges"},{"name":"acceptranges"}],"output":{"name":"bool"}}],[11,"ne","","",143,{"inputs":[{"name":"acceptranges"},{"name":"acceptranges"}],"output":{"name":"bool"}}],[11,"fmt","","",143,{"inputs":[{"name":"acceptranges"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",143,{"inputs":[{"name":"acceptranges"}],"output":{"name":"acceptranges"}}],[6,"Target","iron::headers","",null,null],[11,"deref","hyper::header::common::accept_ranges","",143,{"inputs":[{"name":"acceptranges"}],"output":{"name":"vec"}}],[11,"deref_mut","","",143,{"inputs":[{"name":"acceptranges"}],"output":{"name":"vec"}}],[11,"header_name","","",143,{"inputs":[{"name":"acceptranges"}],"output":{"name":"str"}}],[11,"parse_header","","",143,null],[11,"fmt_header","","",143,{"inputs":[{"name":"acceptranges"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",143,{"inputs":[{"name":"acceptranges"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",144,{"inputs":[{"name":"rangeunit"},{"name":"rangeunit"}],"output":{"name":"bool"}}],[11,"ne","","",144,{"inputs":[{"name":"rangeunit"},{"name":"rangeunit"}],"output":{"name":"bool"}}],[11,"fmt","","",144,{"inputs":[{"name":"rangeunit"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",144,{"inputs":[{"name":"rangeunit"}],"output":{"name":"rangeunit"}}],[6,"Err","iron::headers","",null,null],[11,"from_str","hyper::header::common::accept_ranges","",144,{"inputs":[{"name":"rangeunit"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"rangeunit"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::allow","",145,{"inputs":[{"name":"allow"},{"name":"allow"}],"output":{"name":"bool"}}],[11,"ne","","",145,{"inputs":[{"name":"allow"},{"name":"allow"}],"output":{"name":"bool"}}],[11,"fmt","","",145,{"inputs":[{"name":"allow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",145,{"inputs":[{"name":"allow"}],"output":{"name":"allow"}}],[6,"Target","iron::headers","",null,null],[11,"deref","hyper::header::common::allow","",145,{"inputs":[{"name":"allow"}],"output":{"name":"vec"}}],[11,"deref_mut","","",145,{"inputs":[{"name":"allow"}],"output":{"name":"vec"}}],[11,"header_name","","",145,{"inputs":[{"name":"allow"}],"output":{"name":"str"}}],[11,"parse_header","","",145,null],[11,"fmt_header","","",145,{"inputs":[{"name":"allow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",145,{"inputs":[{"name":"allow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","hyper::header::common::authorization","",146,{"inputs":[{"name":"authorization"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",146,{"inputs":[{"name":"authorization"},{"name":"authorization"}],"output":{"name":"bool"}}],[11,"ne","","",146,{"inputs":[{"name":"authorization"},{"name":"authorization"}],"output":{"name":"bool"}}],[11,"clone","","",146,{"inputs":[{"name":"authorization"}],"output":{"name":"authorization"}}],[6,"Target","iron::headers","",null,null],[11,"deref","hyper::header::common::authorization","",146,{"inputs":[{"name":"authorization"}],"output":{"name":"s"}}],[11,"deref_mut","","",146,{"inputs":[{"name":"authorization"}],"output":{"name":"s"}}],[11,"header_name","","",146,{"inputs":[{"name":"authorization"}],"output":{"name":"str"}}],[11,"parse_header","","",146,null],[11,"fmt_header","","",146,{"inputs":[{"name":"authorization"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"scheme","collections::string","",99,{"inputs":[{"name":"string"}],"output":{"name":"option"}}],[11,"fmt_scheme","","",99,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","hyper::header::common::authorization","",147,{"inputs":[{"name":"basic"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",147,{"inputs":[{"name":"basic"},{"name":"basic"}],"output":{"name":"bool"}}],[11,"ne","","",147,{"inputs":[{"name":"basic"},{"name":"basic"}],"output":{"name":"bool"}}],[11,"clone","","",147,{"inputs":[{"name":"basic"}],"output":{"name":"basic"}}],[11,"scheme","","",147,{"inputs":[{"name":"basic"}],"output":{"name":"option"}}],[11,"fmt_scheme","","",147,{"inputs":[{"name":"basic"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","iron::headers","",null,null],[11,"from_str","hyper::header::common::authorization","",147,{"inputs":[{"name":"basic"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","hyper::header::common::cache_control","",148,{"inputs":[{"name":"cachecontrol"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",148,{"inputs":[{"name":"cachecontrol"}],"output":{"name":"cachecontrol"}}],[11,"eq","","",148,{"inputs":[{"name":"cachecontrol"},{"name":"cachecontrol"}],"output":{"name":"bool"}}],[11,"ne","","",148,{"inputs":[{"name":"cachecontrol"},{"name":"cachecontrol"}],"output":{"name":"bool"}}],[6,"Target","iron::headers","",null,null],[11,"deref","hyper::header::common::cache_control","",148,{"inputs":[{"name":"cachecontrol"}],"output":{"name":"vec"}}],[11,"deref_mut","","",148,{"inputs":[{"name":"cachecontrol"}],"output":{"name":"vec"}}],[11,"header_name","","",148,{"inputs":[{"name":"cachecontrol"}],"output":{"name":"str"}}],[11,"parse_header","","",148,null],[11,"fmt_header","","",148,{"inputs":[{"name":"cachecontrol"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",149,{"inputs":[{"name":"cachedirective"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",149,{"inputs":[{"name":"cachedirective"}],"output":{"name":"cachedirective"}}],[11,"eq","","",149,{"inputs":[{"name":"cachedirective"},{"name":"cachedirective"}],"output":{"name":"bool"}}],[11,"ne","","",149,{"inputs":[{"name":"cachedirective"},{"name":"cachedirective"}],"output":{"name":"bool"}}],[11,"fmt","","",149,{"inputs":[{"name":"cachedirective"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","iron::headers","",null,null],[11,"from_str","hyper::header::common::cache_control","",149,{"inputs":[{"name":"cachedirective"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","hyper::header::common::cookie","",150,{"inputs":[{"name":"cookie"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",150,{"inputs":[{"name":"cookie"},{"name":"cookie"}],"output":{"name":"bool"}}],[11,"ne","","",150,{"inputs":[{"name":"cookie"},{"name":"cookie"}],"output":{"name":"bool"}}],[11,"clone","","",150,{"inputs":[{"name":"cookie"}],"output":{"name":"cookie"}}],[6,"Target","iron::headers","",null,null],[11,"deref","hyper::header::common::cookie","",150,{"inputs":[{"name":"cookie"}],"output":{"name":"vec"}}],[11,"deref_mut","","",150,{"inputs":[{"name":"cookie"}],"output":{"name":"vec"}}],[11,"header_name","","",150,{"inputs":[{"name":"cookie"}],"output":{"name":"str"}}],[11,"parse_header","","",150,null],[11,"fmt_header","","",150,{"inputs":[{"name":"cookie"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_cookie_jar","","This method can be used to create CookieJar that can be used\nto manipulate cookies and create a corresponding `SetCookie` header afterwards.",150,null],[11,"from_cookie_jar","","Extracts all cookies from `CookieJar` and creates Cookie header.\nUseful for clients.",150,{"inputs":[{"name":"cookie"},{"name":"cookiejar"}],"output":{"name":"cookie"}}],[11,"fmt","hyper::header::common::connection","",151,{"inputs":[{"name":"connectionoption"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",151,{"inputs":[{"name":"connectionoption"},{"name":"connectionoption"}],"output":{"name":"bool"}}],[11,"ne","","",151,{"inputs":[{"name":"connectionoption"},{"name":"connectionoption"}],"output":{"name":"bool"}}],[11,"clone","","",151,{"inputs":[{"name":"connectionoption"}],"output":{"name":"connectionoption"}}],[6,"Err","iron::headers","",null,null],[11,"from_str","hyper::header::common::connection","",151,{"inputs":[{"name":"connectionoption"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",151,{"inputs":[{"name":"connectionoption"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",152,{"inputs":[{"name":"connection"},{"name":"connection"}],"output":{"name":"bool"}}],[11,"ne","","",152,{"inputs":[{"name":"connection"},{"name":"connection"}],"output":{"name":"bool"}}],[11,"fmt","","",152,{"inputs":[{"name":"connection"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",152,{"inputs":[{"name":"connection"}],"output":{"name":"connection"}}],[6,"Target","iron::headers","",null,null],[11,"deref","hyper::header::common::connection","",152,{"inputs":[{"name":"connection"}],"output":{"name":"vec"}}],[11,"deref_mut","","",152,{"inputs":[{"name":"connection"}],"output":{"name":"vec"}}],[11,"header_name","","",152,{"inputs":[{"name":"connection"}],"output":{"name":"str"}}],[11,"parse_header","","",152,null],[11,"fmt_header","","",152,{"inputs":[{"name":"connection"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",152,{"inputs":[{"name":"connection"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"close","","A constructor to easily create a `Connection: close` header.",152,{"inputs":[{"name":"connection"}],"output":{"name":"connection"}}],[11,"keep_alive","","A constructor to easily create a `Connection: keep-alive` header.",152,{"inputs":[{"name":"connection"}],"output":{"name":"connection"}}],[11,"eq","hyper::header::common::content_encoding","",153,{"inputs":[{"name":"contentencoding"},{"name":"contentencoding"}],"output":{"name":"bool"}}],[11,"ne","","",153,{"inputs":[{"name":"contentencoding"},{"name":"contentencoding"}],"output":{"name":"bool"}}],[11,"fmt","","",153,{"inputs":[{"name":"contentencoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",153,{"inputs":[{"name":"contentencoding"}],"output":{"name":"contentencoding"}}],[6,"Target","iron::headers","",null,null],[11,"deref","hyper::header::common::content_encoding","",153,{"inputs":[{"name":"contentencoding"}],"output":{"name":"vec"}}],[11,"deref_mut","","",153,{"inputs":[{"name":"contentencoding"}],"output":{"name":"vec"}}],[11,"header_name","","",153,{"inputs":[{"name":"contentencoding"}],"output":{"name":"str"}}],[11,"parse_header","","",153,null],[11,"fmt_header","","",153,{"inputs":[{"name":"contentencoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",153,{"inputs":[{"name":"contentencoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::content_language","",154,{"inputs":[{"name":"contentlanguage"},{"name":"contentlanguage"}],"output":{"name":"bool"}}],[11,"ne","","",154,{"inputs":[{"name":"contentlanguage"},{"name":"contentlanguage"}],"output":{"name":"bool"}}],[11,"fmt","","",154,{"inputs":[{"name":"contentlanguage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",154,{"inputs":[{"name":"contentlanguage"}],"output":{"name":"contentlanguage"}}],[6,"Target","iron::headers","",null,null],[11,"deref","hyper::header::common::content_language","",154,{"inputs":[{"name":"contentlanguage"}],"output":{"name":"vec"}}],[11,"deref_mut","","",154,{"inputs":[{"name":"contentlanguage"}],"output":{"name":"vec"}}],[11,"header_name","","",154,{"inputs":[{"name":"contentlanguage"}],"output":{"name":"str"}}],[11,"parse_header","","",154,null],[11,"fmt_header","","",154,{"inputs":[{"name":"contentlanguage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",154,{"inputs":[{"name":"contentlanguage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::content_length","",155,{"inputs":[{"name":"contentlength"},{"name":"contentlength"}],"output":{"name":"bool"}}],[11,"ne","","",155,{"inputs":[{"name":"contentlength"},{"name":"contentlength"}],"output":{"name":"bool"}}],[11,"fmt","","",155,{"inputs":[{"name":"contentlength"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",155,{"inputs":[{"name":"contentlength"}],"output":{"name":"contentlength"}}],[6,"Target","iron::headers","",null,null],[11,"deref","hyper::header::common::content_length","",155,{"inputs":[{"name":"contentlength"}],"output":{"name":"u64"}}],[11,"deref_mut","","",155,{"inputs":[{"name":"contentlength"}],"output":{"name":"u64"}}],[11,"header_name","","",155,{"inputs":[{"name":"contentlength"}],"output":{"name":"str"}}],[11,"parse_header","","",155,null],[11,"fmt_header","","",155,{"inputs":[{"name":"contentlength"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",155,{"inputs":[{"name":"contentlength"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::content_type","",156,{"inputs":[{"name":"contenttype"},{"name":"contenttype"}],"output":{"name":"bool"}}],[11,"ne","","",156,{"inputs":[{"name":"contenttype"},{"name":"contenttype"}],"output":{"name":"bool"}}],[11,"fmt","","",156,{"inputs":[{"name":"contenttype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",156,{"inputs":[{"name":"contenttype"}],"output":{"name":"contenttype"}}],[11,"fmt","mime","",157,{"inputs":[{"name":"mime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",157,{"inputs":[{"name":"mime"},{"name":"mime"}],"output":{"name":"bool"}}],[11,"ne","","",157,{"inputs":[{"name":"mime"},{"name":"mime"}],"output":{"name":"bool"}}],[11,"clone","","",157,{"inputs":[{"name":"mime"}],"output":{"name":"mime"}}],[11,"fmt","","",158,{"inputs":[{"name":"toplevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",158,{"inputs":[{"name":"toplevel"}],"output":{"name":"toplevel"}}],[11,"eq","","",158,{"inputs":[{"name":"toplevel"},{"name":"toplevel"}],"output":{"name":"bool"}}],[11,"fmt","","",158,{"inputs":[{"name":"toplevel"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","iron::headers","",null,null],[11,"from_str","mime","",158,{"inputs":[{"name":"toplevel"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",159,{"inputs":[{"name":"sublevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",159,{"inputs":[{"name":"sublevel"}],"output":{"name":"sublevel"}}],[11,"eq","","",159,{"inputs":[{"name":"sublevel"},{"name":"sublevel"}],"output":{"name":"bool"}}],[11,"fmt","","",159,{"inputs":[{"name":"sublevel"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","iron::headers","",null,null],[11,"from_str","mime","",159,{"inputs":[{"name":"sublevel"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",160,{"inputs":[{"name":"attr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",160,{"inputs":[{"name":"attr"}],"output":{"name":"attr"}}],[11,"eq","","",160,{"inputs":[{"name":"attr"},{"name":"attr"}],"output":{"name":"bool"}}],[11,"fmt","","",160,{"inputs":[{"name":"attr"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","iron::headers","",null,null],[11,"from_str","mime","",160,{"inputs":[{"name":"attr"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"value"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",161,{"inputs":[{"name":"value"}],"output":{"name":"value"}}],[11,"eq","","",161,{"inputs":[{"name":"value"},{"name":"value"}],"output":{"name":"bool"}}],[11,"fmt","","",161,{"inputs":[{"name":"value"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","iron::headers","",null,null],[11,"from_str","mime","",161,{"inputs":[{"name":"value"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",157,{"inputs":[{"name":"mime"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","iron::headers","",null,null],[11,"from_str","mime","",157,{"inputs":[{"name":"mime"},{"name":"str"}],"output":{"name":"result"}}],[6,"Target","iron::headers","",null,null],[11,"deref","hyper::header::common::content_type","",156,{"inputs":[{"name":"contenttype"}],"output":{"name":"mime"}}],[11,"deref_mut","","",156,{"inputs":[{"name":"contenttype"}],"output":{"name":"mime"}}],[11,"header_name","","",156,{"inputs":[{"name":"contenttype"}],"output":{"name":"str"}}],[11,"parse_header","","",156,null],[11,"fmt_header","","",156,{"inputs":[{"name":"contenttype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",156,{"inputs":[{"name":"contenttype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"json","","A constructor  to easily create a `Content-Type: application/json; charset=utf-8` header.",156,{"inputs":[{"name":"contenttype"}],"output":{"name":"contenttype"}}],[11,"plaintext","","A constructor  to easily create a `Content-Type: text/plain; charset=utf-8` header.",156,{"inputs":[{"name":"contenttype"}],"output":{"name":"contenttype"}}],[11,"html","","A constructor  to easily create a `Content-Type: text/html; charset=utf-8` header.",156,{"inputs":[{"name":"contenttype"}],"output":{"name":"contenttype"}}],[11,"jpeg","","A constructor  to easily create a `Content-Type: image/jpeg` header.",156,{"inputs":[{"name":"contenttype"}],"output":{"name":"contenttype"}}],[11,"png","","A constructor  to easily create a `Content-Type: image/png` header.",156,{"inputs":[{"name":"contenttype"}],"output":{"name":"contenttype"}}],[11,"eq","hyper::header::common::date","",162,{"inputs":[{"name":"date"},{"name":"date"}],"output":{"name":"bool"}}],[11,"ne","","",162,{"inputs":[{"name":"date"},{"name":"date"}],"output":{"name":"bool"}}],[11,"fmt","","",162,{"inputs":[{"name":"date"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",162,{"inputs":[{"name":"date"}],"output":{"name":"date"}}],[6,"Target","iron::headers","",null,null],[11,"deref","hyper::header::common::date","",162,{"inputs":[{"name":"date"}],"output":{"name":"httpdate"}}],[11,"deref_mut","","",162,{"inputs":[{"name":"date"}],"output":{"name":"httpdate"}}],[11,"header_name","","",162,{"inputs":[{"name":"date"}],"output":{"name":"str"}}],[11,"parse_header","","",162,null],[11,"fmt_header","","",162,{"inputs":[{"name":"date"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",162,{"inputs":[{"name":"date"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::etag","",163,{"inputs":[{"name":"etag"},{"name":"etag"}],"output":{"name":"bool"}}],[11,"ne","","",163,{"inputs":[{"name":"etag"},{"name":"etag"}],"output":{"name":"bool"}}],[11,"fmt","","",163,{"inputs":[{"name":"etag"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",163,{"inputs":[{"name":"etag"}],"output":{"name":"etag"}}],[11,"new","hyper::header::shared::entity","Constructs a new EntityTag.\n# Panics\nIf the tag contains invalid characters.",164,{"inputs":[{"name":"entitytag"},{"name":"bool"},{"name":"string"}],"output":{"name":"entitytag"}}],[11,"tag","","Get the tag.",164,{"inputs":[{"name":"entitytag"}],"output":{"name":"str"}}],[11,"set_tag","","Set the tag.\n# Panics\nIf the tag contains invalid characters.",164,null],[11,"strong_eq","","For strong comparison two entity-tags are equivalent if both are not weak and their\nopaque-tags match character-by-character.",164,{"inputs":[{"name":"entitytag"},{"name":"entitytag"}],"output":{"name":"bool"}}],[11,"weak_eq","","For weak comparison two entity-tags are equivalent if their\nopaque-tags match character-by-character, regardless of either or\nboth being tagged as \"weak\".",164,{"inputs":[{"name":"entitytag"},{"name":"entitytag"}],"output":{"name":"bool"}}],[11,"strong_ne","","The inverse of `EntityTag.strong_eq()`.",164,{"inputs":[{"name":"entitytag"},{"name":"entitytag"}],"output":{"name":"bool"}}],[11,"weak_ne","","The inverse of `EntityTag.weak_eq()`.",164,{"inputs":[{"name":"entitytag"},{"name":"entitytag"}],"output":{"name":"bool"}}],[6,"Target","iron::headers","",null,null],[11,"deref","hyper::header::common::etag","",163,{"inputs":[{"name":"etag"}],"output":{"name":"entitytag"}}],[11,"deref_mut","","",163,{"inputs":[{"name":"etag"}],"output":{"name":"entitytag"}}],[11,"header_name","","",163,{"inputs":[{"name":"etag"}],"output":{"name":"str"}}],[11,"parse_header","","",163,null],[11,"fmt_header","","",163,{"inputs":[{"name":"etag"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",163,{"inputs":[{"name":"etag"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","hyper::header::common::expect","",165,{"inputs":[{"name":"expect"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",165,{"inputs":[{"name":"expect"},{"name":"expect"}],"output":{"name":"bool"}}],[11,"ne","","",165,{"inputs":[{"name":"expect"},{"name":"expect"}],"output":{"name":"bool"}}],[11,"clone","","",165,{"inputs":[{"name":"expect"}],"output":{"name":"expect"}}],[11,"header_name","","",165,{"inputs":[{"name":"expect"}],"output":{"name":"str"}}],[11,"parse_header","","",165,null],[11,"fmt_header","","",165,{"inputs":[{"name":"expect"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::expires","",166,{"inputs":[{"name":"expires"},{"name":"expires"}],"output":{"name":"bool"}}],[11,"ne","","",166,{"inputs":[{"name":"expires"},{"name":"expires"}],"output":{"name":"bool"}}],[11,"fmt","","",166,{"inputs":[{"name":"expires"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",166,{"inputs":[{"name":"expires"}],"output":{"name":"expires"}}],[6,"Target","iron::headers","",null,null],[11,"deref","hyper::header::common::expires","",166,{"inputs":[{"name":"expires"}],"output":{"name":"httpdate"}}],[11,"deref_mut","","",166,{"inputs":[{"name":"expires"}],"output":{"name":"httpdate"}}],[11,"header_name","","",166,{"inputs":[{"name":"expires"}],"output":{"name":"str"}}],[11,"parse_header","","",166,null],[11,"fmt_header","","",166,{"inputs":[{"name":"expires"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",166,{"inputs":[{"name":"expires"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::from","",167,{"inputs":[{"name":"from"},{"name":"from"}],"output":{"name":"bool"}}],[11,"ne","","",167,{"inputs":[{"name":"from"},{"name":"from"}],"output":{"name":"bool"}}],[11,"fmt","","",167,{"inputs":[{"name":"from"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",167,{"inputs":[{"name":"from"}],"output":{"name":"from"}}],[6,"Target","iron::headers","",null,null],[11,"deref","hyper::header::common::from","",167,{"inputs":[{"name":"from"}],"output":{"name":"string"}}],[11,"deref_mut","","",167,{"inputs":[{"name":"from"}],"output":{"name":"string"}}],[11,"header_name","","",167,{"inputs":[{"name":"from"}],"output":{"name":"str"}}],[11,"parse_header","","",167,null],[11,"fmt_header","","",167,{"inputs":[{"name":"from"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",167,{"inputs":[{"name":"from"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","hyper::header::common::host","",168,{"inputs":[{"name":"host"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",168,{"inputs":[{"name":"host"},{"name":"host"}],"output":{"name":"bool"}}],[11,"ne","","",168,{"inputs":[{"name":"host"},{"name":"host"}],"output":{"name":"bool"}}],[11,"clone","","",168,{"inputs":[{"name":"host"}],"output":{"name":"host"}}],[11,"header_name","","",168,{"inputs":[{"name":"host"}],"output":{"name":"str"}}],[11,"parse_header","","",168,null],[11,"fmt_header","","",168,{"inputs":[{"name":"host"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::if_match","",169,{"inputs":[{"name":"ifmatch"},{"name":"ifmatch"}],"output":{"name":"bool"}}],[11,"ne","","",169,{"inputs":[{"name":"ifmatch"},{"name":"ifmatch"}],"output":{"name":"bool"}}],[11,"fmt","","",169,{"inputs":[{"name":"ifmatch"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",169,{"inputs":[{"name":"ifmatch"}],"output":{"name":"ifmatch"}}],[11,"header_name","","",169,{"inputs":[{"name":"ifmatch"}],"output":{"name":"str"}}],[11,"parse_header","","",169,null],[11,"fmt_header","","",169,{"inputs":[{"name":"ifmatch"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",169,{"inputs":[{"name":"ifmatch"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::if_modified_since","",170,{"inputs":[{"name":"ifmodifiedsince"},{"name":"ifmodifiedsince"}],"output":{"name":"bool"}}],[11,"ne","","",170,{"inputs":[{"name":"ifmodifiedsince"},{"name":"ifmodifiedsince"}],"output":{"name":"bool"}}],[11,"fmt","","",170,{"inputs":[{"name":"ifmodifiedsince"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",170,{"inputs":[{"name":"ifmodifiedsince"}],"output":{"name":"ifmodifiedsince"}}],[6,"Target","iron::headers","",null,null],[11,"deref","hyper::header::common::if_modified_since","",170,{"inputs":[{"name":"ifmodifiedsince"}],"output":{"name":"httpdate"}}],[11,"deref_mut","","",170,{"inputs":[{"name":"ifmodifiedsince"}],"output":{"name":"httpdate"}}],[11,"header_name","","",170,{"inputs":[{"name":"ifmodifiedsince"}],"output":{"name":"str"}}],[11,"parse_header","","",170,null],[11,"fmt_header","","",170,{"inputs":[{"name":"ifmodifiedsince"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",170,{"inputs":[{"name":"ifmodifiedsince"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::if_none_match","",171,{"inputs":[{"name":"ifnonematch"},{"name":"ifnonematch"}],"output":{"name":"bool"}}],[11,"ne","","",171,{"inputs":[{"name":"ifnonematch"},{"name":"ifnonematch"}],"output":{"name":"bool"}}],[11,"fmt","","",171,{"inputs":[{"name":"ifnonematch"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",171,{"inputs":[{"name":"ifnonematch"}],"output":{"name":"ifnonematch"}}],[11,"header_name","","",171,{"inputs":[{"name":"ifnonematch"}],"output":{"name":"str"}}],[11,"parse_header","","",171,null],[11,"fmt_header","","",171,{"inputs":[{"name":"ifnonematch"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",171,{"inputs":[{"name":"ifnonematch"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::if_range","",172,{"inputs":[{"name":"ifrange"},{"name":"ifrange"}],"output":{"name":"bool"}}],[11,"ne","","",172,{"inputs":[{"name":"ifrange"},{"name":"ifrange"}],"output":{"name":"bool"}}],[11,"fmt","","",172,{"inputs":[{"name":"ifrange"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",172,{"inputs":[{"name":"ifrange"}],"output":{"name":"ifrange"}}],[11,"header_name","","",172,{"inputs":[{"name":"ifrange"}],"output":{"name":"str"}}],[11,"parse_header","","",172,null],[11,"fmt_header","","",172,{"inputs":[{"name":"ifrange"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",172,{"inputs":[{"name":"ifrange"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::if_unmodified_since","",173,{"inputs":[{"name":"ifunmodifiedsince"},{"name":"ifunmodifiedsince"}],"output":{"name":"bool"}}],[11,"ne","","",173,{"inputs":[{"name":"ifunmodifiedsince"},{"name":"ifunmodifiedsince"}],"output":{"name":"bool"}}],[11,"fmt","","",173,{"inputs":[{"name":"ifunmodifiedsince"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",173,{"inputs":[{"name":"ifunmodifiedsince"}],"output":{"name":"ifunmodifiedsince"}}],[6,"Target","iron::headers","",null,null],[11,"deref","hyper::header::common::if_unmodified_since","",173,{"inputs":[{"name":"ifunmodifiedsince"}],"output":{"name":"httpdate"}}],[11,"deref_mut","","",173,{"inputs":[{"name":"ifunmodifiedsince"}],"output":{"name":"httpdate"}}],[11,"header_name","","",173,{"inputs":[{"name":"ifunmodifiedsince"}],"output":{"name":"str"}}],[11,"parse_header","","",173,null],[11,"fmt_header","","",173,{"inputs":[{"name":"ifunmodifiedsince"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",173,{"inputs":[{"name":"ifunmodifiedsince"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::last_modified","",174,{"inputs":[{"name":"lastmodified"},{"name":"lastmodified"}],"output":{"name":"bool"}}],[11,"ne","","",174,{"inputs":[{"name":"lastmodified"},{"name":"lastmodified"}],"output":{"name":"bool"}}],[11,"fmt","","",174,{"inputs":[{"name":"lastmodified"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",174,{"inputs":[{"name":"lastmodified"}],"output":{"name":"lastmodified"}}],[6,"Target","iron::headers","",null,null],[11,"deref","hyper::header::common::last_modified","",174,{"inputs":[{"name":"lastmodified"}],"output":{"name":"httpdate"}}],[11,"deref_mut","","",174,{"inputs":[{"name":"lastmodified"}],"output":{"name":"httpdate"}}],[11,"header_name","","",174,{"inputs":[{"name":"lastmodified"}],"output":{"name":"str"}}],[11,"parse_header","","",174,null],[11,"fmt_header","","",174,{"inputs":[{"name":"lastmodified"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",174,{"inputs":[{"name":"lastmodified"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::location","",175,{"inputs":[{"name":"location"},{"name":"location"}],"output":{"name":"bool"}}],[11,"ne","","",175,{"inputs":[{"name":"location"},{"name":"location"}],"output":{"name":"bool"}}],[11,"fmt","","",175,{"inputs":[{"name":"location"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",175,{"inputs":[{"name":"location"}],"output":{"name":"location"}}],[6,"Target","iron::headers","",null,null],[11,"deref","hyper::header::common::location","",175,{"inputs":[{"name":"location"}],"output":{"name":"string"}}],[11,"deref_mut","","",175,{"inputs":[{"name":"location"}],"output":{"name":"string"}}],[11,"header_name","","",175,{"inputs":[{"name":"location"}],"output":{"name":"str"}}],[11,"parse_header","","",175,null],[11,"fmt_header","","",175,{"inputs":[{"name":"location"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",175,{"inputs":[{"name":"location"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","hyper::header::common::pragma","",176,{"inputs":[{"name":"pragma"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",176,{"inputs":[{"name":"pragma"},{"name":"pragma"}],"output":{"name":"bool"}}],[11,"ne","","",176,{"inputs":[{"name":"pragma"},{"name":"pragma"}],"output":{"name":"bool"}}],[11,"clone","","",176,{"inputs":[{"name":"pragma"}],"output":{"name":"pragma"}}],[11,"header_name","","",176,{"inputs":[{"name":"pragma"}],"output":{"name":"str"}}],[11,"parse_header","","",176,null],[11,"fmt_header","","",176,{"inputs":[{"name":"pragma"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::referer","",177,{"inputs":[{"name":"referer"},{"name":"referer"}],"output":{"name":"bool"}}],[11,"ne","","",177,{"inputs":[{"name":"referer"},{"name":"referer"}],"output":{"name":"bool"}}],[11,"fmt","","",177,{"inputs":[{"name":"referer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",177,{"inputs":[{"name":"referer"}],"output":{"name":"referer"}}],[6,"Target","iron::headers","",null,null],[11,"deref","hyper::header::common::referer","",177,{"inputs":[{"name":"referer"}],"output":{"name":"string"}}],[11,"deref_mut","","",177,{"inputs":[{"name":"referer"}],"output":{"name":"string"}}],[11,"header_name","","",177,{"inputs":[{"name":"referer"}],"output":{"name":"str"}}],[11,"parse_header","","",177,null],[11,"fmt_header","","",177,{"inputs":[{"name":"referer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",177,{"inputs":[{"name":"referer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::server","",178,{"inputs":[{"name":"server"},{"name":"server"}],"output":{"name":"bool"}}],[11,"ne","","",178,{"inputs":[{"name":"server"},{"name":"server"}],"output":{"name":"bool"}}],[11,"fmt","","",178,{"inputs":[{"name":"server"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",178,{"inputs":[{"name":"server"}],"output":{"name":"server"}}],[6,"Target","iron::headers","",null,null],[11,"deref","hyper::header::common::server","",178,{"inputs":[{"name":"server"}],"output":{"name":"string"}}],[11,"deref_mut","","",178,{"inputs":[{"name":"server"}],"output":{"name":"string"}}],[11,"header_name","","",178,{"inputs":[{"name":"server"}],"output":{"name":"str"}}],[11,"parse_header","","",178,null],[11,"fmt_header","","",178,{"inputs":[{"name":"server"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",178,{"inputs":[{"name":"server"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","hyper::header::common::set_cookie","",179,{"inputs":[{"name":"setcookie"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",179,{"inputs":[{"name":"setcookie"},{"name":"setcookie"}],"output":{"name":"bool"}}],[11,"ne","","",179,{"inputs":[{"name":"setcookie"},{"name":"setcookie"}],"output":{"name":"bool"}}],[11,"clone","","",179,{"inputs":[{"name":"setcookie"}],"output":{"name":"setcookie"}}],[6,"Target","iron::headers","",null,null],[11,"deref","hyper::header::common::set_cookie","",179,{"inputs":[{"name":"setcookie"}],"output":{"name":"vec"}}],[11,"deref_mut","","",179,{"inputs":[{"name":"setcookie"}],"output":{"name":"vec"}}],[11,"header_name","","",179,{"inputs":[{"name":"setcookie"}],"output":{"name":"str"}}],[11,"parse_header","","",179,null],[11,"fmt_header","","",179,{"inputs":[{"name":"setcookie"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_cookie_jar","","Use this to create SetCookie header from CookieJar using\ncalculated delta.",179,{"inputs":[{"name":"setcookie"},{"name":"cookiejar"}],"output":{"name":"setcookie"}}],[11,"apply_to_cookie_jar","","Use this on client to apply changes from SetCookie to CookieJar.\nNote that this will `panic!` if `CookieJar` is not root.",179,null],[11,"eq","hyper::header::common::transfer_encoding","",180,{"inputs":[{"name":"transferencoding"},{"name":"transferencoding"}],"output":{"name":"bool"}}],[11,"ne","","",180,{"inputs":[{"name":"transferencoding"},{"name":"transferencoding"}],"output":{"name":"bool"}}],[11,"fmt","","",180,{"inputs":[{"name":"transferencoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",180,{"inputs":[{"name":"transferencoding"}],"output":{"name":"transferencoding"}}],[6,"Target","iron::headers","",null,null],[11,"deref","hyper::header::common::transfer_encoding","",180,{"inputs":[{"name":"transferencoding"}],"output":{"name":"vec"}}],[11,"deref_mut","","",180,{"inputs":[{"name":"transferencoding"}],"output":{"name":"vec"}}],[11,"header_name","","",180,{"inputs":[{"name":"transferencoding"}],"output":{"name":"str"}}],[11,"parse_header","","",180,null],[11,"fmt_header","","",180,{"inputs":[{"name":"transferencoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",180,{"inputs":[{"name":"transferencoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::upgrade","",181,{"inputs":[{"name":"upgrade"},{"name":"upgrade"}],"output":{"name":"bool"}}],[11,"ne","","",181,{"inputs":[{"name":"upgrade"},{"name":"upgrade"}],"output":{"name":"bool"}}],[11,"fmt","","",181,{"inputs":[{"name":"upgrade"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",181,{"inputs":[{"name":"upgrade"}],"output":{"name":"upgrade"}}],[6,"Target","iron::headers","",null,null],[11,"deref","hyper::header::common::upgrade","",181,{"inputs":[{"name":"upgrade"}],"output":{"name":"vec"}}],[11,"deref_mut","","",181,{"inputs":[{"name":"upgrade"}],"output":{"name":"vec"}}],[11,"header_name","","",181,{"inputs":[{"name":"upgrade"}],"output":{"name":"str"}}],[11,"parse_header","","",181,null],[11,"fmt_header","","",181,{"inputs":[{"name":"upgrade"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",181,{"inputs":[{"name":"upgrade"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",182,{"inputs":[{"name":"protocolname"},{"name":"protocolname"}],"output":{"name":"bool"}}],[11,"ne","","",182,{"inputs":[{"name":"protocolname"},{"name":"protocolname"}],"output":{"name":"bool"}}],[11,"fmt","","",182,{"inputs":[{"name":"protocolname"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",182,{"inputs":[{"name":"protocolname"}],"output":{"name":"protocolname"}}],[6,"Err","iron::headers","",null,null],[11,"from_str","hyper::header::common::upgrade","",182,{"inputs":[{"name":"protocolname"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",182,{"inputs":[{"name":"protocolname"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",183,{"inputs":[{"name":"protocol"},{"name":"protocol"}],"output":{"name":"bool"}}],[11,"ne","","",183,{"inputs":[{"name":"protocol"},{"name":"protocol"}],"output":{"name":"bool"}}],[11,"fmt","","",183,{"inputs":[{"name":"protocol"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",183,{"inputs":[{"name":"protocol"}],"output":{"name":"protocol"}}],[11,"new","","Creates a new Protocol with the given name and version",183,{"inputs":[{"name":"protocol"},{"name":"protocolname"},{"name":"option"}],"output":{"name":"protocol"}}],[6,"Err","iron::headers","",null,null],[11,"from_str","hyper::header::common::upgrade","",183,{"inputs":[{"name":"protocol"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",183,{"inputs":[{"name":"protocol"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::user_agent","",184,{"inputs":[{"name":"useragent"},{"name":"useragent"}],"output":{"name":"bool"}}],[11,"ne","","",184,{"inputs":[{"name":"useragent"},{"name":"useragent"}],"output":{"name":"bool"}}],[11,"fmt","","",184,{"inputs":[{"name":"useragent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",184,{"inputs":[{"name":"useragent"}],"output":{"name":"useragent"}}],[6,"Target","iron::headers","",null,null],[11,"deref","hyper::header::common::user_agent","",184,{"inputs":[{"name":"useragent"}],"output":{"name":"string"}}],[11,"deref_mut","","",184,{"inputs":[{"name":"useragent"}],"output":{"name":"string"}}],[11,"header_name","","",184,{"inputs":[{"name":"useragent"}],"output":{"name":"str"}}],[11,"parse_header","","",184,null],[11,"fmt_header","","",184,{"inputs":[{"name":"useragent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",184,{"inputs":[{"name":"useragent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::vary","",185,{"inputs":[{"name":"vary"},{"name":"vary"}],"output":{"name":"bool"}}],[11,"ne","","",185,{"inputs":[{"name":"vary"},{"name":"vary"}],"output":{"name":"bool"}}],[11,"fmt","","",185,{"inputs":[{"name":"vary"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",185,{"inputs":[{"name":"vary"}],"output":{"name":"vary"}}],[11,"header_name","","",185,{"inputs":[{"name":"vary"}],"output":{"name":"str"}}],[11,"parse_header","","",185,null],[11,"fmt_header","","",185,{"inputs":[{"name":"vary"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",185,{"inputs":[{"name":"vary"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","hyper::header::internals::cell","",186,{"inputs":[{"name":"optcell"},{"name":"option"}],"output":{"name":"optcell"}}],[11,"set","","",186,null],[11,"get_mut","","",186,{"inputs":[{"name":"optcell"}],"output":{"name":"t"}}],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",187,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",187,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option<T>` to `Option<&T>`",187,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option<T>` to `Option<&mut T>`",187,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut_slice","","Converts from `Option<T>` to `&mut [T]` (without copying)",187,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`",187,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option<T>` if it is `Some(v)`.",187,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",187,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",187,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option<T>` to `Option<U>` by applying a function to a contained value",187,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value or returns a default.",187,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value or computes a default.",187,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",187,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",187,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",187,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",187,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",187,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",187,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",187,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",187,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",187,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_slice","","Converts from `Option<T>` to `&[T]` (without copying)",187,null],[11,"cloned","","Maps an Option<&T> to an Option<T> by cloning the contents of the Option.",187,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",187,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"fmt","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",188,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"cmp","","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"option"}}],[11,"lt","","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"le","","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"gt","","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ge","","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"eq","","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ne","","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[6,"Output","iron::headers","",null,null],[11,"shl","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"shr","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"shl","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"shr","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"shl","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"shr","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"shl","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"shr","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"shl","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"shr","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"shl","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"shr","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"shl","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"shr","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"shl","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"shr","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"shl","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"shr","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"shl","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"shr","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"add","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"sub","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"mul","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"not","core::num","",188,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"bitxor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"bitor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"bitand","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"add","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"sub","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"mul","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"not","core::num","",188,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"bitxor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"bitor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"bitand","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"add","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"sub","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"mul","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"not","core::num","",188,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"bitxor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"bitor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"bitand","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"add","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"sub","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"mul","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"not","core::num","",188,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"bitxor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"bitor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"bitand","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"add","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"sub","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"mul","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"not","core::num","",188,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"bitxor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"bitor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"bitand","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"add","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"sub","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"mul","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"not","core::num","",188,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"bitxor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"bitor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"bitand","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"add","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"sub","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"mul","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"not","core::num","",188,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"bitxor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"bitor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"bitand","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"add","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"sub","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"mul","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"not","core::num","",188,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"bitxor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"bitor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"bitand","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"add","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"sub","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"mul","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"not","core::num","",188,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"bitxor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"bitor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"bitand","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"add","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"sub","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"mul","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"not","core::num","",188,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"bitxor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"bitor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","iron::headers","",null,null],[11,"bitand","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"from_small","core::num::flt2dec::bignum","Makes a bignum from one digit.",189,{"inputs":[{"name":"big32x36"},{"name":"u32"}],"output":{"name":"big32x36"}}],[11,"from_u64","","Makes a bignum from `u64` value.",189,{"inputs":[{"name":"big32x36"},{"name":"u64"}],"output":{"name":"big32x36"}}],[11,"is_zero","","Returns true if the bignum is zero.",189,{"inputs":[{"name":"big32x36"}],"output":{"name":"bool"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",189,{"inputs":[{"name":"big32x36"},{"name":"big32x36"}],"output":{"name":"big32x36"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",189,{"inputs":[{"name":"big32x36"},{"name":"big32x36"}],"output":{"name":"big32x36"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",189,{"inputs":[{"name":"big32x36"},{"name":"u32"}],"output":{"name":"big32x36"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",189,{"inputs":[{"name":"big32x36"},{"name":"usize"}],"output":{"name":"big32x36"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",189,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",189,null],[11,"eq","","",189,{"inputs":[{"name":"big32x36"},{"name":"big32x36"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",189,{"inputs":[{"name":"big32x36"},{"name":"big32x36"}],"output":{"name":"option"}}],[11,"cmp","","",189,{"inputs":[{"name":"big32x36"},{"name":"big32x36"}],"output":{"name":"ordering"}}],[11,"clone","","",189,{"inputs":[{"name":"big32x36"}],"output":{"name":"big32x36"}}],[11,"fmt","","",189,{"inputs":[{"name":"big32x36"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_small","core::num::flt2dec::bignum::tests","Makes a bignum from one digit.",190,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"from_u64","","Makes a bignum from `u64` value.",190,{"inputs":[{"name":"big8x3"},{"name":"u64"}],"output":{"name":"big8x3"}}],[11,"is_zero","","Returns true if the bignum is zero.",190,{"inputs":[{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",190,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",190,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",190,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",190,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",190,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",190,null],[11,"eq","","",190,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",190,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"option"}}],[11,"cmp","","",190,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"ordering"}}],[11,"clone","","",190,{"inputs":[{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"fmt","","",190,{"inputs":[{"name":"big8x3"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","core::num::flt2dec::decoder","",191,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"ne","","",191,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"fmt","","",191,{"inputs":[{"name":"decoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",191,{"inputs":[{"name":"decoded"}],"output":{"name":"decoded"}}],[11,"eq","","",192,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"ne","","",192,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"fmt","","",192,{"inputs":[{"name":"fulldecoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",192,{"inputs":[{"name":"fulldecoded"}],"output":{"name":"fulldecoded"}}],[11,"fmt","core::num::flt2dec::strategy::grisu","",193,{"inputs":[{"name":"fp"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",193,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"fmt","core::num::flt2dec","",194,{"inputs":[{"name":"part"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",194,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"ne","","",194,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"clone","","",194,{"inputs":[{"name":"part"}],"output":{"name":"part"}}],[11,"len","","Returns the exact byte length of given part.",194,{"inputs":[{"name":"part"}],"output":{"name":"usize"}}],[11,"write","","Writes a part into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",194,null],[11,"clone","","",195,{"inputs":[{"name":"formatted"}],"output":{"name":"formatted"}}],[11,"len","","Returns the exact byte length of combined formatted result.",195,{"inputs":[{"name":"formatted"}],"output":{"name":"usize"}}],[11,"write","","Writes all formatted parts into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",195,null],[11,"fmt","","",196,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",196,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ne","","",196,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"clone","","",196,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"fmt","core::num","",197,{"inputs":[{"name":"fpcategory"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",197,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"ne","","",197,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"clone","","",197,{"inputs":[{"name":"fpcategory"}],"output":{"name":"fpcategory"}}],[6,"Err","iron::headers","",null,null],[6,"Err","","",null,null],[6,"Err","","",null,null],[6,"Err","","",null,null],[6,"Err","","",null,null],[6,"Err","","",null,null],[6,"Err","","",null,null],[6,"Err","","",null,null],[6,"Err","","",null,null],[6,"Err","","",null,null],[6,"Err","","",null,null],[6,"Err","","",null,null],[11,"eq","core::num","",198,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"ne","","",198,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"clone","","",198,{"inputs":[{"name":"parseinterror"}],"output":{"name":"parseinterror"}}],[11,"fmt","","",198,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",199,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",199,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",199,{"inputs":[{"name":"interrorkind"}],"output":{"name":"interrorkind"}}],[11,"fmt","","",199,{"inputs":[{"name":"interrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",198,{"inputs":[{"name":"parseinterror"}],"output":{"name":"str"}}],[11,"fmt","","",198,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",200,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"ne","","",200,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"clone","","",200,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"parsefloaterror"}}],[11,"fmt","","",200,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",201,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",201,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",201,{"inputs":[{"name":"floaterrorkind"}],"output":{"name":"floaterrorkind"}}],[11,"fmt","","",201,{"inputs":[{"name":"floaterrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",200,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::nonzero","",202,null],[11,"fmt","","",202,{"inputs":[{"name":"nonzero"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",202,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"option"}}],[11,"lt","","",202,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"le","","",202,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"gt","","",202,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ge","","",202,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"cmp","","",202,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"ordering"}}],[11,"eq","","",202,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ne","","",202,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"clone","","",202,{"inputs":[{"name":"nonzero"}],"output":{"name":"nonzero"}}],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually \"non-zero\".",202,{"inputs":[{"name":"nonzero"},{"name":"t"}],"output":{"name":"nonzero"}}],[6,"Target","iron::headers","",null,null],[11,"deref","core::nonzero","",202,{"inputs":[{"name":"nonzero"}],"output":{"name":"t"}}],[11,"new","core::ptr","Creates a new `Unique`.",203,null],[11,"get","","Dereferences the content.",203,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",203,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[6,"Target","iron::headers","",null,null],[11,"deref","core::ptr","",203,null],[11,"fmt","","",203,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","core::marker","",204,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",204,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"option"}}],[11,"lt","","",204,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"le","","",204,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"gt","","",204,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"ge","","",204,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"eq","","",204,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"ne","","",204,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"clone","","",204,{"inputs":[{"name":"nocopy"}],"output":{"name":"nocopy"}}],[11,"hash","","",205,null],[11,"eq","","",205,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",205,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",205,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",205,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[6,"Output","iron::headers","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"eq","core::ops","",206,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",206,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",206,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",206,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",89,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",89,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",89,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",89,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",87,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",87,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",87,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",87,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",88,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",88,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",88,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",88,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Target","iron::headers","",null,null],[6,"Target","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"fmt","core::cmp","",207,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",207,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",207,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",207,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",207,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",207,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",207,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"fmt","iron","",208,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",208,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",208,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",208,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",208,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",208,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",208,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",208,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",209,null],[11,"fmt","","",209,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",209,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",209,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",209,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",209,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[6,"Item","iron::headers","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[11,"default","core::atomic","",210,{"inputs":[{"name":"atomicbool"}],"output":{"name":"atomicbool"}}],[11,"default","","",211,{"inputs":[{"name":"atomicisize"}],"output":{"name":"atomicisize"}}],[11,"default","","",212,{"inputs":[{"name":"atomicusize"}],"output":{"name":"atomicusize"}}],[11,"default","","",213,{"inputs":[{"name":"atomicptr"}],"output":{"name":"atomicptr"}}],[11,"clone","","",214,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",210,{"inputs":[{"name":"atomicbool"},{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",210,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",210,null],[11,"swap","","Stores a value into the bool, returning the old value.",210,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the bool if the current value is the same as the expected value.",210,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_and","","Logical \"and\" with a boolean value.",210,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical \"nand\" with a boolean value.",210,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical \"or\" with a boolean value.",210,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical \"xor\" with a boolean value.",210,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",211,{"inputs":[{"name":"atomicisize"},{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",211,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",211,null],[11,"swap","","Stores a value into the isize, returning the old value.",211,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the isize if the current value is the same as the expected value.",211,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",211,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",211,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",211,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",211,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",211,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",212,{"inputs":[{"name":"atomicusize"},{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",212,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",212,null],[11,"swap","","Stores a value into the usize, returning the old value.",212,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the usize if the current value is the same as the expected value.",212,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_add","","Add to the current usize, returning the previous value.",212,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",212,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",212,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",212,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",212,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",213,null],[11,"load","","Loads a value from the pointer.",213,null],[11,"store","","Stores a value into the pointer.",213,null],[11,"swap","","Stores a value into the pointer, returning the old value.",213,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the expected value.",213,null],[11,"new","core::cell","Creates a new `Cell` containing the given value.",215,{"inputs":[{"name":"cell"},{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",215,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",215,null],[11,"as_unsafe_cell","","Gets a reference to the underlying `UnsafeCell`.",215,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",215,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",215,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"eq","","",215,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",216,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",216,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",216,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",216,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",217,{"inputs":[{"name":"refcell"},{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",217,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",217,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",217,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",217,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Gets a reference to the underlying `UnsafeCell`.",217,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",217,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",217,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"eq","","",217,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",218,null],[11,"clone","","",218,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[6,"Target","iron::headers","",null,null],[11,"deref","core::cell","",219,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"drop","","",220,null],[6,"Target","iron::headers","",null,null],[11,"deref","core::cell","",221,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",221,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",222,{"inputs":[{"name":"unsafecell"},{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",222,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",222,null],[11,"clone","core::char","",223,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"escapeunicode"}}],[11,"clone","","",224,{"inputs":[{"name":"escapeunicodestate"}],"output":{"name":"escapeunicodestate"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::char","",223,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"option"}}],[11,"clone","","",225,{"inputs":[{"name":"escapedefault"}],"output":{"name":"escapedefault"}}],[11,"clone","","",226,{"inputs":[{"name":"escapedefaultstate"}],"output":{"name":"escapedefaultstate"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::char","",225,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[6,"Item","iron::headers","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[11,"clone","core::iter","",227,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::iter","",227,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",227,null],[11,"next_back","","",227,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"indexable","","",227,{"inputs":[{"name":"rev"}],"output":{"name":"usize"}}],[11,"idx","","",227,{"inputs":[{"name":"rev"},{"name":"usize"}],"output":{"name":"option"}}],[11,"fmt","","",228,{"inputs":[{"name":"minmaxresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",228,{"inputs":[{"name":"minmaxresult"},{"name":"minmaxresult"}],"output":{"name":"bool"}}],[11,"ne","","",228,{"inputs":[{"name":"minmaxresult"},{"name":"minmaxresult"}],"output":{"name":"bool"}}],[11,"clone","","",228,{"inputs":[{"name":"minmaxresult"}],"output":{"name":"minmaxresult"}}],[11,"into_option","","`into_option` creates an `Option` of type `(T,T)`. The returned `Option`\nhas variant `None` if and only if the `MinMaxResult` has variant\n`NoElements`. Otherwise variant `Some(x,y)` is returned where `x <= y`.\nIf `MinMaxResult` has variant `OneElement(x)`, performing this operation\nwill make one clone of `x`.",228,{"inputs":[{"name":"minmaxresult"}],"output":{"name":"option"}}],[11,"clone","","",229,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::iter","",229,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",229,null],[11,"next_back","","",229,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"indexable","","",229,{"inputs":[{"name":"cloned"}],"output":{"name":"usize"}}],[11,"idx","","",229,{"inputs":[{"name":"cloned"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",230,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::iter","",230,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",230,null],[11,"indexable","","",230,{"inputs":[{"name":"cycle"}],"output":{"name":"usize"}}],[11,"idx","","",230,{"inputs":[{"name":"cycle"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",231,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::iter","",231,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",231,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",231,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",231,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",231,null],[11,"next_back","","",231,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"indexable","","",231,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"idx","","",231,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",232,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::iter","",232,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",232,null],[11,"next_back","","",232,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"indexable","","",232,{"inputs":[{"name":"zip"}],"output":{"name":"usize"}}],[11,"idx","","",232,{"inputs":[{"name":"zip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",233,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::iter","",233,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",233,null],[11,"next_back","","",233,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"indexable","","",233,{"inputs":[{"name":"map"}],"output":{"name":"usize"}}],[11,"idx","","",233,{"inputs":[{"name":"map"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",234,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::iter","",234,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",234,null],[11,"next_back","","",234,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",235,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::iter","",235,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",235,null],[11,"next_back","","",235,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",236,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::iter","# Overflow Behavior",236,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",236,null],[11,"nth","","",236,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",236,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",236,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"indexable","","",236,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"idx","","",236,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",237,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::iter","",237,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",237,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",237,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",237,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",237,null],[11,"peek","","Returns a reference to the next element of the iterator with out\nadvancing it, or None if the iterator is exhausted.",237,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks whether peekable iterator is empty or not.",237,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",238,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::iter","",238,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",238,null],[11,"clone","","",239,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::iter","",239,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",239,null],[11,"clone","","",240,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::iter","",240,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",240,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",240,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",240,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",240,null],[11,"indexable","","",240,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"idx","","",240,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",241,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::iter","",241,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",241,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",241,null],[11,"indexable","","",241,{"inputs":[{"name":"take"}],"output":{"name":"usize"}}],[11,"idx","","",241,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",242,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::iter","",242,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",242,null],[11,"clone","","",243,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::iter","",243,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",243,null],[11,"next_back","","",243,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",244,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::iter","",244,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",244,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",244,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",244,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",244,null],[11,"next_back","","",244,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"indexable","","",244,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"idx","","",244,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"reset_fuse","","Resets the `Fuse` such that the next call to `.next()` or\n`.next_back()` will call the underlying iterator again even if it\npreviously returned `None`.",244,null],[11,"clone","","",245,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::iter","",245,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",245,null],[11,"next_back","","",245,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"indexable","","",245,{"inputs":[{"name":"inspect"}],"output":{"name":"usize"}}],[11,"idx","","",245,{"inputs":[{"name":"inspect"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",246,{"inputs":[{"name":"unfold"}],"output":{"name":"unfold"}}],[11,"new","","Creates a new iterator with the specified closure as the \"iterator\nfunction\" and an initial state to eventually pass to the closure",246,{"inputs":[{"name":"unfold"},{"name":"st"},{"name":"f"}],"output":{"name":"unfold"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::iter","",246,{"inputs":[{"name":"unfold"}],"output":{"name":"option"}}],[11,"size_hint","","",246,null],[11,"clone","","",247,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",87,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",89,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::iter","",247,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",247,null],[11,"clone","","",248,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::iter","",248,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",248,null],[11,"next_back","","",248,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::iter","",247,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",247,null],[6,"Item","iron::headers","",null,null],[11,"next","core::ops","",89,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",89,null],[11,"next_back","","",89,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::ops","",87,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",249,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::iter","",249,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",249,null],[11,"next_back","","",249,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"indexable","","",249,{"inputs":[{"name":"repeat"}],"output":{"name":"usize"}}],[11,"idx","","",249,{"inputs":[{"name":"repeat"},{"name":"usize"}],"output":{"name":"option"}}],[11,"hash","core::option","",187,null],[11,"fmt","","",187,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",187,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",187,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",187,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",187,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",187,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",187,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",187,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",187,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",187,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"default","","",187,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[6,"Item","iron::headers","",null,null],[6,"IntoIter","","",null,null],[11,"into_iter","core::option","Returns a consuming iterator over the possibly contained value.",187,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",250,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::option","",250,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",250,null],[11,"next_back","","",250,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::option","",251,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",251,null],[11,"next_back","","",251,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",251,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::option","",252,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",252,null],[11,"next_back","","",252,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::option","",253,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",253,null],[11,"next_back","","",253,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",187,{"inputs":[{"name":"option"},{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",254,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",255,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"hash","core::result","",256,null],[11,"fmt","","",256,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",256,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",256,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",256,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",256,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",256,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",256,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",256,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",256,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",256,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",256,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",256,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result<T, E>` to `Option<T>`",256,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result<T, E>` to `Option<E>`",256,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result<T, E>` to `Result<&T, &E>`",256,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result<T, E>` to `Result<&mut T, &mut E>`",256,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_slice","","Converts from `Result<T, E>` to `&[T]` (without copying)",256,null],[11,"as_mut_slice","","Converts from `Result<T, E>` to `&mut [T]` (without copying)",256,null],[11,"map","","Maps a `Result<T, E>` to `Result<U, E>` by applying a function to an\ncontained `Ok` value, leaving an `Err` value untouched.",256,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result<T, E>` to `Result<T, F>` by applying a function to an\ncontained `Err` value, leaving an `Ok` value untouched.",256,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",256,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",256,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",256,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",256,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",256,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",256,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",256,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",256,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",256,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",256,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[6,"Item","iron::headers","",null,null],[6,"IntoIter","","",null,null],[11,"into_iter","core::result","Returns a consuming iterator over the possibly contained value.",256,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::result","",257,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",257,null],[11,"next_back","","",257,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",257,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::result","",258,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",258,null],[11,"next_back","","",258,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::result","",259,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",259,null],[11,"next_back","","",259,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",256,{"inputs":[{"name":"result"},{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::simd","",260,{"inputs":[{"name":"i8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",260,{"inputs":[{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"fmt","","",261,{"inputs":[{"name":"i16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",261,{"inputs":[{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"fmt","","",262,{"inputs":[{"name":"i32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",262,{"inputs":[{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"fmt","","",263,{"inputs":[{"name":"i64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",263,{"inputs":[{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"fmt","","",264,{"inputs":[{"name":"u8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",264,{"inputs":[{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"fmt","","",265,{"inputs":[{"name":"u16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",265,{"inputs":[{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"fmt","","",266,{"inputs":[{"name":"u32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",266,{"inputs":[{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"fmt","","",267,{"inputs":[{"name":"u64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",267,{"inputs":[{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"fmt","","",268,{"inputs":[{"name":"f32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",268,{"inputs":[{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"fmt","","",269,{"inputs":[{"name":"f64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",269,{"inputs":[{"name":"f64x2"}],"output":{"name":"f64x2"}}],[6,"Output","iron::headers","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[11,"as_slice","core::slice","View the underlying data as a subslice of the original data.",270,null],[6,"Item","iron::headers","",null,null],[11,"next","core::slice","",270,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",270,null],[11,"count","","",270,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"nth","","",270,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",270,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",270,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",270,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"indexable","","",270,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"idx","","",270,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"into_slice","","View the underlying data as a subslice of the original data.",271,null],[6,"Item","iron::headers","",null,null],[11,"next","core::slice","",271,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",271,null],[11,"count","","",271,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"nth","","",271,{"inputs":[{"name":"itermut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",271,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next_back","","",271,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",272,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::slice","",272,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"size_hint","","",272,null],[11,"next_back","","",272,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",272,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",273,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::slice","",273,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"size_hint","","",273,null],[11,"next_back","","",273,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::slice","",274,{"inputs":[{"name":"genericsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",274,null],[6,"Item","iron::headers","",null,null],[11,"next","core::slice","",275,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"size_hint","","",275,null],[6,"Item","iron::headers","",null,null],[11,"next","core::slice","",276,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",276,null],[6,"Item","iron::headers","",null,null],[11,"next","core::slice","",277,{"inputs":[{"name":"splitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",277,null],[6,"Item","iron::headers","",null,null],[11,"next","core::slice","",278,{"inputs":[{"name":"rsplitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",278,null],[11,"clone","","",279,{"inputs":[{"name":"windows"}],"output":{"name":"windows"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::slice","",279,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"size_hint","","",279,null],[11,"next_back","","",279,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"indexable","","",279,{"inputs":[{"name":"windows"}],"output":{"name":"usize"}}],[11,"idx","","",279,{"inputs":[{"name":"windows"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",280,{"inputs":[{"name":"chunks"}],"output":{"name":"chunks"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::slice","",280,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"size_hint","","",280,null],[11,"next_back","","",280,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"indexable","","",280,{"inputs":[{"name":"chunks"}],"output":{"name":"usize"}}],[11,"idx","","",280,{"inputs":[{"name":"chunks"},{"name":"usize"}],"output":{"name":"option"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::slice","",281,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"size_hint","","",281,null],[11,"next_back","","",281,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[6,"Err","iron::headers","",null,null],[11,"eq","core::str","",282,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"ne","","",282,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"clone","","",282,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"parseboolerror"}}],[11,"fmt","","",282,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",282,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",283,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",283,{"inputs":[{"name":"utf8error"}],"output":{"name":"utf8error"}}],[11,"eq","","",283,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"ne","","",283,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",283,{"inputs":[{"name":"utf8error"}],"output":{"name":"usize"}}],[11,"fmt","","",283,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",284,{"inputs":[{"name":"chars"}],"output":{"name":"chars"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::str","",284,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"size_hint","","",284,null],[11,"next_back","","",284,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"clone","","",285,{"inputs":[{"name":"charindices"}],"output":{"name":"charindices"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::str","",285,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"size_hint","","",285,null],[11,"next_back","","",285,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"clone","","",286,{"inputs":[{"name":"bytes"}],"output":{"name":"bytes"}}],[11,"clone","","",287,{"inputs":[{"name":"bytesderef"}],"output":{"name":"bytesderef"}}],[11,"call","","",287,null],[11,"call_mut","","",287,null],[6,"Output","iron::headers","",null,null],[11,"call_once","core::str","",287,null],[6,"Item","iron::headers","",null,null],[11,"next","core::str","",286,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"size_hint","","",286,null],[11,"next_back","","",286,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"len","","",286,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"clone","","",288,{"inputs":[{"name":"splitinternal"}],"output":{"name":"splitinternal"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::str","",289,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"clone","","",289,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::str","",290,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"clone","","",290,{"inputs":[{"name":"rsplit"}],"output":{"name":"rsplit"}}],[11,"next_back","","",289,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next_back","","",290,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::str","",291,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"clone","","",291,{"inputs":[{"name":"splitterminator"}],"output":{"name":"splitterminator"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::str","",292,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",292,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"rsplitterminator"}}],[11,"next_back","","",291,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"next_back","","",292,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",293,{"inputs":[{"name":"splitninternal"}],"output":{"name":"splitninternal"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::str","",294,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"clone","","",294,{"inputs":[{"name":"splitn"}],"output":{"name":"splitn"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::str","",295,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"clone","","",295,{"inputs":[{"name":"rsplitn"}],"output":{"name":"rsplitn"}}],[11,"clone","","",296,{"inputs":[{"name":"matchindicesinternal"}],"output":{"name":"matchindicesinternal"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::str","",297,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"clone","","",297,{"inputs":[{"name":"matchindices"}],"output":{"name":"matchindices"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::str","",298,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",298,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"rmatchindices"}}],[11,"next_back","","",297,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"next_back","","",298,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",299,{"inputs":[{"name":"matchesinternal"}],"output":{"name":"matchesinternal"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::str","",300,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"clone","","",300,{"inputs":[{"name":"matches"}],"output":{"name":"matches"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::str","",301,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",301,{"inputs":[{"name":"rmatches"}],"output":{"name":"rmatches"}}],[11,"next_back","","",300,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"next_back","","",301,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",302,{"inputs":[{"name":"lines"}],"output":{"name":"lines"}}],[6,"Item","iron::headers","",null,null],[11,"next","core::str","",302,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"size_hint","","",302,null],[11,"next_back","","",302,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"clone","","",303,{"inputs":[{"name":"linesany"}],"output":{"name":"linesany"}}],[11,"clone","","",304,{"inputs":[{"name":"linesanymap"}],"output":{"name":"linesanymap"}}],[11,"call","","",304,null],[11,"call_mut","","",304,null],[6,"Output","iron::headers","",null,null],[11,"call_once","core::str","",304,null],[6,"Item","iron::headers","",null,null],[11,"next","core::str","",303,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"size_hint","","",303,null],[11,"next_back","","",303,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"clone","","",305,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"clone","","",306,{"inputs":[{"name":"oldsearcher"}],"output":{"name":"oldsearcher"}}],[11,"clone","","",307,{"inputs":[{"name":"oldmatchindices"}],"output":{"name":"oldmatchindices"}}],[11,"clone","","",308,{"inputs":[{"name":"charrange"}],"output":{"name":"charrange"}}],[6,"Output","iron::headers","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",309,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",309,{"inputs":[{"name":"siphasher"},{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",309,null],[11,"finish","","",309,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",309,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",309,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"eq","core::fmt::num","",310,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"ne","","",310,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"clone","","",310,{"inputs":[{"name":"binary"}],"output":{"name":"binary"}}],[11,"eq","","",311,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"ne","","",311,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"clone","","",311,{"inputs":[{"name":"octal"}],"output":{"name":"octal"}}],[11,"eq","","",312,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",312,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"clone","","",312,{"inputs":[{"name":"decimal"}],"output":{"name":"decimal"}}],[11,"eq","","",313,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"ne","","",313,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"clone","","",313,{"inputs":[{"name":"lowerhex"}],"output":{"name":"lowerhex"}}],[11,"eq","","",314,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"ne","","",314,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"clone","","",314,{"inputs":[{"name":"upperhex"}],"output":{"name":"upperhex"}}],[11,"eq","","",315,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"ne","","",315,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"clone","","",315,{"inputs":[{"name":"radix"}],"output":{"name":"radix"}}],[11,"clone","","",316,{"inputs":[{"name":"radixfmt"}],"output":{"name":"radixfmt"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"write_str","core::fmt::builders","",317,{"inputs":[{"name":"padadapter"},{"name":"str"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated struct output.",318,{"inputs":[{"name":"debugstruct"},{"name":"str"},{"name":"debug"}],"output":{"name":"debugstruct"}}],[11,"finish","","Consumes the `DebugStruct`, finishing output and returning any error\nencountered.",318,{"inputs":[{"name":"debugstruct"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated tuple struct output.",319,{"inputs":[{"name":"debugtuple"},{"name":"debug"}],"output":{"name":"debugtuple"}}],[11,"finish","","Consumes the `DebugTuple`, finishing output and returning any error\nencountered.",319,{"inputs":[{"name":"debugtuple"}],"output":{"name":"result"}}],[11,"finish","","",320,null],[11,"entry","","Adds a new entry to the set output.",321,{"inputs":[{"name":"debugset"},{"name":"debug"}],"output":{"name":"debugset"}}],[11,"finish","","Consumes the `DebugSet`, finishing output and returning any error\nencountered.",321,{"inputs":[{"name":"debugset"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the set output.",322,{"inputs":[{"name":"debuglist"},{"name":"debug"}],"output":{"name":"debuglist"}}],[11,"finish","","Consumes the `DebugSet`, finishing output and returning any error\nencountered.",322,{"inputs":[{"name":"debuglist"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the map output.",323,{"inputs":[{"name":"debugmap"},{"name":"debug"},{"name":"debug"}],"output":{"name":"debugmap"}}],[11,"finish","","Consumes the `DebugMap`, finishing output and returning any error\nencountered.",323,{"inputs":[{"name":"debugmap"}],"output":{"name":"result"}}],[11,"fmt","core::fmt","",324,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",324,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"clone","","",325,{"inputs":[{"name":"argumentv1"}],"output":{"name":"argumentv1"}}],[11,"clone","","",326,{"inputs":[{"name":"flagv1"}],"output":{"name":"flagv1"}}],[11,"clone","","",327,{"inputs":[{"name":"arguments"}],"output":{"name":"arguments"}}],[11,"fmt","","",327,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",327,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",328,{"inputs":[{"name":"formatter"},{"name":"bool"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",328,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",328,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_fmt","","Writes some formatted information into this instance",328,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"flags","","Flags for formatting (packed version of rt::Flag)",328,{"inputs":[{"name":"formatter"}],"output":{"name":"u32"}}],[11,"fill","","Character used as 'fill' whenever there is alignment",328,{"inputs":[{"name":"formatter"}],"output":{"name":"char"}}],[11,"align","","Flag indicating what form of alignment was requested",328,{"inputs":[{"name":"formatter"}],"output":{"name":"alignment"}}],[11,"width","","Optionally specified integer width that the output should be",328,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"precision","","Optionally specified precision for numeric types",328,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",328,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugstruct"}}],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",328,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugtuple"}}],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",328,{"inputs":[{"name":"formatter"}],"output":{"name":"debuglist"}}],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",328,{"inputs":[{"name":"formatter"}],"output":{"name":"debugset"}}],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",328,{"inputs":[{"name":"formatter"}],"output":{"name":"debugmap"}}],[11,"fmt","","",324,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::marker","",205,{"inputs":[{"name":"phantomdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cell","",215,{"inputs":[{"name":"cell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",217,{"inputs":[{"name":"refcell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",219,{"inputs":[{"name":"ref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",221,{"inputs":[{"name":"refmut"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Target","iron::headers","",null,null],[11,"deref","hyper::header::internals::cell","",186,{"inputs":[{"name":"optcell"}],"output":{"name":"option"}}],[11,"clone","","",186,{"inputs":[{"name":"optcell"}],"output":{"name":"optcell"}}],[11,"fmt","","",329,{"inputs":[{"name":"ptrmap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",329,{"inputs":[{"name":"ptrmap"}],"output":{"name":"ptrmap"}}],[11,"new","","",330,{"inputs":[{"name":"ptrmapcell"}],"output":{"name":"ptrmapcell"}}],[11,"get","","",330,{"inputs":[{"name":"ptrmapcell"},{"name":"typeid"}],"output":{"name":"option"}}],[11,"get_mut","","",330,{"inputs":[{"name":"ptrmapcell"},{"name":"typeid"}],"output":{"name":"option"}}],[11,"insert","","",330,null],[11,"one","","",330,{"inputs":[{"name":"ptrmapcell"}],"output":{"name":"v"}}],[11,"clone","","",330,{"inputs":[{"name":"ptrmapcell"}],"output":{"name":"ptrmapcell"}}],[11,"clone","hyper::header::internals::item","",331,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"new_raw","","",331,{"inputs":[{"name":"item"},{"name":"vec"}],"output":{"name":"item"}}],[11,"new_typed","","",331,{"inputs":[{"name":"item"},{"name":"box"}],"output":{"name":"item"}}],[11,"mut_raw","","",331,{"inputs":[{"name":"item"}],"output":{"name":"vec"}}],[11,"raw","","",331,null],[11,"typed","","",331,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"typed_mut","","",331,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"fmt","","",331,{"inputs":[{"name":"item"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::shared::charset","",332,{"inputs":[{"name":"charset"},{"name":"charset"}],"output":{"name":"bool"}}],[11,"ne","","",332,{"inputs":[{"name":"charset"},{"name":"charset"}],"output":{"name":"bool"}}],[11,"fmt","","",332,{"inputs":[{"name":"charset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",332,{"inputs":[{"name":"charset"}],"output":{"name":"charset"}}],[11,"fmt","","",332,{"inputs":[{"name":"charset"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","iron::headers","",null,null],[11,"from_str","hyper::header::shared::charset","",332,{"inputs":[{"name":"charset"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","hyper::header::shared::encoding","",333,{"inputs":[{"name":"encoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",333,{"inputs":[{"name":"encoding"},{"name":"encoding"}],"output":{"name":"bool"}}],[11,"ne","","",333,{"inputs":[{"name":"encoding"},{"name":"encoding"}],"output":{"name":"bool"}}],[11,"clone","","",333,{"inputs":[{"name":"encoding"}],"output":{"name":"encoding"}}],[11,"fmt","","",333,{"inputs":[{"name":"encoding"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","iron::headers","",null,null],[11,"from_str","hyper::header::shared::encoding","",333,{"inputs":[{"name":"encoding"},{"name":"str"}],"output":{"name":"result"}}],[11,"eq","hyper::header::shared::entity","",164,{"inputs":[{"name":"entitytag"},{"name":"entitytag"}],"output":{"name":"bool"}}],[11,"ne","","",164,{"inputs":[{"name":"entitytag"},{"name":"entitytag"}],"output":{"name":"bool"}}],[11,"fmt","","",164,{"inputs":[{"name":"entitytag"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",164,{"inputs":[{"name":"entitytag"}],"output":{"name":"entitytag"}}],[11,"fmt","","",164,{"inputs":[{"name":"entitytag"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","iron::headers","",null,null],[11,"from_str","hyper::header::shared::entity","",164,{"inputs":[{"name":"entitytag"},{"name":"str"}],"output":{"name":"result"}}],[11,"cmp","hyper::header::shared::httpdate","",334,{"inputs":[{"name":"httpdate"},{"name":"httpdate"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",334,{"inputs":[{"name":"httpdate"},{"name":"httpdate"}],"output":{"name":"option"}}],[11,"lt","","",334,{"inputs":[{"name":"httpdate"},{"name":"httpdate"}],"output":{"name":"bool"}}],[11,"le","","",334,{"inputs":[{"name":"httpdate"},{"name":"httpdate"}],"output":{"name":"bool"}}],[11,"gt","","",334,{"inputs":[{"name":"httpdate"},{"name":"httpdate"}],"output":{"name":"bool"}}],[11,"ge","","",334,{"inputs":[{"name":"httpdate"},{"name":"httpdate"}],"output":{"name":"bool"}}],[11,"eq","","",334,{"inputs":[{"name":"httpdate"},{"name":"httpdate"}],"output":{"name":"bool"}}],[11,"ne","","",334,{"inputs":[{"name":"httpdate"},{"name":"httpdate"}],"output":{"name":"bool"}}],[11,"fmt","","",334,{"inputs":[{"name":"httpdate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",334,{"inputs":[{"name":"httpdate"}],"output":{"name":"httpdate"}}],[6,"Err","iron::headers","",null,null],[11,"from_str","hyper::header::shared::httpdate","",334,{"inputs":[{"name":"httpdate"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",334,{"inputs":[{"name":"httpdate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","hyper::header::shared::language","",335,{"inputs":[{"name":"language"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",335,{"inputs":[{"name":"language"},{"name":"language"}],"output":{"name":"bool"}}],[11,"ne","","",335,{"inputs":[{"name":"language"},{"name":"language"}],"output":{"name":"bool"}}],[11,"clone","","",335,{"inputs":[{"name":"language"}],"output":{"name":"language"}}],[6,"Err","iron::headers","",null,null],[11,"from_str","hyper::header::shared::language","",335,{"inputs":[{"name":"language"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",335,{"inputs":[{"name":"language"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","hyper::header::shared::quality_item","",336,{"inputs":[{"name":"quality"},{"name":"quality"}],"output":{"name":"option"}}],[11,"lt","","",336,{"inputs":[{"name":"quality"},{"name":"quality"}],"output":{"name":"bool"}}],[11,"le","","",336,{"inputs":[{"name":"quality"},{"name":"quality"}],"output":{"name":"bool"}}],[11,"gt","","",336,{"inputs":[{"name":"quality"},{"name":"quality"}],"output":{"name":"bool"}}],[11,"ge","","",336,{"inputs":[{"name":"quality"},{"name":"quality"}],"output":{"name":"bool"}}],[11,"eq","","",336,{"inputs":[{"name":"quality"},{"name":"quality"}],"output":{"name":"bool"}}],[11,"ne","","",336,{"inputs":[{"name":"quality"},{"name":"quality"}],"output":{"name":"bool"}}],[11,"cmp","","",336,{"inputs":[{"name":"quality"},{"name":"quality"}],"output":{"name":"ordering"}}],[11,"fmt","","",336,{"inputs":[{"name":"quality"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",336,{"inputs":[{"name":"quality"}],"output":{"name":"quality"}}],[11,"fmt","","",336,{"inputs":[{"name":"quality"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",336,{"inputs":[{"name":"quality"}],"output":{"name":"quality"}}],[11,"fmt","","",337,{"inputs":[{"name":"qualityitem"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",337,{"inputs":[{"name":"qualityitem"},{"name":"qualityitem"}],"output":{"name":"bool"}}],[11,"ne","","",337,{"inputs":[{"name":"qualityitem"},{"name":"qualityitem"}],"output":{"name":"bool"}}],[11,"clone","","",337,{"inputs":[{"name":"qualityitem"}],"output":{"name":"qualityitem"}}],[11,"new","","Creates a new `QualityItem` from an item and a quality.\nThe item can be of any type.\nThe quality should be a value in the range [0, 1].",337,{"inputs":[{"name":"qualityitem"},{"name":"t"},{"name":"quality"}],"output":{"name":"qualityitem"}}],[11,"partial_cmp","","",337,{"inputs":[{"name":"qualityitem"},{"name":"qualityitem"}],"output":{"name":"option"}}],[11,"fmt","","",337,{"inputs":[{"name":"qualityitem"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","iron::headers","",null,null],[11,"from_str","hyper::header::shared::quality_item","",337,{"inputs":[{"name":"qualityitem"},{"name":"str"}],"output":{"name":"result"}}],[11,"clone","alloc::boxed","",4,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone","hyper::header","",7,{"inputs":[{"name":"headers"}],"output":{"name":"headers"}}],[11,"fmt","","",7,{"inputs":[{"name":"headers"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"headers"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Item","iron::headers","",null,null],[11,"next","hyper::header","",338,{"inputs":[{"name":"headersitems"}],"output":{"name":"option"}}],[11,"is","","Check if a HeaderView is a certain Header.",339,{"inputs":[{"name":"headerview"}],"output":{"name":"bool"}}],[11,"name","","Get the Header name as a slice.",339,{"inputs":[{"name":"headerview"}],"output":{"name":"str"}}],[11,"value","","Cast the value to a certain Header type.",339,{"inputs":[{"name":"headerview"}],"output":{"name":"option"}}],[11,"value_string","","Get just the header value as a String.",339,{"inputs":[{"name":"headerview"}],"output":{"name":"string"}}],[11,"fmt","","",339,{"inputs":[{"name":"headerview"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",339,{"inputs":[{"name":"headerview"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"extend","","",7,null],[11,"from_iter","","",7,{"inputs":[{"name":"headers"},{"name":"i"}],"output":{"name":"headers"}}],[11,"fmt","","",340,{"inputs":[{"name":"headerformatter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",340,{"inputs":[{"name":"headerformatter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",341,{"inputs":[{"name":"cowstr"},{"name":"cowstr"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",341,{"inputs":[{"name":"cowstr"},{"name":"cowstr"}],"output":{"name":"option"}}],[11,"lt","","",341,{"inputs":[{"name":"cowstr"},{"name":"cowstr"}],"output":{"name":"bool"}}],[11,"le","","",341,{"inputs":[{"name":"cowstr"},{"name":"cowstr"}],"output":{"name":"bool"}}],[11,"gt","","",341,{"inputs":[{"name":"cowstr"},{"name":"cowstr"}],"output":{"name":"bool"}}],[11,"ge","","",341,{"inputs":[{"name":"cowstr"},{"name":"cowstr"}],"output":{"name":"bool"}}],[11,"eq","","",341,{"inputs":[{"name":"cowstr"},{"name":"cowstr"}],"output":{"name":"bool"}}],[11,"ne","","",341,{"inputs":[{"name":"cowstr"},{"name":"cowstr"}],"output":{"name":"bool"}}],[11,"hash","","",341,null],[11,"clone","","",341,{"inputs":[{"name":"cowstr"}],"output":{"name":"cowstr"}}],[6,"Target","iron::headers","",null,null],[11,"deref","hyper::header","",341,{"inputs":[{"name":"cowstr"}],"output":{"name":"cow"}}],[11,"fmt","","",341,{"inputs":[{"name":"cowstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",341,{"inputs":[{"name":"cowstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref_mut","","",341,{"inputs":[{"name":"cowstr"}],"output":{"name":"cow"}}],[11,"as_ref","","",341,{"inputs":[{"name":"cowstr"}],"output":{"name":"str"}}],[11,"into_inner","hyper::http","Unwraps this HttpReader and returns the underlying Reader.",342,{"inputs":[{"name":"httpreader"}],"output":{"name":"r"}}],[11,"fmt","","",342,{"inputs":[{"name":"httpreader"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",342,null],[11,"into_inner","","Unwraps the HttpWriter and returns the underlying Writer.",343,{"inputs":[{"name":"httpwriter"}],"output":{"name":"w"}}],[11,"get_ref","","Access the inner Writer.",343,{"inputs":[{"name":"httpwriter"}],"output":{"name":"w"}}],[11,"get_mut","","Access the inner Writer mutably.",343,{"inputs":[{"name":"httpwriter"}],"output":{"name":"w"}}],[11,"end","","Ends the HttpWriter, and returns the underlying Writer.",343,{"inputs":[{"name":"httpwriter"}],"output":{"name":"result"}}],[11,"write","","",343,null],[11,"flush","","",343,{"inputs":[{"name":"httpwriter"}],"output":{"name":"result"}}],[11,"fmt","","",343,{"inputs":[{"name":"httpwriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",344,{"inputs":[{"name":"incoming"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",345,{"inputs":[{"name":"rawstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",345,{"inputs":[{"name":"rawstatus"},{"name":"rawstatus"}],"output":{"name":"bool"}}],[11,"ne","","",345,{"inputs":[{"name":"rawstatus"},{"name":"rawstatus"}],"output":{"name":"bool"}}],[11,"clone","","",345,{"inputs":[{"name":"rawstatus"}],"output":{"name":"rawstatus"}}],[6,"Item","iron::headers","",null,null],[11,"next","hyper::net","",346,{"inputs":[{"name":"networkconnections"}],"output":{"name":"option"}}],[11,"from","alloc::boxed","",4,{"inputs":[{"name":"box"},{"name":"t"}],"output":{"name":"box"}}],[11,"fmt","","",4,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","iron","Is the underlying type in this trait object a T?",347,{"inputs":[{"name":"networkstream"}],"output":{"name":"bool"}}],[11,"downcast_ref","","If the underlying type is T, get a reference to the contained data.",347,{"inputs":[{"name":"networkstream"}],"output":{"name":"option"}}],[11,"downcast_mut","","If the underlying type is T, get a mutable reference to the contained\ndata.",347,{"inputs":[{"name":"networkstream"}],"output":{"name":"option"}}],[11,"downcast","","If the underlying type is T, extract it.",347,{"inputs":[{"name":"networkstream"}],"output":{"name":"result"}}],[11,"clone","hyper::net","",348,{"inputs":[{"name":"httplistener"}],"output":{"name":"httplistener"}}],[11,"http","","Start listening to an address over HTTP.",348,{"inputs":[{"name":"httplistener"},{"name":"to"}],"output":{"name":"result"}}],[11,"https","","Start listening to an address over HTTPS.",348,{"inputs":[{"name":"httplistener"},{"name":"to"},{"name":"path"},{"name":"path"}],"output":{"name":"result"}}],[11,"https_with_context","","Start listening to an address of HTTPS using the given SslContext",348,{"inputs":[{"name":"httplistener"},{"name":"to"},{"name":"sslcontext"}],"output":{"name":"result"}}],[6,"Stream","iron::headers","",null,null],[11,"accept","hyper::net","",348,{"inputs":[{"name":"httplistener"}],"output":{"name":"result"}}],[11,"local_addr","","",348,{"inputs":[{"name":"httplistener"}],"output":{"name":"result"}}],[11,"clone","","",349,{"inputs":[{"name":"clonetcpstream"}],"output":{"name":"clonetcpstream"}}],[11,"read","","",349,null],[11,"write","","",349,null],[11,"flush","","",349,{"inputs":[{"name":"clonetcpstream"}],"output":{"name":"result"}}],[11,"clone","","",350,{"inputs":[{"name":"httpstream"}],"output":{"name":"httpstream"}}],[11,"fmt","","",350,{"inputs":[{"name":"httpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",350,null],[11,"write","","",350,null],[11,"flush","","",350,{"inputs":[{"name":"httpstream"}],"output":{"name":"result"}}],[11,"peer_addr","","",350,{"inputs":[{"name":"httpstream"}],"output":{"name":"result"}}],[11,"close","","",350,{"inputs":[{"name":"httpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[6,"Stream","iron::headers","",null,null],[11,"connect","hyper::net","",351,{"inputs":[{"name":"httpconnector"},{"name":"str"},{"name":"u16"},{"name":"str"}],"output":{"name":"result"}}],[11,"set_ssl_verifier","","",351,null],[11,"new","hyper::server::request","Create a new Request, reading the StartLine and Headers so they are\nimmediately useful.",352,{"inputs":[{"name":"request"},{"name":"bufreader"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"deconstruct","","Deconstruct a Request into its constituent parts.",352,null],[11,"read","","",352,null],[11,"fmt","hyper::server::response","",353,{"inputs":[{"name":"response"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"status","","The status of this response.",353,{"inputs":[{"name":"response"}],"output":{"name":"statuscode"}}],[11,"headers","","The headers of this response.",353,{"inputs":[{"name":"response"}],"output":{"name":"headers"}}],[11,"construct","","Construct a Response from its constituent parts.",353,{"inputs":[{"name":"response"},{"name":"httpversion"},{"name":"httpwriter"},{"name":"statuscode"},{"name":"headers"}],"output":{"name":"response"}}],[11,"deconstruct","","Deconstruct this Response into its constituent parts.",353,null],[11,"new","","Creates a new Response that can be used to write to a network stream.",353,{"inputs":[{"name":"response"},{"name":"write"},{"name":"headers"}],"output":{"name":"response"}}],[11,"send","","Writes the body and ends the response.",353,null],[11,"start","","Consume this Response<Fresh>, writing the Headers and Status and creating a Response<Streaming>",353,{"inputs":[{"name":"response"}],"output":{"name":"result"}}],[11,"status_mut","","Get a mutable reference to the status.",353,{"inputs":[{"name":"response"}],"output":{"name":"statuscode"}}],[11,"headers_mut","","Get a mutable reference to the Headers.",353,{"inputs":[{"name":"response"}],"output":{"name":"headers"}}],[11,"end","","Flushes all writing of a response to the client.",353,{"inputs":[{"name":"response"}],"output":{"name":"result"}}],[11,"write","","",353,null],[11,"flush","","",353,{"inputs":[{"name":"response"}],"output":{"name":"result"}}],[11,"eq","","",354,{"inputs":[{"name":"body"},{"name":"body"}],"output":{"name":"bool"}}],[11,"ne","","",354,{"inputs":[{"name":"body"},{"name":"body"}],"output":{"name":"bool"}}],[11,"drop","","",353,null],[11,"new","hyper::server::listener","Create a thread pool to manage the acceptor.",355,{"inputs":[{"name":"listenerpool"},{"name":"a"}],"output":{"name":"listenerpool"}}],[11,"accept","","Runs the acceptor pool. Blocks until the acceptors are closed.",355,null],[11,"drop","","",356,null],[11,"fmt","hyper::server","",357,{"inputs":[{"name":"sslconfig"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",358,{"inputs":[{"name":"server"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new server with the provided handler.",358,{"inputs":[{"name":"server"},{"name":"h"}],"output":{"name":"server"}}],[11,"http","","Creates a new server that will handle `HttpStream`s.",358,{"inputs":[{"name":"server"},{"name":"h"}],"output":{"name":"server"}}],[11,"https","","Creates a new server that will handler `HttpStreams`s using a TLS connection.",358,{"inputs":[{"name":"server"},{"name":"h"},{"name":"path"},{"name":"path"}],"output":{"name":"server"}}],[11,"https_with_context","","Creates a new server that will handler `HttpStreams`s using a TLS connection defined by an SslContext.",358,{"inputs":[{"name":"server"},{"name":"h"},{"name":"sslcontext"}],"output":{"name":"server"}}],[11,"listen_threads","","Binds to a socket, and starts handling connections using a task pool.",358,{"inputs":[{"name":"server"},{"name":"t"},{"name":"usize"}],"output":{"name":"result"}}],[11,"listen","","Binds to a socket and starts handling connections.",358,{"inputs":[{"name":"server"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_listener","","Creates a new server that will handle `HttpStream`s.",358,{"inputs":[{"name":"server"},{"name":"l"},{"name":"usize"}],"output":{"name":"result"}}],[11,"fmt","","",359,{"inputs":[{"name":"listening"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",359,null],[11,"close","","Stop the server from listening to its socket address.",359,{"inputs":[{"name":"listening"}],"output":{"name":"result"}}],[11,"fmt","hyper::status","",360,{"inputs":[{"name":"statuscode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"canonical_reason","","Get the standardised `reason-phrase` for this status code.",360,{"inputs":[{"name":"statuscode"}],"output":{"name":"option"}}],[11,"class","","Determine the class of a status code, based on its first digit.",360,{"inputs":[{"name":"statuscode"}],"output":{"name":"statusclass"}}],[11,"is_informational","","Check if class is Informational.",360,{"inputs":[{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"is_success","","Check if class is Success.",360,{"inputs":[{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"is_redirection","","Check if class is Redirection.",360,{"inputs":[{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"is_client_error","","Check if class is ClientError.",360,{"inputs":[{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"is_server_error","","Check if class is ServerError.",360,{"inputs":[{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"is_strange_status","","Check if class is NoClass",360,{"inputs":[{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"fmt","","",360,{"inputs":[{"name":"statuscode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",360,{"inputs":[{"name":"statuscode"},{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"clone","","",360,{"inputs":[{"name":"statuscode"}],"output":{"name":"statuscode"}}],[11,"partial_cmp","","",360,{"inputs":[{"name":"statuscode"},{"name":"statuscode"}],"output":{"name":"option"}}],[11,"cmp","","",360,{"inputs":[{"name":"statuscode"},{"name":"statuscode"}],"output":{"name":"ordering"}}],[11,"cmp","","",361,{"inputs":[{"name":"statusclass"},{"name":"statusclass"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",361,{"inputs":[{"name":"statusclass"},{"name":"statusclass"}],"output":{"name":"option"}}],[11,"lt","","",361,{"inputs":[{"name":"statusclass"},{"name":"statusclass"}],"output":{"name":"bool"}}],[11,"le","","",361,{"inputs":[{"name":"statusclass"},{"name":"statusclass"}],"output":{"name":"bool"}}],[11,"gt","","",361,{"inputs":[{"name":"statusclass"},{"name":"statusclass"}],"output":{"name":"bool"}}],[11,"ge","","",361,{"inputs":[{"name":"statusclass"},{"name":"statusclass"}],"output":{"name":"bool"}}],[11,"eq","","",361,{"inputs":[{"name":"statusclass"},{"name":"statusclass"}],"output":{"name":"bool"}}],[11,"ne","","",361,{"inputs":[{"name":"statusclass"},{"name":"statusclass"}],"output":{"name":"bool"}}],[11,"clone","","",361,{"inputs":[{"name":"statusclass"}],"output":{"name":"statusclass"}}],[11,"fmt","","",361,{"inputs":[{"name":"statusclass"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default_code","","Get the default status code for the class.",361,{"inputs":[{"name":"statusclass"}],"output":{"name":"statuscode"}}],[11,"clone","hyper::uri","",362,{"inputs":[{"name":"requesturi"}],"output":{"name":"requesturi"}}],[11,"eq","","",362,{"inputs":[{"name":"requesturi"},{"name":"requesturi"}],"output":{"name":"bool"}}],[11,"ne","","",362,{"inputs":[{"name":"requesturi"},{"name":"requesturi"}],"output":{"name":"bool"}}],[11,"fmt","","",362,{"inputs":[{"name":"requesturi"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","iron::headers","",null,null],[11,"from_str","hyper::uri","",362,{"inputs":[{"name":"requesturi"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","hyper::version","",363,{"inputs":[{"name":"httpversion"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",363,null],[11,"cmp","","",363,{"inputs":[{"name":"httpversion"},{"name":"httpversion"}],"output":{"name":"ordering"}}],[11,"clone","","",363,{"inputs":[{"name":"httpversion"}],"output":{"name":"httpversion"}}],[11,"partial_cmp","","",363,{"inputs":[{"name":"httpversion"},{"name":"httpversion"}],"output":{"name":"option"}}],[11,"lt","","",363,{"inputs":[{"name":"httpversion"},{"name":"httpversion"}],"output":{"name":"bool"}}],[11,"le","","",363,{"inputs":[{"name":"httpversion"},{"name":"httpversion"}],"output":{"name":"bool"}}],[11,"gt","","",363,{"inputs":[{"name":"httpversion"},{"name":"httpversion"}],"output":{"name":"bool"}}],[11,"ge","","",363,{"inputs":[{"name":"httpversion"},{"name":"httpversion"}],"output":{"name":"bool"}}],[11,"eq","","",363,{"inputs":[{"name":"httpversion"},{"name":"httpversion"}],"output":{"name":"bool"}}],[11,"ne","","",363,{"inputs":[{"name":"httpversion"},{"name":"httpversion"}],"output":{"name":"bool"}}],[11,"fmt","","",363,{"inputs":[{"name":"httpversion"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"Headers","iron::headers","A map of header fields on requests and responses.",null,null],[3,"HeadersItems","","An `Iterator` over the fields in a `Headers` map.",null,null],[3,"HeaderView","","Returned with the `HeadersItems` iterator.",null,null],[3,"HeaderFormatter","","A wrapper around any Header with a Display impl that calls fmt_header.",null,null],[4,"CacheDirective","","CacheControl contains a list of these directives.",null,null],[13,"NoCache","","\"no-cache\"",149,null],[13,"NoStore","","\"no-store\"",149,null],[13,"NoTransform","","\"no-transform\"",149,null],[13,"OnlyIfCached","","\"only-if-cached\"",149,null],[13,"MaxAge","","\"max-age=delta\"",149,null],[13,"MaxStale","","\"max-stale=delta\"",149,null],[13,"MinFresh","","\"min-fresh=delta\"",149,null],[13,"MustRevalidate","","\"must-revalidate\"",149,null],[13,"Public","","\"public\"",149,null],[13,"Private","","\"private\"",149,null],[13,"ProxyRevalidate","","\"proxy-revalidate\"",149,null],[13,"SMaxAge","","\"s-maxage=delta\"",149,null],[13,"Extension","","Extension directives. Optionally include an argument.",149,null],[4,"ProtocolName","","A protocol name used to identify a spefic protocol. Names are case-sensitive\nexcept for the `WebSocket` value.",null,null],[13,"Http","","`HTTP` value, Hypertext Transfer Protocol",182,null],[13,"Tls","","`TLS` value, Transport Layer Security [RFC2817](http://tools.ietf.org/html/rfc2817)",182,null],[13,"WebSocket","","`WebSocket` value, matched case insensitively,Web Socket Protocol\n[RFC6455](http://tools.ietf.org/html/rfc6455)",182,null],[13,"H2c","","`h2c` value, HTTP/2 over cleartext TCP",182,null],[13,"Unregistered","","Any other protocol name not known to hyper",182,null],[3,"Server","","`Server` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-7.4.2)",null,null],[4,"Charset","","A Mime charset.",null,null],[13,"Us_Ascii","","US ASCII",332,null],[13,"Iso_8859_1","","ISO-8859-1",332,null],[13,"Iso_8859_2","","ISO-8859-2",332,null],[13,"Iso_8859_3","","ISO-8859-3",332,null],[13,"Iso_8859_4","","ISO-8859-4",332,null],[13,"Iso_8859_5","","ISO-8859-5",332,null],[13,"Iso_8859_6","","ISO-8859-6",332,null],[13,"Iso_8859_7","","ISO-8859-7",332,null],[13,"Iso_8859_8","","ISO-8859-8",332,null],[13,"Iso_8859_9","","ISO-8859-9",332,null],[13,"Iso_8859_10","","ISO-8859-10",332,null],[13,"Shift_Jis","","Shift_JIS",332,null],[13,"Euc_Jp","","EUC-JP",332,null],[13,"Iso_2022_Kr","","ISO-2022-KR",332,null],[13,"Euc_Kr","","EUC-KR",332,null],[13,"Iso_2022_Jp","","ISO-2022-JP",332,null],[13,"Iso_2022_Jp_2","","ISO-2022-JP-2",332,null],[13,"Iso_8859_6_E","","ISO-8859-6-E",332,null],[13,"Iso_8859_6_I","","ISO-8859-6-I",332,null],[13,"Iso_8859_8_E","","ISO-8859-8-E",332,null],[13,"Iso_8859_8_I","","ISO-8859-8-I",332,null],[13,"Gb2312","","GB2312",332,null],[13,"Big5","","Big5",332,null],[13,"Koi8_R","","KOI8-R",332,null],[13,"Ext","","An arbitrary charset specified as a string",332,null],[3,"EntityTag","","An entity tag, defined in [RFC7232](https://tools.ietf.org/html/rfc7232#section-2.3)",null,null],[12,"weak","","Weakness indicator for the tag",164,null],[3,"IfUnmodifiedSince","","`If-Unmodified-Since` header, defined in\n[RFC7232](http://tools.ietf.org/html/rfc7232#section-3.4)",null,null],[3,"AcceptRanges","","`Accept-Ranges` header, defined in\n[RFC7233](http://tools.ietf.org/html/rfc7233#section-2.3)",null,null],[8,"Scheme","","An Authorization scheme to be used in the header.",null,null],[10,"scheme","","An optional Scheme name.",364,{"inputs":[{"name":"scheme"}],"output":{"name":"option"}}],[10,"fmt_scheme","","Format the Scheme data into a header value.",364,{"inputs":[{"name":"scheme"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"TransferEncoding","","`Transfer-Encoding` header, defined in\n[RFC7230](http://tools.ietf.org/html/rfc7230#section-3.3.1)",null,null],[3,"UserAgent","","`User-Agent` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.5.3)",null,null],[4,"IfMatch","","`If-Match` header, defined in\n[RFC7232](https://tools.ietf.org/html/rfc7232#section-3.1)",null,null],[13,"Any","","Any value is a match",169,null],[13,"Items","","Only the listed items are a match",169,null],[3,"ETag","","`ETag` header, defined in [RFC7232](http://tools.ietf.org/html/rfc7232#section-2.3)",null,null],[4,"Vary","","`Vary` header, defined in [RFC7231](https://tools.ietf.org/html/rfc7231#section-7.1.4)",null,null],[13,"Any","","Any value is a match",185,null],[13,"Items","","Only the listed items are a match",185,null],[3,"Quality","","Represents a quality used in quality values.",null,null],[3,"AcceptLanguage","","`Accept-Language` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.3.5)",null,null],[3,"AccessControlRequestMethod","","`Access-Control-Request-Method` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-request-method-request-header)",null,null],[3,"ContentLanguage","","`Content-Language` header, defined in\n[RFC7231](https://tools.ietf.org/html/rfc7231#section-3.1.3.2)",null,null],[5,"qitem","","Convinience function to wrap a value in a `QualityItem`\nSets `q` to the default 1.0",null,{"inputs":[{"name":"t"}],"output":{"name":"qualityitem"}}],[3,"AccessControlAllowMethods","","`Access-Control-Allow-Methods` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-allow-methods-response-header)",null,null],[3,"From","","`From` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-5.5.1)",null,null],[3,"Cookie","","`Cookie` header, defined in [RFC6265](http://tools.ietf.org/html/rfc6265#section-5.4)",null,null],[3,"Expires","","`Expires` header, defined in [RFC7234](http://tools.ietf.org/html/rfc7234#section-5.3)",null,null],[3,"LastModified","","`Last-Modified` header, defined in\n[RFC7232](http://tools.ietf.org/html/rfc7232#section-2.2)",null,null],[4,"Expect","","The `Expect` header.",null,null],[13,"Continue","","The value `100-continue`.",165,null],[5,"q","","Convenience function to create a `Quality` fromt a float.",null,{"inputs":[{"name":"f32"}],"output":{"name":"quality"}}],[4,"Encoding","","A value to represent an encoding used in `Transfer-Encoding`\nor `Accept-Encoding` header.",null,null],[13,"Chunked","","The `chunked` encoding.",333,null],[13,"Gzip","","The `gzip` encoding.",333,null],[13,"Deflate","","The `deflate` encoding.",333,null],[13,"Compress","","The `compress` encoding.",333,null],[13,"Identity","","The `identity` encoding.",333,null],[13,"EncodingExt","","Some other encoding that is less common, can be any String.",333,null],[3,"Connection","","`Connection` header, defined in\n[RFC7230](http://tools.ietf.org/html/rfc7230#section-6.1)",null,null],[3,"QualityItem","","Represents an item with a quality value as defined in\n[RFC7231](https://tools.ietf.org/html/rfc7231#section-5.3.1).",null,null],[12,"item","","The actual contents of the field.",337,null],[12,"quality","","The quality (client or server preference) for the value.",337,null],[4,"IfRange","","`If-Range` header, defined in [RFC7233](http://tools.ietf.org/html/rfc7233#section-3.2)",null,null],[13,"EntityTag","","The entity-tag the client has of the resource",172,null],[13,"Date","","The date when the client retrieved the resource",172,null],[3,"Date","","`Date` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-7.1.1.2)",null,null],[3,"AcceptEncoding","","`Accept-Encoding` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.3.4)",null,null],[3,"ContentLength","","`Content-Length` header, defined in\n[RFC7230](http://tools.ietf.org/html/rfc7230#section-3.3.2)",null,null],[4,"ConnectionOption","","Values that can be in the `Connection` header.",null,null],[13,"KeepAlive","","The `keep-alive` connection value.",151,null],[13,"Close","","The `close` connection value.",151,null],[13,"ConnectionHeader","","Values in the Connection header that are supposed to be names of other Headers.",151,null],[3,"ContentEncoding","","`Content-Encoding` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-3.1.2.2)",null,null],[3,"ContentType","","`Content-Type` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-3.1.1.5)",null,null],[3,"Language","","A language tag.\nSee http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.10",null,null],[12,"primary","","The language tag",335,null],[12,"sub","","A language subtag or country code",335,null],[3,"IfModifiedSince","","`If-Modified-Since` header, defined in\n[RFC7232](http://tools.ietf.org/html/rfc7232#section-3.3)",null,null],[3,"AccessControlAllowHeaders","","`Access-Control-Allow-Headers` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-allow-headers-response-header)",null,null],[3,"Allow","","`Allow` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-7.4.1)",null,null],[3,"Upgrade","","`Upgrade` header, defined in [RFC7230](http://tools.ietf.org/html/rfc7230#section-6.7)",null,null],[4,"AccessControlAllowOrigin","","The `Access-Control-Allow-Origin` response header,\npart of [CORS](http://www.w3.org/TR/cors/#access-control-allow-origin-response-header)",null,null],[13,"Any","","Allow all origins",136,null],[13,"Null","","A hidden origin",136,null],[13,"Value","","Allow one particular origin",136,null],[3,"Protocol","","Protocols that appear in the `Upgrade` header field",null,null],[12,"name","","The protocol identifier",183,null],[12,"version","","The optional version of the protocol, often in the format \"DIGIT.DIGIT\" (e.g.. \"1.2\")",183,null],[3,"Accept","","`Accept` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-5.3.2)",null,null],[3,"CacheControl","","`Cache-Control` header, defined in [RFC7234](https://tools.ietf.org/html/rfc7234#section-5.2)",null,null],[3,"Basic","","Credential holder for Basic Authentication",null,null],[12,"username","","The username as a possibly empty string",147,null],[12,"password","","The password. `None` if the `:` delimiter character was not\npart of the parsed input.",147,null],[3,"Authorization","","`Authorization` header, defined in [RFC7235](https://tools.ietf.org/html/rfc7235#section-4.2)",null,null],[3,"HttpDate","","A `time::Time` with HTTP formatting and parsing",null,null],[3,"Host","","The `Host` header.",null,null],[12,"hostname","","The hostname, such a example.domain.",168,null],[12,"port","","An optional port number.",168,null],[4,"IfNoneMatch","","`If-None-Match` header, defined in\n[RFC7232](https://tools.ietf.org/html/rfc7232#section-3.2)",null,null],[13,"Any","","Any value is a match",171,null],[13,"Items","","Only the listed items are a match",171,null],[3,"AcceptCharset","","`Accept-Charset` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.3.3)",null,null],[3,"AccessControlMaxAge","","`Access-Control-Max-Age` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-max-age-response-header)",null,null],[3,"Location","","`Location` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-7.1.2)",null,null],[3,"Referer","","`Referer` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.5.2)",null,null],[4,"Pragma","","The `Pragma` header defined by HTTP/1.0.",null,null],[13,"NoCache","","Corresponds to the `no-cache` value.",176,null],[13,"Ext","","Every value other than `no-cache`.",176,null],[3,"AccessControlRequestHeaders","","`Access-Control-Request-Headers` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-request-headers-request-header)",null,null],[3,"SetCookie","","`Set-Cookie` header, defined [RFC6265](http://tools.ietf.org/html/rfc6265#section-4.1)",null,null],[3,"Headers","iron","A map of header fields on requests and responses.",null,null],[8,"Plugin","","An interface for plugins that cache values between calls.",null,null],[11,"get","","Return a copy of the plugin's produced value.",365,{"inputs":[{"name":"plugin"}],"output":{"name":"result"}}],[11,"get_ref","","Return a reference to the plugin's produced value.",365,{"inputs":[{"name":"plugin"}],"output":{"name":"result"}}],[11,"get_mut","","Return a mutable reference to the plugin's produced value.",365,{"inputs":[{"name":"plugin"}],"output":{"name":"result"}}],[11,"compute","","Create and evaluate a once-off instance of a plugin.",365,{"inputs":[{"name":"plugin"}],"output":{"name":"result"}}],[8,"Set","","A trait providing the set and set_mut methods for all types.",null,null],[11,"set","","Modify self using the provided modifier.",366,{"inputs":[{"name":"set"},{"name":"m"}],"output":{"name":"self"}}],[11,"set_mut","","Modify self through a mutable reference with the provided modifier.",366,{"inputs":[{"name":"set"},{"name":"m"}],"output":{"name":"self"}}],[8,"Error","","An extension to std::error::Error which provides dynamic downcasting of\nerrors for use in highly generic contexts.",null,null],[0,"mime","","Re-exporting the mime crate, for convenience.",null,null],[4,"SubLevel","iron::mime","",null,null],[13,"Star","","",159,null],[13,"Plain","","",159,null],[13,"Html","","",159,null],[13,"Xml","","",159,null],[13,"Javascript","","",159,null],[13,"Css","","",159,null],[13,"Json","","",159,null],[13,"WwwFormUrlEncoded","","",159,null],[13,"FormData","","",159,null],[13,"Png","","",159,null],[13,"Gif","","",159,null],[13,"Bmp","","",159,null],[13,"Jpeg","","",159,null],[13,"Ext","","",159,null],[6,"Param","","",null,null],[4,"Value","","",null,null],[13,"Utf8","","",161,null],[13,"Ext","","",161,null],[3,"Mime","","Mime, or Media Type. Encapsulates common registers types.",null,null],[4,"Attr","","",null,null],[13,"Charset","","",160,null],[13,"Q","","",160,null],[13,"Ext","","",160,null],[4,"TopLevel","","",null,null],[13,"Star","","",158,null],[13,"Text","","",158,null],[13,"Image","","",158,null],[13,"Audio","","",158,null],[13,"Video","","",158,null],[13,"Application","","",158,null],[13,"Multipart","","",158,null],[13,"Message","","",158,null],[13,"Model","","",158,null],[13,"Ext","","",158,null],[3,"Url","iron","HTTP/HTTPS URL type for Iron.",null,null],[12,"scheme","","The lower-cased scheme of the URL, typically \"http\" or \"https\".",367,null],[12,"host","","The host field of the URL, probably a domain.",367,null],[12,"port","","The connection port.",367,null],[12,"path","","The URL path, the resource to be accessed.",367,null],[12,"username","","The URL username field, from the userinfo section of the URL.",367,null],[12,"password","","The URL password field, from the userinfo section of the URL.",367,null],[12,"query","","The URL query string.",367,null],[12,"fragment","","The URL fragment.",367,null],[3,"Iron","","The primary entrance point to `Iron`, a `struct` to instantiate a new server.",null,null],[12,"handler","","Iron contains a `Handler`, which it uses to create responses for client\nrequests.",368,null],[12,"addr","","Once listening, the local address that this server is bound to.",368,null],[12,"protocol","","Once listening, the protocol used to serve content.",368,null],[4,"Protocol","","Protocol used to serve content. Future versions of Iron may add new protocols\nto this enum. Thus you should not exhaustively match on its variants.",null,null],[13,"Http","","Plaintext HTTP/1",369,null],[13,"Https","","HTTP/1 over SSL/TLS",369,null],[12,"certificate","iron::Protocol","Path to SSL certificate file",369,null],[12,"key","","Path to SSL private key file",369,null],[0,"error","iron","Iron's error type and associated utilities.",null,null],[8,"Error","iron::error","An extension to std::error::Error which provides dynamic downcasting of\nerrors for use in highly generic contexts.",null,null],[4,"HttpError","","A set of errors that can occur parsing HTTP streams.",null,null],[13,"Method","","An invalid `Method`, such as `GE,T`.",23,null],[13,"Uri","","An invalid `RequestUri`, such as `exam ple.domain`.",23,null],[13,"Version","","An invalid `HttpVersion`, such as `HTP/1.1`",23,null],[13,"Header","","An invalid `Header`.",23,null],[13,"TooLarge","","A message head is too large to be reasonable.",23,null],[13,"Status","","An invalid `Status`, such as `1337 ELITE`.",23,null],[13,"Io","","An `io::Error` that occurred while trying to read or write to a network stream.",23,null],[13,"Ssl","","An error from the `openssl` library.",23,null],[6,"HttpResult","","",null,null],[3,"IronError","","The type of Errors inside and when using Iron.",null,null],[12,"error","","The underlying error",370,null],[12,"response","","What to do about this error.",370,null],[11,"fmt","","",370,{"inputs":[{"name":"ironerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new IronError from an error and a modifier.",370,{"inputs":[{"name":"ironerror"},{"name":"e"},{"name":"m"}],"output":{"name":"ironerror"}}],[11,"fmt","","",370,{"inputs":[{"name":"ironerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",370,{"inputs":[{"name":"ironerror"}],"output":{"name":"str"}}],[11,"cause","","",370,{"inputs":[{"name":"ironerror"}],"output":{"name":"option"}}],[0,"prelude","iron","A module meant to be glob imported when using Iron, for instance:",null,null],[8,"Set","iron::prelude","A trait providing the set and set_mut methods for all types.",null,null],[11,"set","","Modify self using the provided modifier.",366,{"inputs":[{"name":"set"},{"name":"m"}],"output":{"name":"self"}}],[11,"set_mut","","Modify self through a mutable reference with the provided modifier.",366,{"inputs":[{"name":"set"},{"name":"m"}],"output":{"name":"self"}}],[8,"Pluggable","","An interface for plugins that cache values between calls.",null,null],[11,"get","","Return a copy of the plugin's produced value.",365,{"inputs":[{"name":"pluggable"}],"output":{"name":"result"}}],[11,"get_ref","","Return a reference to the plugin's produced value.",365,{"inputs":[{"name":"pluggable"}],"output":{"name":"result"}}],[11,"get_mut","","Return a mutable reference to the plugin's produced value.",365,{"inputs":[{"name":"pluggable"}],"output":{"name":"result"}}],[11,"compute","","Create and evaluate a once-off instance of a plugin.",365,{"inputs":[{"name":"pluggable"}],"output":{"name":"result"}}],[0,"typemap","iron","Re-exports from the TypeMap crate.",null,null],[3,"TypeMap","iron::typemap","A map keyed by types.",null,null],[8,"Key","","This trait defines the relationship between keys and values in a TypeMap.",null,null],[16,"Value","","The value type associated with this key type.",371,null],[0,"modifier","iron","Re-exports from the Modifier crate.",null,null],[0,"status","","Status Codes",null,null],[4,"Status","iron::status","An HTTP status code (`status-code` in RFC 7230 et al.).",null,null],[13,"Continue","","100 Continue\n[[RFC7231, Section 6.2.1](https://tools.ietf.org/html/rfc7231#section-6.2.1)]",360,null],[13,"SwitchingProtocols","","101 Switching Protocols\n[[RFC7231, Section 6.2.2](https://tools.ietf.org/html/rfc7231#section-6.2.2)]",360,null],[13,"Processing","","102 Processing\n[[RFC2518](https://tools.ietf.org/html/rfc2518)]",360,null],[13,"Ok","","200 OK\n[[RFC7231, Section 6.3.1](https://tools.ietf.org/html/rfc7231#section-6.3.1)]",360,null],[13,"Created","","201 Created\n[[RFC7231, Section 6.3.2](https://tools.ietf.org/html/rfc7231#section-6.3.2)]",360,null],[13,"Accepted","","202 Accepted\n[[RFC7231, Section 6.3.3](https://tools.ietf.org/html/rfc7231#section-6.3.3)]",360,null],[13,"NonAuthoritativeInformation","","203 Non-Authoritative Information\n[[RFC7231, Section 6.3.4](https://tools.ietf.org/html/rfc7231#section-6.3.4)]",360,null],[13,"NoContent","","204 No Content\n[[RFC7231, Section 6.3.5](https://tools.ietf.org/html/rfc7231#section-6.3.5)]",360,null],[13,"ResetContent","","205 Reset Content\n[[RFC7231, Section 6.3.6](https://tools.ietf.org/html/rfc7231#section-6.3.6)]",360,null],[13,"PartialContent","","206 Partial Content\n[[RFC7233, Section 4.1](https://tools.ietf.org/html/rfc7233#section-4.1)]",360,null],[13,"MultiStatus","","207 Multi-Status\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",360,null],[13,"AlreadyReported","","208 Already Reported\n[[RFC5842](https://tools.ietf.org/html/rfc5842)]",360,null],[13,"ImUsed","","226 IM Used\n[[RFC3229](https://tools.ietf.org/html/rfc3229)]",360,null],[13,"MultipleChoices","","300 Multiple Choices\n[[RFC7231, Section 6.4.1](https://tools.ietf.org/html/rfc7231#section-6.4.1)]",360,null],[13,"MovedPermanently","","301 Moved Permanently\n[[RFC7231, Section 6.4.2](https://tools.ietf.org/html/rfc7231#section-6.4.2)]",360,null],[13,"Found","","302 Found\n[[RFC7231, Section 6.4.3](https://tools.ietf.org/html/rfc7231#section-6.4.3)]",360,null],[13,"SeeOther","","303 See Other\n[[RFC7231, Section 6.4.4](https://tools.ietf.org/html/rfc7231#section-6.4.4)]",360,null],[13,"NotModified","","304 Not Modified\n[[RFC7232, Section 4.1](https://tools.ietf.org/html/rfc7232#section-4.1)]",360,null],[13,"UseProxy","","305 Use Proxy\n[[RFC7231, Section 6.4.5](https://tools.ietf.org/html/rfc7231#section-6.4.5)]",360,null],[13,"TemporaryRedirect","","307 Temporary Redirect\n[[RFC7231, Section 6.4.7](https://tools.ietf.org/html/rfc7231#section-6.4.7)]",360,null],[13,"PermanentRedirect","","308 Permanent Redirect\n[[RFC7238](https://tools.ietf.org/html/rfc7238)]",360,null],[13,"BadRequest","","400 Bad Request\n[[RFC7231, Section 6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)]",360,null],[13,"Unauthorized","","401 Unauthorized\n[[RFC7235, Section 3.1](https://tools.ietf.org/html/rfc7235#section-3.1)]",360,null],[13,"PaymentRequired","","402 Payment Required\n[[RFC7231, Section 6.5.2](https://tools.ietf.org/html/rfc7231#section-6.5.2)]",360,null],[13,"Forbidden","","403 Forbidden\n[[RFC7231, Section 6.5.3](https://tools.ietf.org/html/rfc7231#section-6.5.3)]",360,null],[13,"NotFound","","404 Not Found\n[[RFC7231, Section 6.5.4](https://tools.ietf.org/html/rfc7231#section-6.5.4)]",360,null],[13,"MethodNotAllowed","","405 Method Not Allowed\n[[RFC7231, Section 6.5.5](https://tools.ietf.org/html/rfc7231#section-6.5.5)]",360,null],[13,"NotAcceptable","","406 Not Acceptable\n[[RFC7231, Section 6.5.6](https://tools.ietf.org/html/rfc7231#section-6.5.6)]",360,null],[13,"ProxyAuthenticationRequired","","407 Proxy Authentication Required\n[[RFC7235, Section 3.2](https://tools.ietf.org/html/rfc7235#section-3.2)]",360,null],[13,"RequestTimeout","","408 Request Timeout\n[[RFC7231, Section 6.5.7](https://tools.ietf.org/html/rfc7231#section-6.5.7)]",360,null],[13,"Conflict","","409 Conflict\n[[RFC7231, Section 6.5.8](https://tools.ietf.org/html/rfc7231#section-6.5.8)]",360,null],[13,"Gone","","410 Gone\n[[RFC7231, Section 6.5.9](https://tools.ietf.org/html/rfc7231#section-6.5.9)]",360,null],[13,"LengthRequired","","411 Length Required\n[[RFC7231, Section 6.5.10](https://tools.ietf.org/html/rfc7231#section-6.5.10)]",360,null],[13,"PreconditionFailed","","412 Precondition Failed\n[[RFC7232, Section 4.2](https://tools.ietf.org/html/rfc7232#section-4.2)]",360,null],[13,"PayloadTooLarge","","413 Payload Too Large\n[[RFC7231, Section 6.5.11](https://tools.ietf.org/html/rfc7231#section-6.5.11)]",360,null],[13,"UriTooLong","","414 URI Too Long\n[[RFC7231, Section 6.5.12](https://tools.ietf.org/html/rfc7231#section-6.5.12)]",360,null],[13,"UnsupportedMediaType","","415 Unsupported Media Type\n[[RFC7231, Section 6.5.13](https://tools.ietf.org/html/rfc7231#section-6.5.13)]",360,null],[13,"RangeNotSatisfiable","","416 Range Not Satisfiable\n[[RFC7233, Section 4.4](https://tools.ietf.org/html/rfc7233#section-4.4)]",360,null],[13,"ExpectationFailed","","417 Expectation Failed\n[[RFC7231, Section 6.5.14](https://tools.ietf.org/html/rfc7231#section-6.5.14)]",360,null],[13,"ImATeapot","","418 I'm a teapot\n[curiously, not registered by IANA, but [RFC2324](https://tools.ietf.org/html/rfc2324)]",360,null],[13,"UnprocessableEntity","","422 Unprocessable Entity\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",360,null],[13,"Locked","","423 Locked\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",360,null],[13,"FailedDependency","","424 Failed Dependency\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",360,null],[13,"UpgradeRequired","","426 Upgrade Required\n[[RFC7231, Section 6.5.15](https://tools.ietf.org/html/rfc7231#section-6.5.15)]",360,null],[13,"PreconditionRequired","","428 Precondition Required\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",360,null],[13,"TooManyRequests","","429 Too Many Requests\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",360,null],[13,"RequestHeaderFieldsTooLarge","","431 Request Header Fields Too Large\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",360,null],[13,"InternalServerError","","500 Internal Server Error\n[[RFC7231, Section 6.6.1](https://tools.ietf.org/html/rfc7231#section-6.6.1)]",360,null],[13,"NotImplemented","","501 Not Implemented\n[[RFC7231, Section 6.6.2](https://tools.ietf.org/html/rfc7231#section-6.6.2)]",360,null],[13,"BadGateway","","502 Bad Gateway\n[[RFC7231, Section 6.6.3](https://tools.ietf.org/html/rfc7231#section-6.6.3)]",360,null],[13,"ServiceUnavailable","","503 Service Unavailable\n[[RFC7231, Section 6.6.4](https://tools.ietf.org/html/rfc7231#section-6.6.4)]",360,null],[13,"GatewayTimeout","","504 Gateway Timeout\n[[RFC7231, Section 6.6.5](https://tools.ietf.org/html/rfc7231#section-6.6.5)]",360,null],[13,"HttpVersionNotSupported","","505 HTTP Version Not Supported\n[[RFC7231, Section 6.6.6](https://tools.ietf.org/html/rfc7231#section-6.6.6)]",360,null],[13,"VariantAlsoNegotiates","","506 Variant Also Negotiates\n[[RFC2295](https://tools.ietf.org/html/rfc2295)]",360,null],[13,"InsufficientStorage","","507 Insufficient Storage\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",360,null],[13,"LoopDetected","","508 Loop Detected\n[[RFC5842](https://tools.ietf.org/html/rfc5842)]",360,null],[13,"NotExtended","","510 Not Extended\n[[RFC2774](https://tools.ietf.org/html/rfc2774)]",360,null],[13,"NetworkAuthenticationRequired","","511 Network Authentication Required\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",360,null],[13,"Unregistered","","A status code not in the IANA HTTP status code registry or very well known",360,null],[0,"method","iron","HTTP Methods",null,null],[4,"Method","iron::method","The Request Method (VERB)",null,null],[13,"Options","","OPTIONS",24,null],[13,"Get","","GET",24,null],[13,"Post","","POST",24,null],[13,"Put","","PUT",24,null],[13,"Delete","","DELETE",24,null],[13,"Head","","HEAD",24,null],[13,"Trace","","TRACE",24,null],[13,"Connect","","CONNECT",24,null],[13,"Patch","","PATCH",24,null],[13,"Extension","","Method extensions. An example would be `let m = Extension(\"FOO\".to_string())`.",24,null],[0,"middleware","iron","Iron's Middleware and Handler System",null,null],[3,"Chain","iron::middleware","The middleware chain used in Iron.",null,null],[8,"Handler","","`Handler`s are responsible for handling requests by creating Responses from Requests.",null,null],[10,"handle","","Produce a `Response` from a Request, with the possibility of error.",372,{"inputs":[{"name":"handler"},{"name":"request"}],"output":{"name":"ironresult"}}],[8,"BeforeMiddleware","","`BeforeMiddleware` are fired before a `Handler` is called inside of a Chain.",null,null],[11,"before","","Do whatever work this middleware should do with a `Request` object.",373,{"inputs":[{"name":"beforemiddleware"},{"name":"request"}],"output":{"name":"ironresult"}}],[11,"catch","","Respond to an error thrown by a previous `BeforeMiddleware`.",373,{"inputs":[{"name":"beforemiddleware"},{"name":"request"},{"name":"ironerror"}],"output":{"name":"ironresult"}}],[8,"AfterMiddleware","","`AfterMiddleware` are fired after a `Handler` is called inside of a Chain.",null,null],[11,"after","","Do whatever post-processing this middleware should do.",374,{"inputs":[{"name":"aftermiddleware"},{"name":"request"},{"name":"response"}],"output":{"name":"ironresult"}}],[11,"catch","","Respond to an error thrown by previous `AfterMiddleware`, the `Handler`,\nor a `BeforeMiddleware`.",374,{"inputs":[{"name":"aftermiddleware"},{"name":"request"},{"name":"ironerror"}],"output":{"name":"ironresult"}}],[8,"AroundMiddleware","","AroundMiddleware are used to wrap and replace the `Handler` in a `Chain`.",null,null],[10,"around","","Produce a `Handler` from this `AroundMiddleware` given another `Handler`.",375,{"inputs":[{"name":"aroundmiddleware"},{"name":"box"}],"output":{"name":"box"}}],[11,"new","","Construct a new ChainBuilder from a `Handler`.",376,{"inputs":[{"name":"chain"},{"name":"h"}],"output":{"name":"chain"}}],[11,"link","","Link both a before and after middleware to the chain at once.",376,null],[11,"link_before","","Link a `BeforeMiddleware` to the `Chain`, after all previously linked\n`BeforeMiddleware`.",376,{"inputs":[{"name":"chain"},{"name":"b"}],"output":null}],[11,"link_after","","Link a `AfterMiddleware` to the `Chain`, after all previously linked\n`AfterMiddleware`.",376,{"inputs":[{"name":"chain"},{"name":"a"}],"output":null}],[11,"around","","Apply an `AroundMiddleware` to the `Handler` in this `Chain`.",376,{"inputs":[{"name":"chain"},{"name":"a"}],"output":null}],[11,"handle","","",376,{"inputs":[{"name":"chain"},{"name":"request"}],"output":{"name":"ironresult"}}],[11,"handle","alloc::boxed","",4,{"inputs":[{"name":"box"},{"name":"request"}],"output":{"name":"ironresult"}}],[11,"before","","",4,{"inputs":[{"name":"box"},{"name":"request"}],"output":{"name":"ironresult"}}],[11,"catch","","",4,{"inputs":[{"name":"box"},{"name":"request"},{"name":"ironerror"}],"output":{"name":"ironresult"}}],[11,"after","","",4,{"inputs":[{"name":"box"},{"name":"request"},{"name":"response"}],"output":{"name":"ironresult"}}],[11,"catch","","",4,{"inputs":[{"name":"box"},{"name":"request"},{"name":"ironerror"}],"output":{"name":"ironresult"}}],[0,"response","iron","Iron's HTTP Response representation and associated methods.",null,null],[3,"HttpResponse","iron::response","The outgoing half for a Tcp connection, created by a `Server` and given to a `Handler`.",null,null],[12,"version","","The HTTP version of this response.",353,null],[3,"Response","","The response representation given to `Middleware`",null,null],[12,"status","","The response status-code.",377,null],[12,"headers","","The headers of the response.",377,null],[12,"extensions","","A TypeMap to be used as an extensible storage for data\nassociated with this Response.",377,null],[12,"body","","The body of the response.",377,null],[11,"new","","Construct a blank Response",377,{"inputs":[{"name":"response"}],"output":{"name":"response"}}],[11,"with","","Construct a Response with the specified modifier pre-applied.",377,{"inputs":[{"name":"response"},{"name":"m"}],"output":{"name":"response"}}],[11,"fmt","","",377,{"inputs":[{"name":"response"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",377,{"inputs":[{"name":"response"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"extensions","","",377,{"inputs":[{"name":"response"}],"output":{"name":"typemap"}}],[11,"extensions_mut","","",377,{"inputs":[{"name":"response"}],"output":{"name":"typemap"}}],[0,"request","iron","Iron's HTTP Request representation and associated methods.",null,null],[3,"HttpRequest","iron::request","A request bundles several parts of an incoming `NetworkStream`, given to a `Handler`.",null,null],[12,"remote_addr","","The IP address of the remote connection.",352,null],[12,"method","","The `Method`, such as `Get`, `Post`, etc.",352,null],[12,"headers","","The headers of the incoming request.",352,null],[12,"uri","","The target request-uri for this request.",352,null],[12,"version","","The version of HTTP for this request.",352,null],[3,"Request","","The `Request` given to all `Middleware`.",null,null],[12,"url","","The requested URL.",378,null],[12,"remote_addr","","The originating address of the request.",378,null],[12,"local_addr","","The local address of the request.",378,null],[12,"headers","","The request headers.",378,null],[12,"body","","The request body as a reader.",378,null],[12,"method","","The request method.",378,null],[12,"extensions","","Extensible storage for data passed between middleware.",378,null],[3,"Body","","The body of an Iron request,",null,null],[11,"fmt","iron","",367,{"inputs":[{"name":"url"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",367,{"inputs":[{"name":"url"}],"output":{"name":"url"}}],[11,"eq","","",367,{"inputs":[{"name":"url"},{"name":"url"}],"output":{"name":"bool"}}],[11,"ne","","",367,{"inputs":[{"name":"url"},{"name":"url"}],"output":{"name":"bool"}}],[11,"parse","","Create a URL from a string.",367,{"inputs":[{"name":"url"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_generic_url","","Create a `Url` from a `rust-url` `Url`.",367,{"inputs":[{"name":"url"},{"name":"url"}],"output":{"name":"result"}}],[11,"into_generic_url","","Create a `rust-url` `Url` from a `Url`.",367,{"inputs":[{"name":"url"}],"output":{"name":"url"}}],[11,"fmt","","",367,{"inputs":[{"name":"url"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","iron::request","",378,{"inputs":[{"name":"request"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_http","","Create a request from an HttpRequest.",378,{"inputs":[{"name":"request"},{"name":"httprequest"},{"name":"socketaddr"},{"name":"protocol"}],"output":{"name":"result"}}],[11,"new","","Create a new reader for use in an Iron request from a hyper HttpReader.",379,{"inputs":[{"name":"body"},{"name":"httpreader"}],"output":{"name":"body"}}],[11,"read","","",379,null],[11,"extensions","","",378,{"inputs":[{"name":"request"}],"output":{"name":"typemap"}}],[11,"extensions_mut","","",378,{"inputs":[{"name":"request"}],"output":{"name":"typemap"}}],[0,"modifiers","iron","Defines a series of convenience modifiers for editing Responses",null,null],[3,"Header","iron::modifiers","A modifier for changing headers on requests and responses.",null,null],[3,"Redirect","","A modifier for creating redirect responses.",null,null],[11,"new","conduit_mime_types","",380,{"inputs":[{"name":"types"}],"output":{"name":"result"}}],[11,"get_extension","","",380,{"inputs":[{"name":"types"},{"name":"str"}],"output":{"name":"option"}}],[11,"get_mime_type","","",380,{"inputs":[{"name":"types"},{"name":"str"}],"output":{"name":"option"}}],[11,"mime_for_path","","",380,{"inputs":[{"name":"types"},{"name":"path"}],"output":{"name":"str"}}],[11,"eq","","",380,{"inputs":[{"name":"types"},{"name":"types"}],"output":{"name":"bool"}}],[11,"ne","","",380,{"inputs":[{"name":"types"},{"name":"types"}],"output":{"name":"bool"}}],[11,"clone","","",380,{"inputs":[{"name":"types"}],"output":{"name":"types"}}],[11,"fmt","","",380,{"inputs":[{"name":"types"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"modify","iron::mime","",157,{"inputs":[{"name":"mime"},{"name":"response"}],"output":null}],[11,"modify","alloc::boxed","",4,{"inputs":[{"name":"box"},{"name":"response"}],"output":null}],[11,"modify","collections::string","",99,{"inputs":[{"name":"string"},{"name":"response"}],"output":null}],[11,"modify","collections::vec","",26,{"inputs":[{"name":"vec"},{"name":"response"}],"output":null}],[11,"modify","std::fs","",381,{"inputs":[{"name":"file"},{"name":"response"}],"output":null}],[11,"modify","std::path","Set the body to the contents of the File at this path.",382,{"inputs":[{"name":"pathbuf"},{"name":"response"}],"output":null}],[11,"modify","iron::status","",360,{"inputs":[{"name":"status"},{"name":"response"}],"output":null}],[11,"modify","iron::modifiers","",383,{"inputs":[{"name":"header"},{"name":"response"}],"output":null}],[11,"modify","","",383,{"inputs":[{"name":"header"},{"name":"request"}],"output":null}],[11,"modify","","",384,{"inputs":[{"name":"redirect"},{"name":"response"}],"output":null}],[11,"clone","iron","",369,{"inputs":[{"name":"protocol"}],"output":{"name":"protocol"}}],[11,"name","","Return the name used for this protocol in a URI's scheme part.",369,{"inputs":[{"name":"protocol"}],"output":{"name":"str"}}],[11,"http","","Kick off the server process using the HTTP protocol.",368,{"inputs":[{"name":"iron"},{"name":"a"}],"output":{"name":"httpresult"}}],[11,"https","","Kick off the server process using the HTTPS protocol.",368,{"inputs":[{"name":"iron"},{"name":"a"},{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"httpresult"}}],[11,"listen_with","","Kick off the server process with X threads.",368,{"inputs":[{"name":"iron"},{"name":"a"},{"name":"usize"},{"name":"protocol"}],"output":{"name":"httpresult"}}],[11,"new","","Instantiate a new instance of `Iron`.",368,{"inputs":[{"name":"iron"},{"name":"h"}],"output":{"name":"iron"}}],[11,"handle","","",368,{"inputs":[{"name":"iron"},{"name":"httprequest"},{"name":"httpresponse"}],"output":null}],[6,"IronResult","","The Result alias used throughout Iron and in clients of Iron.",null,null]],"paths":[[3,"TypeMap"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"Box"],[8,"Header"],[8,"HeaderFormat"],[3,"Headers"],[3,"BufReader"],[3,"Config"],[3,"PoolImpl"],[4,"Scheme"],[3,"Pool"],[3,"PooledStream"],[3,"Request"],[3,"Response"],[3,"Client"],[3,"ConnAdapter"],[3,"Connector"],[3,"RequestBuilder"],[4,"Body"],[3,"Url"],[4,"RedirectPolicy"],[4,"HttpError"],[4,"Method"],[3,"Accept"],[3,"Vec"],[3,"BinaryHeap"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"BitVec"],[3,"Iter"],[3,"BitSet"],[3,"SetIter"],[3,"TwoBitPositions"],[3,"Union"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"RawItems"],[3,"Node"],[3,"Handle"],[3,"ElemsAndEdges"],[3,"MoveTraversalImpl"],[3,"AbsTraversal"],[3,"NodeSlice"],[3,"MutNodeSlice"],[3,"BTreeMap"],[3,"AbsIter"],[3,"IdRef"],[3,"PartialSearchStack"],[3,"Pusher"],[3,"SearchStack"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"Range"],[3,"RangeMut"],[4,"Entry"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"BTreeSet"],[3,"Iter"],[3,"IntoIter"],[3,"Range"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Intersection"],[3,"Union"],[3,"Rc"],[3,"Arc"],[4,"Cow"],[3,"EnumSet"],[3,"Iter"],[3,"Argument"],[3,"FormatSpec"],[4,"Alignment"],[4,"Count"],[4,"Position"],[3,"Iter"],[3,"IntoIter"],[3,"Rawlink"],[3,"LinkedList"],[3,"IterMut"],[3,"RangeFrom"],[3,"RangeTo"],[3,"Range"],[3,"ElementSwaps"],[4,"Direction"],[3,"SizeDirection"],[3,"Permutations"],[4,"DecompositionType"],[3,"Decompositions"],[4,"RecompositionState"],[3,"Recompositions"],[3,"Utf16Units"],[3,"String"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"StrSearcher"],[4,"State"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[3,"DerefString"],[3,"ParseError"],[3,"Drain"],[3,"IntoIter"],[3,"Drain"],[3,"DerefVec"],[3,"PartialVecNonZeroSized"],[3,"PartialVecZeroSized"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"VecMap"],[4,"Entry"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"Values"],[3,"Drain"],[3,"IntoIter"],[4,"Bound"],[3,"AccessControlAllowHeaders"],[3,"AccessControlAllowMethods"],[4,"AccessControlAllowOrigin"],[3,"AccessControlMaxAge"],[3,"AccessControlRequestHeaders"],[3,"AccessControlRequestMethod"],[3,"AcceptCharset"],[3,"AcceptEncoding"],[3,"AcceptLanguage"],[3,"AcceptRanges"],[4,"RangeUnit"],[3,"Allow"],[3,"Authorization"],[3,"Basic"],[3,"CacheControl"],[4,"CacheDirective"],[3,"Cookie"],[4,"ConnectionOption"],[3,"Connection"],[3,"ContentEncoding"],[3,"ContentLanguage"],[3,"ContentLength"],[3,"ContentType"],[3,"Mime"],[4,"TopLevel"],[4,"SubLevel"],[4,"Attr"],[4,"Value"],[3,"Date"],[3,"ETag"],[3,"EntityTag"],[4,"Expect"],[3,"Expires"],[3,"From"],[3,"Host"],[4,"IfMatch"],[3,"IfModifiedSince"],[4,"IfNoneMatch"],[4,"IfRange"],[3,"IfUnmodifiedSince"],[3,"LastModified"],[3,"Location"],[4,"Pragma"],[3,"Referer"],[3,"Server"],[3,"SetCookie"],[3,"TransferEncoding"],[3,"Upgrade"],[4,"ProtocolName"],[3,"Protocol"],[3,"UserAgent"],[4,"Vary"],[3,"OptCell"],[4,"Option"],[3,"Wrapping"],[3,"Big32x36"],[3,"Big8x3"],[3,"Decoded"],[4,"FullDecoded"],[3,"Fp"],[4,"Part"],[3,"Formatted"],[4,"Sign"],[4,"FpCategory"],[3,"ParseIntError"],[4,"IntErrorKind"],[3,"ParseFloatError"],[4,"FloatErrorKind"],[3,"NonZero"],[3,"Unique"],[3,"NoCopy"],[3,"PhantomData"],[3,"RangeFull"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"BorrowRefMut"],[3,"RefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[4,"EscapeUnicodeState"],[3,"EscapeDefault"],[4,"EscapeDefaultState"],[3,"Rev"],[4,"MinMaxResult"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"Unfold"],[3,"StepBy"],[3,"RangeInclusive"],[3,"Repeat"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Slice"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"i8x16"],[3,"i16x8"],[3,"i32x4"],[3,"i64x2"],[3,"u8x16"],[3,"u16x8"],[3,"u32x4"],[3,"u64x2"],[3,"f32x4"],[3,"f64x2"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"GenericSplitN"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"BytesDeref"],[3,"SplitInternal"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitNInternal"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndicesInternal"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"MatchesInternal"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"LinesAnyMap"],[3,"TwoWaySearcher"],[4,"OldSearcher"],[3,"OldMatchIndices"],[3,"CharRange"],[3,"SipHasher"],[3,"Binary"],[3,"Octal"],[3,"Decimal"],[3,"LowerHex"],[3,"UpperHex"],[3,"Radix"],[3,"RadixFmt"],[3,"PadAdapter"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugInner"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Error"],[3,"ArgumentV1"],[4,"FlagV1"],[3,"Arguments"],[3,"Formatter"],[4,"PtrMap"],[3,"PtrMapCell"],[3,"Item"],[4,"Charset"],[4,"Encoding"],[3,"HttpDate"],[3,"Language"],[3,"Quality"],[3,"QualityItem"],[3,"HeadersItems"],[3,"HeaderView"],[3,"HeaderFormatter"],[3,"CowStr"],[4,"HttpReader"],[4,"HttpWriter"],[3,"Incoming"],[3,"RawStatus"],[3,"NetworkConnections"],[8,"NetworkStream"],[4,"HttpListener"],[3,"CloneTcpStream"],[4,"HttpStream"],[3,"HttpConnector"],[3,"HttpRequest"],[3,"HttpResponse"],[4,"Body"],[3,"ListenerPool"],[3,"Sentinel"],[4,"SslConfig"],[3,"Server"],[3,"Listening"],[4,"Status"],[4,"StatusClass"],[4,"RequestUri"],[4,"HttpVersion"],[8,"Scheme"],[8,"Pluggable"],[8,"Set"],[3,"Url"],[3,"Iron"],[4,"Protocol"],[3,"IronError"],[8,"Key"],[8,"Handler"],[8,"BeforeMiddleware"],[8,"AfterMiddleware"],[8,"AroundMiddleware"],[3,"Chain"],[3,"Response"],[3,"Request"],[3,"Body"],[3,"Types"],[3,"File"],[3,"PathBuf"],[3,"Header"],[3,"Redirect"]]};
searchIndex[''] = {"items":[[0,"","","The main crate for Iron.",null,null],[11,"new","typemap","Create a new, empty TypeMap.",0,{"inputs":[{"name":"typemap"}],"output":{"name":"typemap"}}],[11,"custom","","Create a new, empty TypeMap.",0,{"inputs":[{"name":"typemap"}],"output":{"name":"typemap"}}],[11,"insert","","Insert a value into the map with a specified key type.",0,null],[11,"get","","Find a value in the map and get a reference to it.",0,{"inputs":[{"name":"typemap"}],"output":{"name":"option"}}],[11,"get_mut","","Find a value in the map and get a mutable reference to it.",0,{"inputs":[{"name":"typemap"}],"output":{"name":"option"}}],[11,"contains","","Check if a key has an associated value stored in the map.",0,{"inputs":[{"name":"typemap"}],"output":{"name":"bool"}}],[11,"remove","","Remove a value from the map.",0,{"inputs":[{"name":"typemap"}],"output":{"name":"option"}}],[11,"entry","","Get the given key's corresponding entry in the map for in-place manipulation.",0,{"inputs":[{"name":"typemap"}],"output":{"name":"entry"}}],[11,"data","","Read the underlying HashMap",0,{"inputs":[{"name":"typemap"}],"output":{"name":"hashmap"}}],[11,"data_mut","","Get a mutable reference to the underlying HashMap",0,{"inputs":[{"name":"typemap"}],"output":{"name":"hashmap"}}],[11,"len","","Get the number of values stored in the map.",0,{"inputs":[{"name":"typemap"}],"output":{"name":"usize"}}],[11,"is_empty","","Return true if the map contains no values.",0,{"inputs":[{"name":"typemap"}],"output":{"name":"bool"}}],[11,"clear","","Remove all entries from the map.",0,null],[11,"fmt","","",0,{"inputs":[{"name":"typemap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",0,{"inputs":[{"name":"typemap"}],"output":{"name":"typemap"}}],[11,"clone","","",0,{"inputs":[{"name":"typemap"}],"output":{"name":"typemap"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",1,null],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",1,null],[11,"get","","Get a reference to the entry's value.",2,null],[11,"get_mut","","Get a mutable reference to the entry's value.",2,null],[11,"into_mut","","Transform the entry into a mutable reference with the same lifetime as the map.",2,null],[11,"insert","","Set the entry's value and return the previous value.",2,null],[11,"remove","","Move the entry's value out of the map, consuming the entry.",2,null],[11,"insert","","Set the entry's value and return a mutable reference to it.",3,null],[11,"clone","alloc::boxed","",4,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone","","",4,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone","","",4,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone","","",4,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[3,"TypeMap","","A map keyed by types.",null,null],[0,"headers","","Headers container, and common header fields.",null,null],[0,"parsing","::headers","Utility functions for Header implementations.",null,null],[5,"from_one_raw_str","::headers::parsing","Reads a single raw string when parsing a header",null,null],[5,"from_comma_delimited","","Reads a comma-delimited raw header into a Vec.",null,null],[5,"from_one_comma_delimited","","Reads a comma-delimited raw string into a Vec.",null,null],[5,"fmt_comma_delimited","","Format an array into a comma-delimited string.",null,null],[8,"Header","::headers","A trait for any object that will represent a header field and value.",null,null],[10,"header_name","","Returns the name of the header field this belongs to.",5,{"inputs":[{"name":"header"}],"output":{"name":"str"}}],[10,"parse_header","","Parse a header from a raw stream of bytes.",5,null],[8,"HeaderFormat","","A trait for any object that will represent a header field and value.",null,null],[10,"fmt_header","","Format a header to be output into a TcpStream.",6,{"inputs":[{"name":"headerformat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","hyper::header","Creates a new, empty headers map.",7,{"inputs":[{"name":"headers"}],"output":{"name":"headers"}}],[11,"set","","Set a header field to the corresponding value.",7,null],[11,"get_raw","","Access the raw value of a header.",7,{"inputs":[{"name":"headers"},{"name":"str"}],"output":{"name":"option"}}],[11,"set_raw","","Set the raw value of a header, bypassing any typed headers.",7,null],[11,"remove_raw","","Remove a header set by set_raw",7,null],[11,"get","","Get a reference to the header field's value, if it exists.",7,{"inputs":[{"name":"headers"}],"output":{"name":"option"}}],[11,"get_mut","","Get a mutable reference to the header field's value, if it exists.",7,{"inputs":[{"name":"headers"}],"output":{"name":"option"}}],[11,"has","","Returns a boolean of whether a certain header is in the map.",7,{"inputs":[{"name":"headers"}],"output":{"name":"bool"}}],[11,"remove","","Removes a header from the map, if one existed.\nReturns true if a header has been removed.",7,{"inputs":[{"name":"headers"}],"output":{"name":"bool"}}],[11,"iter","","Returns an iterator over the header fields.",7,{"inputs":[{"name":"headers"}],"output":{"name":"headersitems"}}],[11,"len","","Returns the number of headers in the map.",7,{"inputs":[{"name":"headers"}],"output":{"name":"usize"}}],[11,"clear","","Remove all headers from the map.",7,null],[11,"new","hyper::buffer","",8,{"inputs":[{"name":"bufreader"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"with_capacity","","",8,{"inputs":[{"name":"bufreader"},{"name":"r"},{"name":"usize"}],"output":{"name":"bufreader"}}],[11,"get_ref","","",8,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"get_mut","","",8,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"get_buf","","",8,null],[11,"into_inner","","",8,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"read_into_buf","","",8,{"inputs":[{"name":"bufreader"}],"output":{"name":"result"}}],[11,"read","","",8,null],[11,"fill_buf","","",8,{"inputs":[{"name":"bufreader"}],"output":{"name":"result"}}],[11,"consume","","",8,null],[11,"fmt","hyper::client::pool","",9,{"inputs":[{"name":"config"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",9,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"fmt","","",10,{"inputs":[{"name":"poolimpl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",11,null],[11,"fmt","","",11,{"inputs":[{"name":"scheme"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",11,{"inputs":[{"name":"scheme"},{"name":"scheme"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"scheme"},{"name":"scheme"}],"output":{"name":"bool"}}],[11,"clone","","",11,{"inputs":[{"name":"scheme"}],"output":{"name":"scheme"}}],[11,"from","","",11,{"inputs":[{"name":"scheme"},{"name":"str"}],"output":{"name":"scheme"}}],[11,"new","","Creates a `Pool` with an `HttpConnector`.",12,{"inputs":[{"name":"pool"},{"name":"config"}],"output":{"name":"pool"}}],[11,"with_connector","","Creates a `Pool` with a specified `NetworkConnector`.",12,{"inputs":[{"name":"pool"},{"name":"config"},{"name":"c"}],"output":{"name":"pool"}}],[11,"clear_idle","","Clear all idle connections from the Pool, closing them.",12,null],[6,"Stream","::headers","",null,null],[11,"connect","hyper::client::pool","",12,{"inputs":[{"name":"pool"},{"name":"str"},{"name":"u16"},{"name":"str"}],"output":{"name":"result"}}],[11,"set_ssl_verifier","","",12,null],[11,"read","","",13,null],[11,"write","","",13,null],[11,"flush","","",13,{"inputs":[{"name":"pooledstream"}],"output":{"name":"result"}}],[11,"peer_addr","","",13,{"inputs":[{"name":"pooledstream"}],"output":{"name":"result"}}],[11,"close","","",13,{"inputs":[{"name":"pooledstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"drop","","",13,null],[11,"headers","hyper::client::request","Read the Request headers.",14,{"inputs":[{"name":"request"}],"output":{"name":"headers"}}],[11,"method","","Read the Request method.",14,{"inputs":[{"name":"request"}],"output":{"name":"method"}}],[11,"new","","Create a new client request.",14,{"inputs":[{"name":"request"},{"name":"method"},{"name":"url"}],"output":{"name":"result"}}],[11,"with_connector","","Create a new client request with a specific underlying NetworkStream.",14,{"inputs":[{"name":"request"},{"name":"method"},{"name":"url"},{"name":"c"}],"output":{"name":"result"}}],[11,"start","","Consume a Fresh Request, writing the headers and method,\nreturning a Streaming Request.",14,{"inputs":[{"name":"request"}],"output":{"name":"result"}}],[11,"headers_mut","","Get a mutable reference to the Request headers.",14,{"inputs":[{"name":"request"}],"output":{"name":"headers"}}],[11,"send","","Completes writing the request, and returns a response to read from.",14,{"inputs":[{"name":"request"}],"output":{"name":"result"}}],[11,"write","","",14,null],[11,"flush","","",14,{"inputs":[{"name":"request"}],"output":{"name":"result"}}],[11,"fmt","hyper::client::response","",15,{"inputs":[{"name":"response"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new response from a server.",15,{"inputs":[{"name":"response"},{"name":"box"}],"output":{"name":"result"}}],[11,"status_raw","","Get the raw status code and reason.",15,{"inputs":[{"name":"response"}],"output":{"name":"rawstatus"}}],[11,"into_inner","","Consumes the Request to return the NetworkStream underneath.",15,{"inputs":[{"name":"response"}],"output":{"name":"box"}}],[11,"read","","",15,null],[11,"new","hyper::client","Create a new Client.",16,{"inputs":[{"name":"client"}],"output":{"name":"client"}}],[11,"with_pool_config","","Create a new Client with a configured Pool Config.",16,{"inputs":[{"name":"client"},{"name":"config"}],"output":{"name":"client"}}],[11,"with_connector","","Create a new client with a specific connector.",16,{"inputs":[{"name":"client"},{"name":"c"}],"output":{"name":"client"}}],[11,"set_ssl_verifier","","Set the SSL verifier callback for use with OpenSSL.",16,null],[11,"set_redirect_policy","","Set the RedirectPolicy.",16,null],[11,"get","","Build a Get request.",16,{"inputs":[{"name":"client"},{"name":"u"}],"output":{"name":"requestbuilder"}}],[11,"head","","Build a Head request.",16,{"inputs":[{"name":"client"},{"name":"u"}],"output":{"name":"requestbuilder"}}],[11,"post","","Build a Post request.",16,{"inputs":[{"name":"client"},{"name":"u"}],"output":{"name":"requestbuilder"}}],[11,"put","","Build a Put request.",16,{"inputs":[{"name":"client"},{"name":"u"}],"output":{"name":"requestbuilder"}}],[11,"delete","","Build a Delete request.",16,{"inputs":[{"name":"client"},{"name":"u"}],"output":{"name":"requestbuilder"}}],[11,"request","","Build a new request using this Client.",16,{"inputs":[{"name":"client"},{"name":"method"},{"name":"u"}],"output":{"name":"requestbuilder"}}],[6,"Stream","::headers","",null,null],[11,"connect","hyper::client","",17,{"inputs":[{"name":"connadapter"},{"name":"str"},{"name":"u16"},{"name":"str"}],"output":{"name":"result"}}],[11,"set_ssl_verifier","","",17,null],[6,"Stream","::headers","",null,null],[11,"connect","hyper::client","",18,{"inputs":[{"name":"connector"},{"name":"str"},{"name":"u16"},{"name":"str"}],"output":{"name":"result"}}],[11,"set_ssl_verifier","","",18,null],[11,"body","","Set a request body to be sent.",19,{"inputs":[{"name":"requestbuilder"},{"name":"b"}],"output":{"name":"requestbuilder"}}],[11,"headers","","Add additional headers to the request.",19,{"inputs":[{"name":"requestbuilder"},{"name":"headers"}],"output":{"name":"requestbuilder"}}],[11,"header","","Add an individual new header to the request.",19,{"inputs":[{"name":"requestbuilder"},{"name":"h"}],"output":{"name":"requestbuilder"}}],[11,"send","","Execute this request and receive a Response back.",19,{"inputs":[{"name":"requestbuilder"}],"output":{"name":"result"}}],[11,"read","","",20,null],[11,"from","","",20,{"inputs":[{"name":"body"},{"name":"r"}],"output":{"name":"body"}}],[11,"into_url","url","",21,{"inputs":[{"name":"url"}],"output":{"name":"result"}}],[11,"clone","hyper::client","",22,{"inputs":[{"name":"redirectpolicy"}],"output":{"name":"redirectpolicy"}}],[11,"default","","",22,{"inputs":[{"name":"redirectpolicy"}],"output":{"name":"redirectpolicy"}}],[11,"fmt","hyper::error","",23,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",23,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",23,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"cause","","",23,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"from","","",23,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",23,{"inputs":[{"name":"error"},{"name":"parseerror"}],"output":{"name":"error"}}],[11,"from","","",23,{"inputs":[{"name":"error"},{"name":"sslerror"}],"output":{"name":"error"}}],[11,"from","","",23,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"error"}}],[11,"fmt","hyper::method","",24,{"inputs":[{"name":"method"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",24,null],[11,"eq","","",24,{"inputs":[{"name":"method"},{"name":"method"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"method"},{"name":"method"}],"output":{"name":"bool"}}],[11,"clone","","",24,{"inputs":[{"name":"method"}],"output":{"name":"method"}}],[11,"as_ref","","",24,{"inputs":[{"name":"method"}],"output":{"name":"str"}}],[11,"safe","","Whether a method is considered \"safe\", meaning the request is\nessentially read-only.",24,{"inputs":[{"name":"method"}],"output":{"name":"bool"}}],[11,"idempotent","","Whether a method is considered \"idempotent\", meaning the request has\nthe same result is executed multiple times.",24,{"inputs":[{"name":"method"}],"output":{"name":"bool"}}],[6,"Err","::headers","",null,null],[11,"from_str","hyper::method","",24,{"inputs":[{"name":"method"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",24,{"inputs":[{"name":"method"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::accept","",25,{"inputs":[{"name":"accept"},{"name":"accept"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"accept"},{"name":"accept"}],"output":{"name":"bool"}}],[11,"fmt","","",25,{"inputs":[{"name":"accept"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",25,{"inputs":[{"name":"accept"}],"output":{"name":"accept"}}],[11,"new","collections::vec","Constructs a new, empty `Vec<T>`.",26,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec<T>` with the specified capacity.",26,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec<T>` directly from the raw components of another vector.",26,null],[11,"from_raw_buf","","Creates a vector by copying the elements from a raw pointer.",26,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",26,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec<T>`. The collection may reserve more space to avoid\nfrequent reallocations.",26,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec<T>`. Does nothing if the capacity is already\nsufficient.",26,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",26,null],[11,"into_boxed_slice","","Converts the vector into Box<[T]>.",26,{"inputs":[{"name":"vec"}],"output":{"name":"box"}}],[11,"truncate","","Shorten a vector, dropping excess elements.",26,null],[11,"as_slice","","Extracts a slice containing the entire vector.",26,null],[11,"as_mut_slice","","Deprecated: use `&mut s[..]` instead.",26,null],[11,"set_len","","Sets the length of a vector.",26,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",26,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after position `i` one position to the right.",26,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after position `index` one position to the left.",26,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"retain","","Retains only the elements specified by the predicate.",26,null],[11,"push","","Appends an element to the back of a collection.",26,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it is empty.",26,{"inputs":[{"name":"vec"}],"output":{"name":"option"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",26,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items from start to end. The element range is\nremoved even if the iterator is not consumed until the end.",26,{"inputs":[{"name":"vec"},{"name":"r"}],"output":{"name":"drain"}}],[11,"clear","","Clears the vector, removing all values.",26,null],[11,"len","","Returns the number of elements in the vector.",26,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the vector contains no elements.",26,{"inputs":[{"name":"vec"}],"output":{"name":"bool"}}],[11,"map_in_place","","Converts a `Vec<T>` to a `Vec<U>` where `T` and `U` have the same\nsize and in case they are not zero-sized the same minimal alignment.",26,{"inputs":[{"name":"vec"},{"name":"f"}],"output":{"name":"vec"}}],[11,"split_off","","Splits the collection into two at the given index.",26,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",26,null],[11,"push_all","","Appends all elements in a slice to the `Vec`.",26,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",26,null],[11,"clone","collections::binary_heap","",27,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"default","","",27,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",27,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",27,{"inputs":[{"name":"binaryheap"},{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"from_vec","","Creates a `BinaryHeap` from a vector. This is sometimes called\n`heapifying` the vector.",27,{"inputs":[{"name":"binaryheap"},{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",27,{"inputs":[{"name":"binaryheap"}],"output":{"name":"iter"}}],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",27,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",27,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",27,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",27,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",27,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",27,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"push","","Pushes an item onto the binary heap.",27,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",27,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"t"}}],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",27,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"option"}}],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",27,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",27,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"len","","Returns the length of the binary heap.",27,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"is_empty","","Checks if the binary heap is empty.",27,{"inputs":[{"name":"binaryheap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",27,{"inputs":[{"name":"binaryheap"}],"output":{"name":"drain"}}],[11,"clear","","Drops all items from the binary heap.",27,null],[11,"clone","","",28,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[6,"Item","::headers","",null,null],[11,"next","collections::binary_heap","",28,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",28,null],[11,"next_back","","",28,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[6,"Item","::headers","",null,null],[11,"next","collections::binary_heap","",29,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",29,null],[11,"next_back","","",29,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[6,"Item","::headers","",null,null],[11,"next","collections::binary_heap","",30,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",30,null],[11,"next_back","","",30,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"from_iter","","",27,{"inputs":[{"name":"binaryheap"},{"name":"i"}],"output":{"name":"binaryheap"}}],[6,"Item","::headers","",null,null],[6,"IntoIter","","",null,null],[11,"into_iter","collections::binary_heap","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",27,{"inputs":[{"name":"binaryheap"}],"output":{"name":"intoiter"}}],[6,"Item","::headers","",null,null],[6,"IntoIter","","",null,null],[11,"extend","collections::binary_heap","",27,null],[6,"Output","::headers","",null,null],[11,"index","collections::bit","",31,{"inputs":[{"name":"bitvec"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"new","","Creates an empty `BitVec`.",31,{"inputs":[{"name":"bitvec"}],"output":{"name":"bitvec"}}],[11,"from_elem","","Creates a `BitVec` that holds `nbits` elements, setting each element\nto `bit`.",31,{"inputs":[{"name":"bitvec"},{"name":"usize"},{"name":"bool"}],"output":{"name":"bitvec"}}],[11,"with_capacity","","Constructs a new, empty `BitVec` with the specified capacity.",31,{"inputs":[{"name":"bitvec"},{"name":"usize"}],"output":{"name":"bitvec"}}],[11,"from_bytes","","Transforms a byte-vector into a `BitVec`. Each byte becomes eight bits,\nwith the most significant bits of each byte coming first. Each\nbit becomes `true` if equal to 1 or `false` if equal to 0.",31,null],[11,"from_fn","","Creates a `BitVec` of the specified length where the value at each index\nis `f(index)`.",31,{"inputs":[{"name":"bitvec"},{"name":"usize"},{"name":"f"}],"output":{"name":"bitvec"}}],[11,"get","","Retrieves the value at index `i`, or `None` if the index is out of bounds.",31,{"inputs":[{"name":"bitvec"},{"name":"usize"}],"output":{"name":"option"}}],[11,"set","","Sets the value of a bit at an index `i`.",31,null],[11,"set_all","","Sets all bits to 1.",31,null],[11,"negate","","Flips all bits.",31,null],[11,"union","","Calculates the union of two bitvectors. This acts like the bitwise `or`\nfunction.",31,{"inputs":[{"name":"bitvec"},{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"intersect","","Calculates the intersection of two bitvectors. This acts like the\nbitwise `and` function.",31,{"inputs":[{"name":"bitvec"},{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"difference","","Calculates the difference between two bitvectors.",31,{"inputs":[{"name":"bitvec"},{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"all","","Returns `true` if all bits are 1.",31,{"inputs":[{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"iter","","Returns an iterator over the elements of the vector in order.",31,{"inputs":[{"name":"bitvec"}],"output":{"name":"iter"}}],[11,"append","","Moves all bits from `other` into `Self`, leaving `other` empty.",31,null],[11,"split_off","","Splits the `BitVec` into two at the given bit,\nretaining the first half in-place and returning the second one.",31,{"inputs":[{"name":"bitvec"},{"name":"usize"}],"output":{"name":"bitvec"}}],[11,"none","","Returns `true` if all bits are 0.",31,{"inputs":[{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"any","","Returns `true` if any bit is 1.",31,{"inputs":[{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"to_bytes","","Organises the bits into bytes, such that the first bit in the\n`BitVec` becomes the high-order bit of the first byte. If the\nsize of the `BitVec` is not a multiple of eight then trailing bits\nwill be filled-in with `false`.",31,{"inputs":[{"name":"bitvec"}],"output":{"name":"vec"}}],[11,"eq_vec","","Compares a `BitVec` to a slice of `bool`s.\nBoth the `BitVec` and slice must have the same length.",31,null],[11,"truncate","","Shortens a `BitVec`, dropping excess elements.",31,null],[11,"reserve","","Reserves capacity for at least `additional` more bits to be inserted in the given\n`BitVec`. The collection may reserve more space to avoid frequent reallocations.",31,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more bits to be inserted in the\ngiven `BitVec`. Does nothing if the capacity is already sufficient.",31,null],[11,"capacity","","Returns the capacity in bits for this bit vector. Inserting any\nelement less than this amount will not trigger a resizing.",31,{"inputs":[{"name":"bitvec"}],"output":{"name":"usize"}}],[11,"grow","","Grows the `BitVec` in-place, adding `n` copies of `value` to the `BitVec`.",31,null],[11,"pop","","Removes the last bit from the BitVec, and returns it. Returns None if the BitVec is empty.",31,{"inputs":[{"name":"bitvec"}],"output":{"name":"option"}}],[11,"push","","Pushes a `bool` onto the end.",31,null],[11,"len","","Returns the total number of bits in this vector",31,{"inputs":[{"name":"bitvec"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if there are no bits in this vector",31,{"inputs":[{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"clear","","Clears all bits in this vector.",31,null],[11,"default","","",31,{"inputs":[{"name":"bitvec"}],"output":{"name":"bitvec"}}],[11,"from_iter","","",31,{"inputs":[{"name":"bitvec"},{"name":"i"}],"output":{"name":"bitvec"}}],[11,"extend","","",31,null],[11,"clone","","",31,{"inputs":[{"name":"bitvec"}],"output":{"name":"bitvec"}}],[11,"clone_from","","",31,null],[11,"partial_cmp","","",31,{"inputs":[{"name":"bitvec"},{"name":"bitvec"}],"output":{"name":"option"}}],[11,"cmp","","",31,{"inputs":[{"name":"bitvec"},{"name":"bitvec"}],"output":{"name":"ordering"}}],[11,"fmt","","",31,{"inputs":[{"name":"bitvec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",31,null],[11,"eq","","",31,{"inputs":[{"name":"bitvec"},{"name":"bitvec"}],"output":{"name":"bool"}}],[11,"clone","","",32,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[6,"Item","::headers","",null,null],[11,"next","collections::bit","",32,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",32,null],[11,"next_back","","",32,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"indexable","","",32,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"idx","","",32,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[6,"Item","::headers","",null,null],[6,"IntoIter","","",null,null],[11,"clone","collections::bit","",33,{"inputs":[{"name":"bitset"}],"output":{"name":"bitset"}}],[11,"default","","",33,{"inputs":[{"name":"bitset"}],"output":{"name":"bitset"}}],[11,"from_iter","","",33,{"inputs":[{"name":"bitset"},{"name":"i"}],"output":{"name":"bitset"}}],[11,"extend","","",33,null],[11,"partial_cmp","","",33,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"option"}}],[11,"cmp","","",33,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"ordering"}}],[11,"eq","","",33,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"bool"}}],[11,"new","","Creates a new empty `BitSet`.",33,{"inputs":[{"name":"bitset"}],"output":{"name":"bitset"}}],[11,"with_capacity","","Creates a new `BitSet` with initially no contents, able to\nhold `nbits` elements without resizing.",33,{"inputs":[{"name":"bitset"},{"name":"usize"}],"output":{"name":"bitset"}}],[11,"from_bit_vec","","Creates a new `BitSet` from the given bit vector.",33,{"inputs":[{"name":"bitset"},{"name":"bitvec"}],"output":{"name":"bitset"}}],[11,"capacity","","Returns the capacity in bits for this bit vector. Inserting any\nelement less than this amount will not trigger a resizing.",33,{"inputs":[{"name":"bitset"}],"output":{"name":"usize"}}],[11,"reserve_len","","Reserves capacity for the given `BitSet` to contain `len` distinct elements. In the case\nof `BitSet` this means reallocations will not occur as long as all inserted elements\nare less than `len`.",33,null],[11,"reserve_len_exact","","Reserves the minimum capacity for the given `BitSet` to contain `len` distinct elements.\nIn the case of `BitSet` this means reallocations will not occur as long as all inserted\nelements are less than `len`.",33,null],[11,"into_bit_vec","","Consumes this set to return the underlying bit vector.",33,{"inputs":[{"name":"bitset"}],"output":{"name":"bitvec"}}],[11,"get_ref","","Returns a reference to the underlying bit vector.",33,{"inputs":[{"name":"bitset"}],"output":{"name":"bitvec"}}],[11,"shrink_to_fit","","Truncates the underlying vector to the least length required.",33,null],[11,"iter","","Iterator over each usize stored in the `BitSet`.",33,{"inputs":[{"name":"bitset"}],"output":{"name":"setiter"}}],[11,"union","","Iterator over each usize stored in `self` union `other`.\nSee [union_with](#method.union_with) for an efficient in-place version.",33,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"union"}}],[11,"intersection","","Iterator over each usize stored in `self` intersect `other`.\nSee [intersect_with](#method.intersect_with) for an efficient in-place version.",33,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"intersection"}}],[11,"difference","","Iterator over each usize stored in the `self` setminus `other`.\nSee [difference_with](#method.difference_with) for an efficient in-place version.",33,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"difference"}}],[11,"symmetric_difference","","Iterator over each usize stored in the symmetric difference of `self` and `other`.\nSee [symmetric_difference_with](#method.symmetric_difference_with) for\nan efficient in-place version.",33,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"symmetricdifference"}}],[11,"union_with","","Unions in-place with the specified other bit vector.",33,null],[11,"intersect_with","","Intersects in-place with the specified other bit vector.",33,null],[11,"difference_with","","Makes this bit vector the difference with the specified other bit vector\nin-place.",33,null],[11,"symmetric_difference_with","","Makes this bit vector the symmetric difference with the specified other\nbit vector in-place.",33,null],[11,"append","","Moves all elements from `other` into `Self`, leaving `other` empty.",33,null],[11,"split_off","","Splits the `BitSet` into two at the given key including the key.\nRetains the first part in-place while returning the second part.",33,{"inputs":[{"name":"bitset"},{"name":"usize"}],"output":{"name":"bitset"}}],[11,"len","","Returns the number of set bits in this set.",33,{"inputs":[{"name":"bitset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns whether there are no bits set in this set",33,{"inputs":[{"name":"bitset"}],"output":{"name":"bool"}}],[11,"clear","","Clears all bits in this set",33,null],[11,"contains","","Returns `true` if this set contains the specified integer.",33,{"inputs":[{"name":"bitset"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",33,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if the set is a subset of another.",33,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if the set is a superset of another.",33,{"inputs":[{"name":"bitset"},{"name":"bitset"}],"output":{"name":"bool"}}],[11,"insert","","Adds a value to the set. Returns `true` if the value was not already\npresent in the set.",33,{"inputs":[{"name":"bitset"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",33,{"inputs":[{"name":"bitset"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"fmt","","",33,{"inputs":[{"name":"bitset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",33,null],[11,"clone","","",34,{"inputs":[{"name":"setiter"}],"output":{"name":"setiter"}}],[11,"clone","","",35,{"inputs":[{"name":"twobitpositions"}],"output":{"name":"twobitpositions"}}],[11,"clone","","",36,{"inputs":[{"name":"union"}],"output":{"name":"union"}}],[11,"clone","","",37,{"inputs":[{"name":"intersection"}],"output":{"name":"intersection"}}],[11,"clone","","",38,{"inputs":[{"name":"difference"}],"output":{"name":"difference"}}],[11,"clone","","",39,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"symmetricdifference"}}],[6,"Item","::headers","",null,null],[11,"next","collections::bit","",34,{"inputs":[{"name":"setiter"}],"output":{"name":"option"}}],[11,"size_hint","","",34,null],[6,"Item","::headers","",null,null],[11,"next","collections::bit","",35,{"inputs":[{"name":"twobitpositions"}],"output":{"name":"option"}}],[11,"size_hint","","",35,null],[6,"Item","::headers","",null,null],[11,"next","collections::bit","",36,{"inputs":[{"name":"union"}],"output":{"name":"option"}}],[11,"size_hint","","",36,null],[6,"Item","::headers","",null,null],[11,"next","collections::bit","",37,{"inputs":[{"name":"intersection"}],"output":{"name":"option"}}],[11,"size_hint","","",37,null],[6,"Item","::headers","",null,null],[11,"next","collections::bit","",38,{"inputs":[{"name":"difference"}],"output":{"name":"option"}}],[11,"size_hint","","",38,null],[6,"Item","::headers","",null,null],[11,"next","collections::bit","",39,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"option"}}],[11,"size_hint","","",39,null],[6,"Item","::headers","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[11,"next","collections::btree::node","",40,{"inputs":[{"name":"rawitems"}],"output":{"name":"option"}}],[11,"next_back","","",40,{"inputs":[{"name":"rawitems"}],"output":{"name":"option"}}],[11,"drop","","",40,null],[11,"drop","","",41,null],[11,"as_slices","","",41,null],[11,"as_slices_mut","","",41,null],[11,"as_slices_internal","","",41,{"inputs":[{"name":"node"}],"output":{"name":"nodeslice"}}],[11,"as_slices_internal_mut","","",41,{"inputs":[{"name":"node"}],"output":{"name":"mutnodeslice"}}],[11,"keys","","",41,null],[11,"keys_mut","","",41,null],[11,"vals","","",41,null],[11,"vals_mut","","",41,null],[11,"edges","","",41,null],[11,"edges_mut","","",41,null],[11,"clone","","",41,{"inputs":[{"name":"node"}],"output":{"name":"node"}}],[11,"clone","","",42,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"search","","Searches for the given key in the node. If it finds an exact match,\n`Found` will be yielded with the matching index. If it doesn't find an exact match,\n`GoDown` will be yielded with the index of the subtree the key must lie in.",41,{"inputs":[{"name":"node"},{"name":"noderef"},{"name":"q"}],"output":{"name":"searchresult"}}],[11,"make_leaf_root","","Make a leaf root from scratch",41,{"inputs":[{"name":"node"},{"name":"usize"}],"output":{"name":"node"}}],[11,"make_internal_root","","Make an internal root and swap it with an old root",41,null],[11,"len","","How many key-value pairs the node contains",41,{"inputs":[{"name":"node"}],"output":{"name":"usize"}}],[11,"is_empty","","Does the node not contain any key-value pairs",41,{"inputs":[{"name":"node"}],"output":{"name":"bool"}}],[11,"capacity","","How many key-value pairs the node can fit",41,{"inputs":[{"name":"node"}],"output":{"name":"usize"}}],[11,"is_leaf","","If the node has any children",41,{"inputs":[{"name":"node"}],"output":{"name":"bool"}}],[11,"is_underfull","","if the node has too few elements",41,{"inputs":[{"name":"node"}],"output":{"name":"bool"}}],[11,"is_full","","if the node cannot fit any more elements",41,{"inputs":[{"name":"node"}],"output":{"name":"bool"}}],[11,"node","","Returns a reference to the node that contains the pointed-to edge or key/value pair. This\nis very different from `edge` and `edge_mut` because those return children of the node\nreturned by `node`.",42,{"inputs":[{"name":"handle"}],"output":{"name":"node"}}],[11,"as_raw","","Converts a handle into one that stores the same information using a raw pointer. This can\nbe useful in conjunction with `from_raw` when the type system is insufficient for\ndetermining the lifetimes of the nodes.",42,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"from_raw","","Converts from a handle stored with a raw pointer, which isn't directly usable, to a handle\nstored with a reference. This is an unsafe inverse of `as_raw`, and together they allow\nunsafely extending the lifetime of the reference to the `Node`.",42,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"from_raw_mut","","Converts from a handle stored with a raw pointer, which isn't directly usable, to a handle\nstored with a mutable reference. This is an unsafe inverse of `as_raw`, and together they\nallow unsafely extending the lifetime of the reference to the `Node`.",42,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"into_edge","","Turns the handle into a reference to the edge it points at. This is necessary because the\nreturned pointer has a larger lifetime than what would be returned by `edge` or `edge_mut`,\nmaking it more suitable for moving down a chain of nodes.",42,{"inputs":[{"name":"handle"}],"output":{"name":"node"}}],[11,"into_edge_mut","","Turns the handle into a mutable reference to the edge it points at. This is necessary\nbecause the returned pointer has a larger lifetime than what would be returned by\n`edge_mut`, making it more suitable for moving down a chain of nodes.",42,{"inputs":[{"name":"handle"}],"output":{"name":"node"}}],[11,"force","","Figure out whether this handle is pointing to something in a leaf node or to something in\nan internal node, clarifying the type according to the result.",42,{"inputs":[{"name":"handle"}],"output":{"name":"forceresult"}}],[11,"insert_as_leaf","","Tries to insert this key-value pair at the given index in this leaf node\nIf the node is full, we have to split it.",42,null],[11,"edge_mut","","Returns a mutable reference to the edge pointed-to by this handle. This should not be\nconfused with `node`, which references the parent node of what is returned here.",42,{"inputs":[{"name":"handle"}],"output":{"name":"node"}}],[11,"insert_as_internal","","Tries to insert this key-value pair at the given index in this internal node\nIf the node is full, we have to split it.",42,{"inputs":[{"name":"handle"},{"name":"k"},{"name":"v"},{"name":"node"}],"output":{"name":"insertionresult"}}],[11,"handle_underflow","","Handle an underflow in this node's child. We favour handling \"to the left\" because we know\nwe're empty, but our neighbour can be full. Handling to the left means when we choose to\nsteal, we pop off the end of our neighbour (always fast) and \"unshift\" ourselves\n(always slow, but at least faster since we know we're half-empty).\nHandling \"to the right\" reverses these roles. Of course, we merge whenever possible\nbecause we want dense nodes, and merging is about equal work regardless of direction.",42,null],[11,"into_kv","","Turns the handle into references to the key and value it points at. This is necessary\nbecause the returned pointers have larger lifetimes than what would be returned by `key`\nor `val`.",42,null],[11,"into_kv_mut","","Turns the handle into mutable references to the key and value it points at. This is\nnecessary because the returned pointers have larger lifetimes than what would be returned\nby `key_mut` or `val_mut`.",42,null],[11,"into_left_edge","","Convert this handle into one pointing at the edge immediately to the left of the key/value\npair pointed-to by this handle. This is useful because it returns a reference with larger\nlifetime than `left_edge`.",42,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"key_mut","","Returns a mutable reference to the key pointed-to by this handle. This doesn't return a\nreference with a lifetime as large as `into_kv_mut`, but it also does not consume the\nhandle.",42,{"inputs":[{"name":"handle"}],"output":{"name":"k"}}],[11,"val_mut","","Returns a mutable reference to the value pointed-to by this handle. This doesn't return a\nreference with a lifetime as large as `into_kv_mut`, but it also does not consume the\nhandle.",42,{"inputs":[{"name":"handle"}],"output":{"name":"v"}}],[11,"left_edge","","Gets the handle pointing to the edge immediately to the left of the key/value pair pointed\nto by this handle.",42,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"right_edge","","Gets the handle pointing to the edge immediately to the right of the key/value pair pointed\nto by this handle.",42,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"remove_as_leaf","","Removes the key/value pair at the handle's location.",42,null],[11,"kv_handle","","Returns the mutable handle pointing to the key/value pair at a given index.",41,{"inputs":[{"name":"node"},{"name":"usize"}],"output":{"name":"handle"}}],[11,"iter","","",41,{"inputs":[{"name":"node"}],"output":{"name":"abstraversal"}}],[11,"iter_mut","","",41,{"inputs":[{"name":"node"}],"output":{"name":"abstraversal"}}],[11,"into_iter","","",41,{"inputs":[{"name":"node"}],"output":{"name":"abstraversal"}}],[11,"hoist_lone_child","","When a node has no keys or values and only a single edge, extract that edge.",41,null],[11,"clone","","",43,{"inputs":[{"name":"elemsandedges"}],"output":{"name":"elemsandedges"}}],[6,"Item","::headers","",null,null],[6,"Edge","","",null,null],[11,"next_kv","collections::btree::node","",43,{"inputs":[{"name":"elemsandedges"}],"output":{"name":"option"}}],[11,"next_kv_back","","",43,{"inputs":[{"name":"elemsandedges"}],"output":{"name":"option"}}],[11,"next_edge","","",43,{"inputs":[{"name":"elemsandedges"}],"output":{"name":"option"}}],[11,"next_edge_back","","",43,{"inputs":[{"name":"elemsandedges"}],"output":{"name":"option"}}],[6,"Item","::headers","",null,null],[6,"Edge","","",null,null],[11,"next_kv","collections::btree::node","",44,{"inputs":[{"name":"movetraversalimpl"}],"output":{"name":"option"}}],[11,"next_kv_back","","",44,{"inputs":[{"name":"movetraversalimpl"}],"output":{"name":"option"}}],[11,"next_edge","","",44,{"inputs":[{"name":"movetraversalimpl"}],"output":{"name":"option"}}],[11,"next_edge_back","","",44,{"inputs":[{"name":"movetraversalimpl"}],"output":{"name":"option"}}],[11,"drop","","",44,null],[11,"clone","","",45,{"inputs":[{"name":"abstraversal"}],"output":{"name":"abstraversal"}}],[6,"Item","::headers","",null,null],[11,"next","collections::btree::node","",45,{"inputs":[{"name":"abstraversal"}],"output":{"name":"option"}}],[11,"next_back","","",45,{"inputs":[{"name":"abstraversal"}],"output":{"name":"option"}}],[11,"next_edge_item","","Advances the iterator and returns the item if it's an edge. Returns None\nand does nothing if the first item is not an edge.",45,{"inputs":[{"name":"abstraversal"}],"output":{"name":"option"}}],[11,"next_edge_item_back","","Advances the iterator and returns the item if it's an edge. Returns None\nand does nothing if the last item is not an edge.",45,{"inputs":[{"name":"abstraversal"}],"output":{"name":"option"}}],[11,"next_kv_item","","Advances the iterator and returns the item if it's a key-value pair. Returns None\nand does nothing if the first item is not a key-value pair.",45,{"inputs":[{"name":"abstraversal"}],"output":{"name":"option"}}],[11,"next_kv_item_back","","Advances the iterator and returns the item if it's a key-value pair. Returns None\nand does nothing if the last item is not a key-value pair.",45,{"inputs":[{"name":"abstraversal"}],"output":{"name":"option"}}],[11,"slice_from","","Returns a sub-slice with elements starting with `min_key`.",46,{"inputs":[{"name":"nodeslice"},{"name":"k"}],"output":{"name":"nodeslice"}}],[11,"slice_to","","Returns a sub-slice with elements up to and including `max_key`.",46,{"inputs":[{"name":"nodeslice"},{"name":"k"}],"output":{"name":"nodeslice"}}],[11,"iter","","Returns an iterator over key/value pairs and edges in a slice.",46,{"inputs":[{"name":"nodeslice"}],"output":{"name":"abstraversal"}}],[11,"slice_from","","Returns a sub-slice with elements starting with `min_key`.",47,{"inputs":[{"name":"mutnodeslice"},{"name":"k"}],"output":{"name":"mutnodeslice"}}],[11,"slice_to","","Returns a sub-slice with elements up to and including `max_key`.",47,{"inputs":[{"name":"mutnodeslice"},{"name":"k"}],"output":{"name":"mutnodeslice"}}],[11,"iter_mut","","Returns an iterator over key/value pairs and edges in a slice.",47,{"inputs":[{"name":"mutnodeslice"}],"output":{"name":"abstraversal"}}],[11,"clone","collections::btree::map","",48,{"inputs":[{"name":"btreemap"}],"output":{"name":"btreemap"}}],[11,"clone","","",49,{"inputs":[{"name":"absiter"}],"output":{"name":"absiter"}}],[11,"new","","Makes a new empty BTreeMap with a reasonable choice for B.",48,{"inputs":[{"name":"btreemap"}],"output":{"name":"btreemap"}}],[11,"with_b","","Makes a new empty BTreeMap with the given B.",48,{"inputs":[{"name":"btreemap"},{"name":"usize"}],"output":{"name":"btreemap"}}],[11,"clear","","Clears the map, removing all values.",48,null],[11,"get","","Returns a reference to the value corresponding to the key.",48,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"option"}}],[11,"contains_key","","Returns true if the map contains a value for the specified key.",48,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",48,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"option"}}],[11,"insert","","Inserts a key-value pair into the map. If the key already had a value\npresent in the map, that value is returned. Otherwise, `None` is returned.",48,{"inputs":[{"name":"btreemap"},{"name":"k"},{"name":"v"}],"output":{"name":"option"}}],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",48,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"option"}}],[6,"Item","::headers","",null,null],[6,"IntoIter","","",null,null],[11,"into_iter","collections::btree::map","Gets an owning iterator over the entries of the map.",48,{"inputs":[{"name":"btreemap"}],"output":{"name":"intoiter"}}],[6,"Item","::headers","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Target","","",null,null],[11,"deref","collections::btree::map::stack","",50,{"inputs":[{"name":"idref"}],"output":{"name":"t"}}],[11,"deref_mut","","",50,{"inputs":[{"name":"idref"}],"output":{"name":"t"}}],[11,"new","","Creates a new PartialSearchStack from a BTreeMap by initializing the stack with the\nroot of the tree.",51,{"inputs":[{"name":"partialsearchstack"},{"name":"btreemap"}],"output":{"name":"partialsearchstack"}}],[11,"with","","Breaks up the stack into a `Pusher` and the next `Node`, allowing the given closure\nto interact with, search, and finally push the `Node` onto the stack. The passed in\nclosure must be polymorphic on the `'id` lifetime parameter, as this statically\nensures that only `Handle`s from the correct `Node` can be pushed.",51,{"inputs":[{"name":"partialsearchstack"},{"name":"f"}],"output":{"name":"t"}}],[11,"push","","Pushes the requested child of the stack's current top on top of the stack. If the child\nexists, then a new PartialSearchStack is yielded. Otherwise, a VacantSearchStack is\nyielded.",52,{"inputs":[{"name":"pusher"},{"name":"handle"}],"output":{"name":"partialsearchstack"}}],[11,"seal","","Converts the PartialSearchStack into a SearchStack.",52,{"inputs":[{"name":"pusher"},{"name":"handle"}],"output":{"name":"searchstack"}}],[11,"peek","","Gets a reference to the value the stack points to.",53,{"inputs":[{"name":"searchstack"}],"output":{"name":"v"}}],[11,"peek_mut","","Gets a mutable reference to the value the stack points to.",53,{"inputs":[{"name":"searchstack"}],"output":{"name":"v"}}],[11,"into_top","","Converts the stack into a mutable reference to the value it points to, with a lifetime\ntied to the original tree.",53,{"inputs":[{"name":"searchstack"}],"output":{"name":"v"}}],[11,"remove","","Removes the key and value in the top element of the stack, then handles underflows as\ndescribed in BTree's pop function.",53,{"inputs":[{"name":"searchstack"}],"output":{"name":"v"}}],[11,"insert","","Inserts the key and value into the top element in the stack, and if that node has to\nsplit recursively inserts the split contents into the next element stack until\nsplits stop.",53,{"inputs":[{"name":"searchstack"},{"name":"k"},{"name":"v"}],"output":{"name":"v"}}],[11,"from_iter","collections::btree::map","",48,{"inputs":[{"name":"btreemap"},{"name":"t"}],"output":{"name":"btreemap"}}],[11,"extend","","",48,null],[11,"hash","","",48,null],[11,"default","","",48,{"inputs":[{"name":"btreemap"}],"output":{"name":"btreemap"}}],[11,"eq","","",48,{"inputs":[{"name":"btreemap"},{"name":"btreemap"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",48,{"inputs":[{"name":"btreemap"},{"name":"btreemap"}],"output":{"name":"option"}}],[11,"cmp","","",48,{"inputs":[{"name":"btreemap"},{"name":"btreemap"}],"output":{"name":"ordering"}}],[11,"fmt","","",48,{"inputs":[{"name":"btreemap"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Output","::headers","",null,null],[11,"index","collections::btree::map","",48,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"v"}}],[11,"traverse","collections::btree::node","",45,{"inputs":[{"name":"abstraversal"},{"name":"node"}],"output":{"name":"abstraversal"}}],[11,"traverse","","",45,{"inputs":[{"name":"abstraversal"},{"name":"node"}],"output":{"name":"abstraversal"}}],[11,"traverse","","",45,{"inputs":[{"name":"abstraversal"},{"name":"node"}],"output":{"name":"abstraversal"}}],[6,"Item","::headers","",null,null],[11,"next","collections::btree::map","",49,{"inputs":[{"name":"absiter"}],"output":{"name":"option"}}],[11,"size_hint","","",49,null],[11,"next_back","","",49,{"inputs":[{"name":"absiter"}],"output":{"name":"option"}}],[11,"clone","","",54,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[6,"Item","::headers","",null,null],[11,"next","collections::btree::map","",54,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",54,null],[11,"next_back","","",54,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[6,"Item","::headers","",null,null],[11,"next","collections::btree::map","",55,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",55,null],[11,"next_back","","",55,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[6,"Item","::headers","",null,null],[11,"next","collections::btree::map","",56,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",56,null],[11,"next_back","","",56,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"clone","","",57,{"inputs":[{"name":"keys"}],"output":{"name":"keys"}}],[6,"Item","::headers","",null,null],[11,"next","collections::btree::map","",57,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"size_hint","","",57,null],[11,"next_back","","",57,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"clone","","",58,{"inputs":[{"name":"values"}],"output":{"name":"values"}}],[6,"Item","::headers","",null,null],[11,"next","collections::btree::map","",58,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"size_hint","","",58,null],[11,"next_back","","",58,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"clone","","",59,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[6,"Item","::headers","",null,null],[11,"next","collections::btree::map","",59,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next_back","","",59,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[6,"Item","::headers","",null,null],[11,"next","collections::btree::map","",60,{"inputs":[{"name":"rangemut"}],"output":{"name":"option"}}],[11,"next_back","","",60,{"inputs":[{"name":"rangemut"}],"output":{"name":"option"}}],[11,"get","","Returns a mutable reference to the entry if occupied, or the VacantEntry if vacant",61,{"inputs":[{"name":"entry"}],"output":{"name":"result"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",61,{"inputs":[{"name":"entry"},{"name":"v"}],"output":{"name":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",61,{"inputs":[{"name":"entry"},{"name":"f"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the VacantEntry's key,\nand returns a mutable reference to it.",62,{"inputs":[{"name":"vacantentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"get","","Gets a reference to the value in the entry.",63,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",63,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"into_mut","","Converts the entry into a mutable reference to its value.",63,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the OccupiedEntry's key,\nand returns the entry's old value.",63,{"inputs":[{"name":"occupiedentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"remove","","Takes the value of the entry out of the map, and returns it.",63,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"iter","","Gets an iterator over the entries of the map.",48,{"inputs":[{"name":"btreemap"}],"output":{"name":"iter"}}],[11,"iter_mut","","Gets a mutable iterator over the entries of the map.",48,{"inputs":[{"name":"btreemap"}],"output":{"name":"itermut"}}],[11,"keys","","Gets an iterator over the keys of the map.",48,{"inputs":[{"name":"btreemap"}],"output":{"name":"keys"}}],[11,"values","","Gets an iterator over the values of the map.",48,{"inputs":[{"name":"btreemap"}],"output":{"name":"values"}}],[11,"len","","Returns the number of elements in the map.",48,{"inputs":[{"name":"btreemap"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",48,{"inputs":[{"name":"btreemap"}],"output":{"name":"bool"}}],[11,"range","","Constructs a double-ended iterator over a sub-range of elements in the map, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as \"negative\ninfinity\", and if max is `Unbounded`, then it will be treated as \"positive infinity\".\nThus range(Unbounded, Unbounded) will yield the whole collection.",48,{"inputs":[{"name":"btreemap"},{"name":"bound"},{"name":"bound"}],"output":{"name":"range"}}],[11,"range_mut","","Constructs a mutable double-ended iterator over a sub-range of elements in the map, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as \"negative\ninfinity\", and if max is `Unbounded`, then it will be treated as \"positive infinity\".\nThus range(Unbounded, Unbounded) will yield the whole collection.",48,{"inputs":[{"name":"btreemap"},{"name":"bound"},{"name":"bound"}],"output":{"name":"rangemut"}}],[11,"entry","","Gets the given key's corresponding entry in the map for in-place manipulation.",48,{"inputs":[{"name":"btreemap"},{"name":"k"}],"output":{"name":"entry"}}],[11,"partial_cmp","collections::btree::set","",64,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"option"}}],[11,"lt","","",64,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"le","","",64,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"gt","","",64,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"ge","","",64,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"cmp","","",64,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"ordering"}}],[11,"eq","","",64,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"ne","","",64,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"hash","","",64,null],[11,"clone","","",64,{"inputs":[{"name":"btreeset"}],"output":{"name":"btreeset"}}],[11,"new","","Makes a new BTreeSet with a reasonable choice of B.",64,{"inputs":[{"name":"btreeset"}],"output":{"name":"btreeset"}}],[11,"with_b","","Makes a new BTreeSet with the given B.",64,{"inputs":[{"name":"btreeset"},{"name":"usize"}],"output":{"name":"btreeset"}}],[11,"iter","","Gets an iterator over the BTreeSet's contents.",64,{"inputs":[{"name":"btreeset"}],"output":{"name":"iter"}}],[11,"range","","Constructs a double-ended iterator over a sub-range of elements in the set, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as \"negative\ninfinity\", and if max is `Unbounded`, then it will be treated as \"positive infinity\".\nThus range(Unbounded, Unbounded) will yield the whole collection.",64,{"inputs":[{"name":"btreeset"},{"name":"bound"},{"name":"bound"}],"output":{"name":"range"}}],[11,"difference","","Visits the values representing the difference, in ascending order.",64,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"difference"}}],[11,"symmetric_difference","","Visits the values representing the symmetric difference, in ascending order.",64,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"symmetricdifference"}}],[11,"intersection","","Visits the values representing the intersection, in ascending order.",64,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"intersection"}}],[11,"union","","Visits the values representing the union, in ascending order.",64,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"union"}}],[11,"len","","Returns the number of elements in the set.",64,{"inputs":[{"name":"btreeset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the set contains no elements.",64,{"inputs":[{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"clear","","Clears the set, removing all values.",64,null],[11,"contains","","Returns `true` if the set contains a value.",64,{"inputs":[{"name":"btreeset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",64,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if the set is a subset of another.",64,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if the set is a superset of another.",64,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"insert","","Adds a value to the set. Returns `true` if the value was not already\npresent in the set.",64,{"inputs":[{"name":"btreeset"},{"name":"t"}],"output":{"name":"bool"}}],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",64,{"inputs":[{"name":"btreeset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"from_iter","","",64,{"inputs":[{"name":"btreeset"},{"name":"i"}],"output":{"name":"btreeset"}}],[6,"Item","::headers","",null,null],[6,"IntoIter","","",null,null],[11,"into_iter","collections::btree::set","Gets an iterator for moving out the BtreeSet's contents.",64,{"inputs":[{"name":"btreeset"}],"output":{"name":"intoiter"}}],[6,"Item","::headers","",null,null],[6,"IntoIter","","",null,null],[11,"extend","collections::btree::set","",64,null],[11,"default","","",64,{"inputs":[{"name":"btreeset"}],"output":{"name":"btreeset"}}],[6,"Output","::headers","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"fmt","collections::btree::set","",64,{"inputs":[{"name":"btreeset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",65,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[6,"Item","::headers","",null,null],[11,"next","collections::btree::set","",65,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",65,null],[11,"next_back","","",65,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[6,"Item","::headers","",null,null],[11,"next","collections::btree::set","",66,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",66,null],[11,"next_back","","",66,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"clone","","",67,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[6,"Item","::headers","",null,null],[11,"next","collections::btree::set","",67,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next_back","","",67,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"clone","","",68,{"inputs":[{"name":"difference"}],"output":{"name":"difference"}}],[6,"Item","::headers","",null,null],[11,"next","collections::btree::set","",68,{"inputs":[{"name":"difference"}],"output":{"name":"option"}}],[11,"clone","","",69,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"symmetricdifference"}}],[6,"Item","::headers","",null,null],[11,"next","collections::btree::set","",69,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"option"}}],[11,"clone","","",70,{"inputs":[{"name":"intersection"}],"output":{"name":"intersection"}}],[6,"Item","::headers","",null,null],[11,"next","collections::btree::set","",70,{"inputs":[{"name":"intersection"}],"output":{"name":"option"}}],[11,"clone","","",71,{"inputs":[{"name":"union"}],"output":{"name":"union"}}],[6,"Item","::headers","",null,null],[11,"next","collections::btree::set","",71,{"inputs":[{"name":"union"}],"output":{"name":"option"}}],[11,"borrow","alloc::rc","",72,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"borrow","alloc::arc","",73,{"inputs":[{"name":"arc"}],"output":{"name":"t"}}],[11,"borrow","collections::borrow","",74,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[6,"Owned","::headers","",null,null],[11,"clone","collections::borrow","",74,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",74,null],[11,"into_owned","","Extracts the owned data.",74,null],[6,"Target","::headers","",null,null],[11,"deref","collections::borrow","",74,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"cmp","","",74,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"ordering"}}],[11,"eq","","",74,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",74,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"option"}}],[11,"fmt","","",74,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",74,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",74,null],[11,"into_cow","","",74,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"as_ref","","",74,{"inputs":[{"name":"cow"}],"output":{"name":"t"}}],[11,"hash","collections::enum_set","",75,null],[11,"cmp","","",75,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",75,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"option"}}],[11,"lt","","",75,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"le","","",75,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"gt","","",75,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"ge","","",75,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"eq","","",75,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"ne","","",75,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"clone","","",75,{"inputs":[{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"fmt","","",75,{"inputs":[{"name":"enumset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Returns an empty `EnumSet`.",75,{"inputs":[{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"len","","Returns the number of elements in the given `EnumSet`.",75,{"inputs":[{"name":"enumset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the `EnumSet` is empty.",75,{"inputs":[{"name":"enumset"}],"output":{"name":"bool"}}],[11,"clear","","",75,null],[11,"is_disjoint","","Returns `false` if the `EnumSet` contains any enum of the given `EnumSet`.",75,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if a given `EnumSet` is included in this `EnumSet`.",75,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if this `EnumSet` is included in the given `EnumSet`.",75,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"union","","Returns the union of both `EnumSets`.",75,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"intersection","","Returns the intersection of both `EnumSets`.",75,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"insert","","Adds an enum to the `EnumSet`, and returns `true` if it wasn't there before",75,{"inputs":[{"name":"enumset"},{"name":"e"}],"output":{"name":"bool"}}],[11,"remove","","Removes an enum from the EnumSet",75,{"inputs":[{"name":"enumset"},{"name":"e"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` if an `EnumSet` contains a given enum.",75,{"inputs":[{"name":"enumset"},{"name":"e"}],"output":{"name":"bool"}}],[11,"iter","","Returns an iterator over an `EnumSet`.",75,{"inputs":[{"name":"enumset"}],"output":{"name":"iter"}}],[6,"Output","::headers","",null,null],[11,"sub","collections::enum_set","",75,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[6,"Output","::headers","",null,null],[11,"bitor","collections::enum_set","",75,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[6,"Output","::headers","",null,null],[11,"bitand","collections::enum_set","",75,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[6,"Output","::headers","",null,null],[11,"bitxor","collections::enum_set","",75,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"clone","","",76,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[6,"Item","::headers","",null,null],[11,"next","collections::enum_set","",76,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",76,null],[11,"from_iter","","",75,{"inputs":[{"name":"enumset"},{"name":"i"}],"output":{"name":"enumset"}}],[6,"Item","::headers","",null,null],[6,"IntoIter","","",null,null],[11,"extend","collections::enum_set","",75,null],[11,"clone","core::fmt::rt::v1","",77,{"inputs":[{"name":"argument"}],"output":{"name":"argument"}}],[11,"clone","","",78,{"inputs":[{"name":"formatspec"}],"output":{"name":"formatspec"}}],[11,"eq","","",79,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"ne","","",79,{"inputs":[{"name":"alignment"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"clone","","",79,{"inputs":[{"name":"alignment"}],"output":{"name":"alignment"}}],[11,"clone","","",80,{"inputs":[{"name":"count"}],"output":{"name":"count"}}],[11,"clone","","",81,{"inputs":[{"name":"position"}],"output":{"name":"position"}}],[11,"clone","collections::linked_list","",82,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",83,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"clone","","",84,{"inputs":[{"name":"rawlink"}],"output":{"name":"rawlink"}}],[11,"default","","",85,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",85,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",85,null],[11,"iter","","Provides a forward iterator.",85,{"inputs":[{"name":"linkedlist"}],"output":{"name":"iter"}}],[11,"iter_mut","","Provides a forward iterator with mutable references.",85,{"inputs":[{"name":"linkedlist"}],"output":{"name":"itermut"}}],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",85,{"inputs":[{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"len","","Returns the length of the `LinkedList`.",85,{"inputs":[{"name":"linkedlist"}],"output":{"name":"usize"}}],[11,"clear","","Removes all elements from the `LinkedList`.",85,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",85,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",85,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",85,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",85,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_front","","Adds an element first in the list.",85,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",85,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_back","","Appends an element to the back of a list",85,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",85,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",85,{"inputs":[{"name":"linkedlist"},{"name":"usize"}],"output":{"name":"linkedlist"}}],[11,"drop","","",85,null],[6,"Item","::headers","",null,null],[11,"next","collections::linked_list","",82,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",82,null],[11,"next_back","","",82,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[6,"Item","::headers","",null,null],[11,"next","collections::linked_list","",86,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",86,null],[11,"next_back","","",86,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",86,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",86,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[6,"Item","::headers","",null,null],[11,"next","collections::linked_list","",83,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",83,null],[11,"next_back","","",83,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","",85,{"inputs":[{"name":"linkedlist"},{"name":"t"}],"output":{"name":"linkedlist"}}],[6,"Item","::headers","",null,null],[6,"IntoIter","","",null,null],[11,"into_iter","collections::linked_list","Consumes the list into an iterator yielding elements by value.",85,{"inputs":[{"name":"linkedlist"}],"output":{"name":"intoiter"}}],[6,"Item","::headers","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[11,"extend","collections::linked_list","",85,null],[11,"eq","","",85,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"ne","","",85,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",85,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"cmp","","",85,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"ordering"}}],[11,"clone","","",85,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"fmt","","",85,{"inputs":[{"name":"linkedlist"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",85,null],[11,"start","core::ops","",87,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"end","","",88,{"inputs":[{"name":"rangeto"}],"output":{"name":"option"}}],[11,"start","","",89,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"end","","",89,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[6,"Output","::headers","",null,null],[11,"clone","collections::slice","",90,{"inputs":[{"name":"elementswaps"}],"output":{"name":"elementswaps"}}],[11,"new","","Creates an `ElementSwaps` iterator for a sequence of `length` elements.",90,{"inputs":[{"name":"elementswaps"},{"name":"usize"}],"output":{"name":"elementswaps"}}],[11,"borrow","collections::vec","",26,null],[11,"borrow_mut","","",26,null],[6,"Owned","::headers","",null,null],[11,"clone","collections::slice","",91,{"inputs":[{"name":"direction"}],"output":{"name":"direction"}}],[11,"clone","","",92,{"inputs":[{"name":"sizedirection"}],"output":{"name":"sizedirection"}}],[6,"Item","::headers","",null,null],[11,"next","collections::slice","",90,{"inputs":[{"name":"elementswaps"}],"output":{"name":"option"}}],[11,"size_hint","","",90,null],[6,"Item","::headers","",null,null],[11,"next","collections::slice","",93,{"inputs":[{"name":"permutations"}],"output":{"name":"option"}}],[11,"size_hint","","",93,null],[6,"Output","::headers","",null,null],[11,"clone","collections::str","",94,{"inputs":[{"name":"decompositiontype"}],"output":{"name":"decompositiontype"}}],[11,"clone","","",95,{"inputs":[{"name":"decompositions"}],"output":{"name":"decompositions"}}],[6,"Item","::headers","",null,null],[11,"next","collections::str","",95,{"inputs":[{"name":"decompositions"}],"output":{"name":"option"}}],[11,"size_hint","","",95,null],[11,"clone","","",96,{"inputs":[{"name":"recompositionstate"}],"output":{"name":"recompositionstate"}}],[11,"clone","","",97,{"inputs":[{"name":"recompositions"}],"output":{"name":"recompositions"}}],[6,"Item","::headers","",null,null],[11,"next","collections::str","",97,{"inputs":[{"name":"recompositions"}],"output":{"name":"option"}}],[11,"clone","","",98,{"inputs":[{"name":"utf16units"}],"output":{"name":"utf16units"}}],[6,"Item","::headers","",null,null],[11,"next","collections::str","",98,{"inputs":[{"name":"utf16units"}],"output":{"name":"option"}}],[11,"size_hint","","",98,null],[11,"borrow","collections::string","",99,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[6,"Owned","::headers","",null,null],[11,"fmt","core::str::pattern","",100,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",100,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",100,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",100,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",101,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[6,"Searcher","::headers","",null,null],[11,"into_searcher","core::str::pattern","",102,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",101,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",101,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",101,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",103,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"eq","","",104,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ne","","",104,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"clone","","",104,{"inputs":[{"name":"state"}],"output":{"name":"state"}}],[6,"Searcher","::headers","",null,null],[11,"haystack","core::str::pattern","",103,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",103,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",103,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",105,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",105,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",105,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",105,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",105,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",105,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",105,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",105,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[6,"Searcher","::headers","",null,null],[11,"clone","core::str::pattern","",106,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",106,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",106,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",106,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",106,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",106,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",106,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",106,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[6,"Searcher","::headers","",null,null],[11,"clone","core::str::pattern","",107,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",107,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",107,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",107,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",107,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",107,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",107,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",107,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[6,"Searcher","::headers","",null,null],[6,"Searcher","","",null,null],[11,"cmp","collections::string","",99,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",99,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"option"}}],[11,"lt","","",99,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"le","","",99,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"gt","","",99,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ge","","",99,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"clone","","",99,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"fmt","","",108,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",109,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new string buffer initialized with the empty string.",99,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new string buffer with the given capacity.\nThe string will be able to hold exactly `capacity` bytes without\nreallocating. If `capacity` is 0, the string will not allocate.",99,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"string"}}],[11,"from_str","","Creates a new string buffer from the given string.",99,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"from_utf8","","Returns the vector as a string buffer, if possible, taking care not to\ncopy it.",99,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a vector of bytes to a new UTF-8 string.\nAny invalid UTF-8 sequences are replaced with U+FFFD REPLACEMENT CHARACTER.",99,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `None`\nif `v` contains any invalid data.",99,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",99,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",99,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a new `String` without checking if\nit contains valid UTF-8. This is unsafe because it assumes that\nthe UTF-8-ness of the vector has already been validated.",99,{"inputs":[{"name":"string"},{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Returns the underlying byte buffer, encoded as UTF-8.",99,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"as_str","","Extracts a string slice containing the entire string.",99,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"push_str","","Pushes the given string onto this string buffer.",99,null],[11,"capacity","","Returns the number of bytes that this string buffer can hold without\nreallocating.",99,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `String`. The collection may reserve more space to avoid\nfrequent reallocations.",99,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more bytes to be\ninserted in the given `String`. Does nothing if the capacity is already\nsufficient.",99,null],[11,"shrink_to_fit","","Shrinks the capacity of this string buffer to match its length.",99,null],[11,"push","","Adds the given character to the end of the string.",99,null],[11,"as_bytes","","Works with the underlying buffer as a byte slice.",99,null],[11,"truncate","","Shortens a string to the specified length.",99,null],[11,"pop","","Removes the last character from the string buffer and returns it.\nReturns `None` if this string buffer is empty.",99,{"inputs":[{"name":"string"}],"output":{"name":"option"}}],[11,"remove","","Removes the character from the string buffer at byte position `idx` and\nreturns it.",99,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"char"}}],[11,"insert","","Inserts a character into the string buffer at byte position `idx`.",99,null],[11,"as_mut_vec","","Views the string buffer as a mutable sequence of bytes.",99,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"len","","Returns the number of bytes in this string.",99,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the string contains no bytes",99,{"inputs":[{"name":"string"}],"output":{"name":"bool"}}],[11,"clear","","Truncates the string, returning it to 0 length.",99,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars from start to end. The element range is\nremoved even if the iterator is not consumed until the end.",99,{"inputs":[{"name":"string"},{"name":"r"}],"output":{"name":"drain"}}],[11,"into_bytes","","Consumes this error, returning the bytes that were attempted to make a\n`String` with.",108,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"vec"}}],[11,"utf8_error","","Access the underlying UTF8-error that was the cause of this error.",108,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"utf8error"}}],[11,"fmt","","",108,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",109,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",99,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",99,{"inputs":[{"name":"string"},{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",99,null],[11,"extend","","",99,null],[6,"Searcher","::headers","",null,null],[11,"eq","collections::string","",99,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",99,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","","",99,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",99,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",99,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",99,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",74,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",74,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",74,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",74,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","collections::string","",99,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"ne","","",99,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",74,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",74,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"default","collections::string","",99,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"fmt","","",99,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",99,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",99,null],[6,"Output","::headers","",null,null],[11,"add","collections::string","",99,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[6,"Output","::headers","",null,null],[11,"index","collections::string","",99,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[6,"Output","::headers","",null,null],[11,"index","collections::string","",99,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[6,"Output","::headers","",null,null],[11,"index","collections::string","",99,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[6,"Output","::headers","",null,null],[11,"index","collections::string","",99,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[6,"Target","::headers","",null,null],[11,"deref","collections::string","",99,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[6,"Target","::headers","",null,null],[11,"deref","collections::string","",110,{"inputs":[{"name":"derefstring"}],"output":{"name":"string"}}],[11,"eq","","",111,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"ne","","",111,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"fmt","","",111,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",111,{"inputs":[{"name":"parseerror"}],"output":{"name":"parseerror"}}],[6,"Err","::headers","",null,null],[11,"from_str","collections::string","",99,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"as_ref","","",99,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"as_ref","","",99,null],[11,"from","","",99,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",74,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",74,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",99,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"into_cow","","",99,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"write_str","","",99,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",99,{"inputs":[{"name":"string"},{"name":"char"}],"output":{"name":"result"}}],[11,"drop","","",112,null],[6,"Item","::headers","",null,null],[11,"next","collections::string","",112,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",112,null],[11,"next_back","","",112,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"clone","collections::vec","",26,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"clone_from","","",26,null],[11,"hash","","",26,null],[6,"Output","::headers","",null,null],[11,"index","collections::vec","",26,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",26,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[6,"Output","::headers","",null,null],[11,"index","collections::vec","",26,null],[6,"Output","::headers","",null,null],[11,"index","collections::vec","",26,null],[6,"Output","::headers","",null,null],[11,"index","collections::vec","",26,null],[6,"Output","::headers","",null,null],[11,"index","collections::vec","",26,null],[11,"index_mut","","",26,null],[11,"index_mut","","",26,null],[11,"index_mut","","",26,null],[11,"index_mut","","",26,null],[6,"Target","::headers","",null,null],[11,"deref","collections::vec","",26,null],[11,"deref_mut","","",26,null],[11,"from_iter","","",26,{"inputs":[{"name":"vec"},{"name":"i"}],"output":{"name":"vec"}}],[6,"Item","::headers","",null,null],[6,"IntoIter","","",null,null],[11,"into_iter","collections::vec","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",26,{"inputs":[{"name":"vec"}],"output":{"name":"intoiter"}}],[6,"Item","::headers","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[11,"extend","collections::vec","",26,null],[11,"eq","","",26,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","collections::borrow","",74,null],[11,"ne","","",74,null],[11,"eq","","",74,null],[11,"ne","","",74,null],[11,"eq","","",74,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",74,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","collections::vec","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"partial_cmp","","",26,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"option"}}],[11,"cmp","","",26,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"ordering"}}],[11,"drop","","",26,null],[11,"default","","",26,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"fmt","","",26,{"inputs":[{"name":"vec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",26,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"as_ref","","",26,null],[11,"from","","",26,null],[11,"from","","",26,{"inputs":[{"name":"vec"},{"name":"str"}],"output":{"name":"vec"}}],[11,"from_iter","collections::borrow","",74,{"inputs":[{"name":"cow"},{"name":"i"}],"output":{"name":"cow"}}],[11,"into_cow","collections::vec","",26,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"into_inner","","Drops all items that have not yet been moved and returns the empty vector.",113,{"inputs":[{"name":"intoiter"}],"output":{"name":"vec"}}],[6,"Item","::headers","",null,null],[11,"next","collections::vec","",113,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",113,null],[11,"count","","",113,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next_back","","",113,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",113,null],[6,"Item","::headers","",null,null],[11,"next","collections::vec","",114,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",114,null],[11,"next_back","","",114,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"drop","","",114,null],[6,"Target","::headers","",null,null],[11,"deref","collections::vec","",115,{"inputs":[{"name":"derefvec"}],"output":{"name":"vec"}}],[11,"drop","","",115,null],[11,"drop","","",116,null],[11,"drop","","",117,null],[11,"clone","collections::vec_deque","",118,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"drop","","",118,null],[11,"default","","",118,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",118,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",118,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",118,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",118,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap","","Swaps elements at indices `i` and `j`.",118,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",118,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",118,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`Ringbuf`. The collection may reserve more space to avoid frequent reallocations.",118,null],[11,"shrink_to_fit","","Shrinks the capacity of the ringbuf as much as possible.",118,null],[11,"truncate","","Shortens a ringbuf, dropping excess elements from the back.",118,null],[11,"iter","","Returns a front-to-back iterator.",118,{"inputs":[{"name":"vecdeque"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",118,{"inputs":[{"name":"vecdeque"}],"output":{"name":"itermut"}}],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",118,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",118,null],[11,"len","","Returns the number of elements in the `VecDeque`.",118,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the buffer contains no elements",118,{"inputs":[{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"drain","","Creates a draining iterator that clears the `VecDeque` and iterates over\nthe removed items from start to end.",118,{"inputs":[{"name":"vecdeque"}],"output":{"name":"drain"}}],[11,"clear","","Clears the buffer, removing all values.",118,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",118,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",118,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",118,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",118,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",118,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"push_front","","Inserts an element first in the sequence.",118,null],[11,"push_back","","Appends an element to the back of a buffer",118,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",118,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"swap_back_remove","","Removes an element from anywhere in the ringbuf and returns it, replacing it with the last\nelement.",118,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap_front_remove","","Removes an element from anywhere in the ringbuf and returns it, replacing it with the first\nelement.",118,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"insert","","Inserts an element at position `i` within the ringbuf. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",118,null],[11,"remove","","Removes and returns the element at position `i` from the ringbuf.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `i` is out of bounds.",118,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"split_off","","Splits the collection into two at the given index.",118,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",118,null],[11,"retain","","Retains only the elements specified by the predicate.",118,null],[11,"resize","","Modifies the ringbuf in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",118,null],[11,"clone","","",119,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[6,"Item","::headers","",null,null],[11,"next","collections::vec_deque","",119,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",119,null],[11,"next_back","","",119,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"indexable","","",119,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"idx","","",119,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[6,"Item","::headers","",null,null],[11,"next","collections::vec_deque","",120,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",120,null],[11,"next_back","","",120,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",121,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[6,"Item","::headers","",null,null],[11,"next","collections::vec_deque","",121,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",121,null],[11,"next_back","","",121,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",122,null],[6,"Item","::headers","",null,null],[11,"next","collections::vec_deque","",122,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",122,null],[11,"next_back","","",122,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"eq","","",118,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",118,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"cmp","","",118,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"ordering"}}],[11,"hash","","",118,null],[6,"Output","::headers","",null,null],[11,"index","collections::vec_deque","",118,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"index_mut","","",118,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"from_iter","","",118,{"inputs":[{"name":"vecdeque"},{"name":"t"}],"output":{"name":"vecdeque"}}],[6,"Item","::headers","",null,null],[6,"IntoIter","","",null,null],[11,"into_iter","collections::vec_deque","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",118,{"inputs":[{"name":"vecdeque"}],"output":{"name":"intoiter"}}],[6,"Item","::headers","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[11,"extend","collections::vec_deque","",118,null],[11,"fmt","","",118,{"inputs":[{"name":"vecdeque"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","collections::vec_map","",123,{"inputs":[{"name":"vecmap"}],"output":{"name":"vecmap"}}],[11,"clone","","",123,{"inputs":[{"name":"vecmap"}],"output":{"name":"vecmap"}}],[11,"clone_from","","",123,null],[11,"hash","","",123,null],[11,"new","","Creates an empty `VecMap`.",123,{"inputs":[{"name":"vecmap"}],"output":{"name":"vecmap"}}],[11,"with_capacity","","Creates an empty `VecMap` with space for at least `capacity`\nelements before resizing.",123,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"vecmap"}}],[11,"capacity","","Returns the number of elements the `VecMap` can hold without\nreallocating.",123,{"inputs":[{"name":"vecmap"}],"output":{"name":"usize"}}],[11,"reserve_len","","Reserves capacity for the given `VecMap` to contain `len` distinct keys.\nIn the case of `VecMap` this means reallocations will not occur as long\nas all inserted keys are less than `len`.",123,null],[11,"reserve_len_exact","","Reserves the minimum capacity for the given `VecMap` to contain `len` distinct keys.\nIn the case of `VecMap` this means reallocations will not occur as long as all inserted\nkeys are less than `len`.",123,null],[11,"keys","","Returns an iterator visiting all keys in ascending order of the keys.\nThe iterator's element type is `usize`.",123,{"inputs":[{"name":"vecmap"}],"output":{"name":"keys"}}],[11,"values","","Returns an iterator visiting all values in ascending order of the keys.\nThe iterator's element type is `&'r V`.",123,{"inputs":[{"name":"vecmap"}],"output":{"name":"values"}}],[11,"iter","","Returns an iterator visiting all key-value pairs in ascending order of the keys.\nThe iterator's element type is `(usize, &'r V)`.",123,{"inputs":[{"name":"vecmap"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns an iterator visiting all key-value pairs in ascending order of the keys,\nwith mutable references to the values.\nThe iterator's element type is `(usize, &'r mut V)`.",123,{"inputs":[{"name":"vecmap"}],"output":{"name":"itermut"}}],[11,"append","","Moves all elements from `other` into the map while overwriting existing keys.",123,null],[11,"split_off","","Splits the collection into two at the given key.",123,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"vecmap"}}],[11,"drain","","Returns an iterator visiting all key-value pairs in ascending order of\nthe keys, emptying (but not consuming) the original `VecMap`.\nThe iterator's element type is `(usize, &'r V)`. Keeps the allocated memory for reuse.",123,{"inputs":[{"name":"vecmap"}],"output":{"name":"drain"}}],[11,"len","","Returns the number of elements in the map.",123,{"inputs":[{"name":"vecmap"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",123,{"inputs":[{"name":"vecmap"}],"output":{"name":"bool"}}],[11,"clear","","Clears the map, removing all key-value pairs.",123,null],[11,"get","","Returns a reference to the value corresponding to the key.",123,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"option"}}],[11,"contains_key","","Returns true if the map contains a value for the specified key.",123,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",123,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"option"}}],[11,"insert","","Inserts a key-value pair into the map. If the key already had a value\npresent in the map, that value is returned. Otherwise, `None` is returned.",123,{"inputs":[{"name":"vecmap"},{"name":"usize"},{"name":"v"}],"output":{"name":"option"}}],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",123,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"option"}}],[11,"entry","","Gets the given key's corresponding entry in the map for in-place manipulation.",123,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"entry"}}],[11,"get","","Returns a mutable reference to the entry if occupied, or the VacantEntry if vacant",124,{"inputs":[{"name":"entry"}],"output":{"name":"result"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",124,{"inputs":[{"name":"entry"},{"name":"v"}],"output":{"name":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",124,{"inputs":[{"name":"entry"},{"name":"f"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the VacantEntry's key,\nand returns a mutable reference to it.",125,{"inputs":[{"name":"vacantentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"get","","Gets a reference to the value in the entry.",126,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",126,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"into_mut","","Converts the entry into a mutable reference to its value.",126,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the OccupiedEntry's key,\nand returns the entry's old value.",126,{"inputs":[{"name":"occupiedentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"remove","","Takes the value of the entry out of the map, and returns it.",126,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"eq","","",123,{"inputs":[{"name":"vecmap"},{"name":"vecmap"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",123,{"inputs":[{"name":"vecmap"},{"name":"vecmap"}],"output":{"name":"option"}}],[11,"cmp","","",123,{"inputs":[{"name":"vecmap"},{"name":"vecmap"}],"output":{"name":"ordering"}}],[11,"fmt","","",123,{"inputs":[{"name":"vecmap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",123,{"inputs":[{"name":"vecmap"},{"name":"i"}],"output":{"name":"vecmap"}}],[6,"Item","::headers","",null,null],[6,"IntoIter","","",null,null],[11,"into_iter","collections::vec_map","Returns an iterator visiting all key-value pairs in ascending order of\nthe keys, consuming the original `VecMap`.\nThe iterator's element type is `(usize, &'r V)`.",123,{"inputs":[{"name":"vecmap"}],"output":{"name":"intoiter"}}],[6,"Item","::headers","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[11,"extend","collections::vec_map","",123,null],[6,"Output","::headers","",null,null],[11,"index","collections::vec_map","",123,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"v"}}],[6,"Output","::headers","",null,null],[11,"index","collections::vec_map","",123,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"v"}}],[11,"index_mut","","",123,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"v"}}],[11,"index_mut","","",123,{"inputs":[{"name":"vecmap"},{"name":"usize"}],"output":{"name":"v"}}],[11,"clone","","",127,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[6,"Item","::headers","",null,null],[11,"next","collections::vec_map","",127,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",127,null],[11,"next_back","","",127,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[6,"Item","::headers","",null,null],[11,"next","collections::vec_map","",128,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",128,null],[11,"next_back","","",128,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",129,{"inputs":[{"name":"keys"}],"output":{"name":"keys"}}],[11,"clone","","",130,{"inputs":[{"name":"values"}],"output":{"name":"values"}}],[6,"Item","::headers","",null,null],[11,"next","collections::vec_map","",131,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",131,null],[11,"next_back","","",131,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[6,"Item","::headers","",null,null],[11,"next","collections::vec_map","",129,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"size_hint","","",129,null],[11,"next_back","","",129,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[6,"Item","::headers","",null,null],[11,"next","collections::vec_map","",130,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"size_hint","","",130,null],[11,"next_back","","",130,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[6,"Item","::headers","",null,null],[11,"next","collections::vec_map","",132,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",132,null],[11,"next_back","","",132,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"eq","collections","",133,{"inputs":[{"name":"bound"},{"name":"bound"}],"output":{"name":"bool"}}],[11,"ne","","",133,{"inputs":[{"name":"bound"},{"name":"bound"}],"output":{"name":"bool"}}],[11,"hash","","",133,null],[11,"fmt","","",133,{"inputs":[{"name":"bound"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",133,{"inputs":[{"name":"bound"}],"output":{"name":"bound"}}],[11,"new","alloc::boxed","Allocates memory on the heap and then moves `x` into it.",4,{"inputs":[{"name":"box"},{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from the raw pointer.",4,null],[11,"default","","",4,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"default","","",4,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box's contents.",4,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone_from","","Copies `source`'s contents into `self` without creating a new allocation.",4,null],[11,"eq","","",4,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"cmp","","",4,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"ordering"}}],[11,"hash","","",4,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",4,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",4,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Target","::headers","",null,null],[11,"deref","alloc::boxed","",4,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"deref_mut","","",4,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[6,"Item","::headers","",null,null],[11,"next","alloc::boxed","",4,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"size_hint","","",4,null],[11,"next_back","","",4,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[6,"Output","::headers","",null,null],[6,"Output","","",null,null],[11,"call_once","alloc::boxed","",4,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[6,"Output","::headers","",null,null],[11,"call_once","alloc::boxed","",4,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[6,"Target","::headers","",null,null],[11,"deref","hyper::header::common::accept","",25,{"inputs":[{"name":"accept"}],"output":{"name":"vec"}}],[11,"deref_mut","","",25,{"inputs":[{"name":"accept"}],"output":{"name":"vec"}}],[11,"header_name","","",25,{"inputs":[{"name":"accept"}],"output":{"name":"str"}}],[11,"parse_header","","",25,null],[11,"fmt_header","","",25,{"inputs":[{"name":"accept"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",25,{"inputs":[{"name":"accept"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::access_control_allow_headers","",134,{"inputs":[{"name":"accesscontrolallowheaders"},{"name":"accesscontrolallowheaders"}],"output":{"name":"bool"}}],[11,"ne","","",134,{"inputs":[{"name":"accesscontrolallowheaders"},{"name":"accesscontrolallowheaders"}],"output":{"name":"bool"}}],[11,"fmt","","",134,{"inputs":[{"name":"accesscontrolallowheaders"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",134,{"inputs":[{"name":"accesscontrolallowheaders"}],"output":{"name":"accesscontrolallowheaders"}}],[6,"Target","::headers","",null,null],[11,"deref","hyper::header::common::access_control_allow_headers","",134,{"inputs":[{"name":"accesscontrolallowheaders"}],"output":{"name":"vec"}}],[11,"deref_mut","","",134,{"inputs":[{"name":"accesscontrolallowheaders"}],"output":{"name":"vec"}}],[11,"header_name","","",134,{"inputs":[{"name":"accesscontrolallowheaders"}],"output":{"name":"str"}}],[11,"parse_header","","",134,null],[11,"fmt_header","","",134,{"inputs":[{"name":"accesscontrolallowheaders"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",134,{"inputs":[{"name":"accesscontrolallowheaders"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::access_control_allow_methods","",135,{"inputs":[{"name":"accesscontrolallowmethods"},{"name":"accesscontrolallowmethods"}],"output":{"name":"bool"}}],[11,"ne","","",135,{"inputs":[{"name":"accesscontrolallowmethods"},{"name":"accesscontrolallowmethods"}],"output":{"name":"bool"}}],[11,"fmt","","",135,{"inputs":[{"name":"accesscontrolallowmethods"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",135,{"inputs":[{"name":"accesscontrolallowmethods"}],"output":{"name":"accesscontrolallowmethods"}}],[6,"Target","::headers","",null,null],[11,"deref","hyper::header::common::access_control_allow_methods","",135,{"inputs":[{"name":"accesscontrolallowmethods"}],"output":{"name":"vec"}}],[11,"deref_mut","","",135,{"inputs":[{"name":"accesscontrolallowmethods"}],"output":{"name":"vec"}}],[11,"header_name","","",135,{"inputs":[{"name":"accesscontrolallowmethods"}],"output":{"name":"str"}}],[11,"parse_header","","",135,null],[11,"fmt_header","","",135,{"inputs":[{"name":"accesscontrolallowmethods"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",135,{"inputs":[{"name":"accesscontrolallowmethods"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","hyper::header::common::access_control_allow_origin","",136,{"inputs":[{"name":"accesscontrolalloworigin"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",136,{"inputs":[{"name":"accesscontrolalloworigin"},{"name":"accesscontrolalloworigin"}],"output":{"name":"bool"}}],[11,"ne","","",136,{"inputs":[{"name":"accesscontrolalloworigin"},{"name":"accesscontrolalloworigin"}],"output":{"name":"bool"}}],[11,"clone","","",136,{"inputs":[{"name":"accesscontrolalloworigin"}],"output":{"name":"accesscontrolalloworigin"}}],[11,"header_name","","",136,{"inputs":[{"name":"accesscontrolalloworigin"}],"output":{"name":"str"}}],[11,"parse_header","","",136,null],[11,"fmt_header","","",136,{"inputs":[{"name":"accesscontrolalloworigin"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",136,{"inputs":[{"name":"accesscontrolalloworigin"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::access_control_max_age","",137,{"inputs":[{"name":"accesscontrolmaxage"},{"name":"accesscontrolmaxage"}],"output":{"name":"bool"}}],[11,"ne","","",137,{"inputs":[{"name":"accesscontrolmaxage"},{"name":"accesscontrolmaxage"}],"output":{"name":"bool"}}],[11,"fmt","","",137,{"inputs":[{"name":"accesscontrolmaxage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",137,{"inputs":[{"name":"accesscontrolmaxage"}],"output":{"name":"accesscontrolmaxage"}}],[6,"Target","::headers","",null,null],[11,"deref","hyper::header::common::access_control_max_age","",137,{"inputs":[{"name":"accesscontrolmaxage"}],"output":{"name":"u32"}}],[11,"deref_mut","","",137,{"inputs":[{"name":"accesscontrolmaxage"}],"output":{"name":"u32"}}],[11,"header_name","","",137,{"inputs":[{"name":"accesscontrolmaxage"}],"output":{"name":"str"}}],[11,"parse_header","","",137,null],[11,"fmt_header","","",137,{"inputs":[{"name":"accesscontrolmaxage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",137,{"inputs":[{"name":"accesscontrolmaxage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::access_control_request_headers","",138,{"inputs":[{"name":"accesscontrolrequestheaders"},{"name":"accesscontrolrequestheaders"}],"output":{"name":"bool"}}],[11,"ne","","",138,{"inputs":[{"name":"accesscontrolrequestheaders"},{"name":"accesscontrolrequestheaders"}],"output":{"name":"bool"}}],[11,"fmt","","",138,{"inputs":[{"name":"accesscontrolrequestheaders"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",138,{"inputs":[{"name":"accesscontrolrequestheaders"}],"output":{"name":"accesscontrolrequestheaders"}}],[6,"Target","::headers","",null,null],[11,"deref","hyper::header::common::access_control_request_headers","",138,{"inputs":[{"name":"accesscontrolrequestheaders"}],"output":{"name":"vec"}}],[11,"deref_mut","","",138,{"inputs":[{"name":"accesscontrolrequestheaders"}],"output":{"name":"vec"}}],[11,"header_name","","",138,{"inputs":[{"name":"accesscontrolrequestheaders"}],"output":{"name":"str"}}],[11,"parse_header","","",138,null],[11,"fmt_header","","",138,{"inputs":[{"name":"accesscontrolrequestheaders"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",138,{"inputs":[{"name":"accesscontrolrequestheaders"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::access_control_request_method","",139,{"inputs":[{"name":"accesscontrolrequestmethod"},{"name":"accesscontrolrequestmethod"}],"output":{"name":"bool"}}],[11,"ne","","",139,{"inputs":[{"name":"accesscontrolrequestmethod"},{"name":"accesscontrolrequestmethod"}],"output":{"name":"bool"}}],[11,"fmt","","",139,{"inputs":[{"name":"accesscontrolrequestmethod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",139,{"inputs":[{"name":"accesscontrolrequestmethod"}],"output":{"name":"accesscontrolrequestmethod"}}],[6,"Target","::headers","",null,null],[11,"deref","hyper::header::common::access_control_request_method","",139,{"inputs":[{"name":"accesscontrolrequestmethod"}],"output":{"name":"method"}}],[11,"deref_mut","","",139,{"inputs":[{"name":"accesscontrolrequestmethod"}],"output":{"name":"method"}}],[11,"header_name","","",139,{"inputs":[{"name":"accesscontrolrequestmethod"}],"output":{"name":"str"}}],[11,"parse_header","","",139,null],[11,"fmt_header","","",139,{"inputs":[{"name":"accesscontrolrequestmethod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",139,{"inputs":[{"name":"accesscontrolrequestmethod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::accept_charset","",140,{"inputs":[{"name":"acceptcharset"},{"name":"acceptcharset"}],"output":{"name":"bool"}}],[11,"ne","","",140,{"inputs":[{"name":"acceptcharset"},{"name":"acceptcharset"}],"output":{"name":"bool"}}],[11,"fmt","","",140,{"inputs":[{"name":"acceptcharset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",140,{"inputs":[{"name":"acceptcharset"}],"output":{"name":"acceptcharset"}}],[6,"Target","::headers","",null,null],[11,"deref","hyper::header::common::accept_charset","",140,{"inputs":[{"name":"acceptcharset"}],"output":{"name":"vec"}}],[11,"deref_mut","","",140,{"inputs":[{"name":"acceptcharset"}],"output":{"name":"vec"}}],[11,"header_name","","",140,{"inputs":[{"name":"acceptcharset"}],"output":{"name":"str"}}],[11,"parse_header","","",140,null],[11,"fmt_header","","",140,{"inputs":[{"name":"acceptcharset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",140,{"inputs":[{"name":"acceptcharset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::accept_encoding","",141,{"inputs":[{"name":"acceptencoding"},{"name":"acceptencoding"}],"output":{"name":"bool"}}],[11,"ne","","",141,{"inputs":[{"name":"acceptencoding"},{"name":"acceptencoding"}],"output":{"name":"bool"}}],[11,"fmt","","",141,{"inputs":[{"name":"acceptencoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",141,{"inputs":[{"name":"acceptencoding"}],"output":{"name":"acceptencoding"}}],[6,"Target","::headers","",null,null],[11,"deref","hyper::header::common::accept_encoding","",141,{"inputs":[{"name":"acceptencoding"}],"output":{"name":"vec"}}],[11,"deref_mut","","",141,{"inputs":[{"name":"acceptencoding"}],"output":{"name":"vec"}}],[11,"header_name","","",141,{"inputs":[{"name":"acceptencoding"}],"output":{"name":"str"}}],[11,"parse_header","","",141,null],[11,"fmt_header","","",141,{"inputs":[{"name":"acceptencoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",141,{"inputs":[{"name":"acceptencoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::accept_language","",142,{"inputs":[{"name":"acceptlanguage"},{"name":"acceptlanguage"}],"output":{"name":"bool"}}],[11,"ne","","",142,{"inputs":[{"name":"acceptlanguage"},{"name":"acceptlanguage"}],"output":{"name":"bool"}}],[11,"fmt","","",142,{"inputs":[{"name":"acceptlanguage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",142,{"inputs":[{"name":"acceptlanguage"}],"output":{"name":"acceptlanguage"}}],[6,"Target","::headers","",null,null],[11,"deref","hyper::header::common::accept_language","",142,{"inputs":[{"name":"acceptlanguage"}],"output":{"name":"vec"}}],[11,"deref_mut","","",142,{"inputs":[{"name":"acceptlanguage"}],"output":{"name":"vec"}}],[11,"header_name","","",142,{"inputs":[{"name":"acceptlanguage"}],"output":{"name":"str"}}],[11,"parse_header","","",142,null],[11,"fmt_header","","",142,{"inputs":[{"name":"acceptlanguage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",142,{"inputs":[{"name":"acceptlanguage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::accept_ranges","",143,{"inputs":[{"name":"acceptranges"},{"name":"acceptranges"}],"output":{"name":"bool"}}],[11,"ne","","",143,{"inputs":[{"name":"acceptranges"},{"name":"acceptranges"}],"output":{"name":"bool"}}],[11,"fmt","","",143,{"inputs":[{"name":"acceptranges"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",143,{"inputs":[{"name":"acceptranges"}],"output":{"name":"acceptranges"}}],[6,"Target","::headers","",null,null],[11,"deref","hyper::header::common::accept_ranges","",143,{"inputs":[{"name":"acceptranges"}],"output":{"name":"vec"}}],[11,"deref_mut","","",143,{"inputs":[{"name":"acceptranges"}],"output":{"name":"vec"}}],[11,"header_name","","",143,{"inputs":[{"name":"acceptranges"}],"output":{"name":"str"}}],[11,"parse_header","","",143,null],[11,"fmt_header","","",143,{"inputs":[{"name":"acceptranges"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",143,{"inputs":[{"name":"acceptranges"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",144,{"inputs":[{"name":"rangeunit"},{"name":"rangeunit"}],"output":{"name":"bool"}}],[11,"ne","","",144,{"inputs":[{"name":"rangeunit"},{"name":"rangeunit"}],"output":{"name":"bool"}}],[11,"fmt","","",144,{"inputs":[{"name":"rangeunit"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",144,{"inputs":[{"name":"rangeunit"}],"output":{"name":"rangeunit"}}],[6,"Err","::headers","",null,null],[11,"from_str","hyper::header::common::accept_ranges","",144,{"inputs":[{"name":"rangeunit"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",144,{"inputs":[{"name":"rangeunit"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::allow","",145,{"inputs":[{"name":"allow"},{"name":"allow"}],"output":{"name":"bool"}}],[11,"ne","","",145,{"inputs":[{"name":"allow"},{"name":"allow"}],"output":{"name":"bool"}}],[11,"fmt","","",145,{"inputs":[{"name":"allow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",145,{"inputs":[{"name":"allow"}],"output":{"name":"allow"}}],[6,"Target","::headers","",null,null],[11,"deref","hyper::header::common::allow","",145,{"inputs":[{"name":"allow"}],"output":{"name":"vec"}}],[11,"deref_mut","","",145,{"inputs":[{"name":"allow"}],"output":{"name":"vec"}}],[11,"header_name","","",145,{"inputs":[{"name":"allow"}],"output":{"name":"str"}}],[11,"parse_header","","",145,null],[11,"fmt_header","","",145,{"inputs":[{"name":"allow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",145,{"inputs":[{"name":"allow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","hyper::header::common::authorization","",146,{"inputs":[{"name":"authorization"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",146,{"inputs":[{"name":"authorization"},{"name":"authorization"}],"output":{"name":"bool"}}],[11,"ne","","",146,{"inputs":[{"name":"authorization"},{"name":"authorization"}],"output":{"name":"bool"}}],[11,"clone","","",146,{"inputs":[{"name":"authorization"}],"output":{"name":"authorization"}}],[6,"Target","::headers","",null,null],[11,"deref","hyper::header::common::authorization","",146,{"inputs":[{"name":"authorization"}],"output":{"name":"s"}}],[11,"deref_mut","","",146,{"inputs":[{"name":"authorization"}],"output":{"name":"s"}}],[11,"header_name","","",146,{"inputs":[{"name":"authorization"}],"output":{"name":"str"}}],[11,"parse_header","","",146,null],[11,"fmt_header","","",146,{"inputs":[{"name":"authorization"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"scheme","collections::string","",99,{"inputs":[{"name":"string"}],"output":{"name":"option"}}],[11,"fmt_scheme","","",99,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","hyper::header::common::authorization","",147,{"inputs":[{"name":"basic"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",147,{"inputs":[{"name":"basic"},{"name":"basic"}],"output":{"name":"bool"}}],[11,"ne","","",147,{"inputs":[{"name":"basic"},{"name":"basic"}],"output":{"name":"bool"}}],[11,"clone","","",147,{"inputs":[{"name":"basic"}],"output":{"name":"basic"}}],[11,"scheme","","",147,{"inputs":[{"name":"basic"}],"output":{"name":"option"}}],[11,"fmt_scheme","","",147,{"inputs":[{"name":"basic"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","::headers","",null,null],[11,"from_str","hyper::header::common::authorization","",147,{"inputs":[{"name":"basic"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","hyper::header::common::cache_control","",148,{"inputs":[{"name":"cachecontrol"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",148,{"inputs":[{"name":"cachecontrol"}],"output":{"name":"cachecontrol"}}],[11,"eq","","",148,{"inputs":[{"name":"cachecontrol"},{"name":"cachecontrol"}],"output":{"name":"bool"}}],[11,"ne","","",148,{"inputs":[{"name":"cachecontrol"},{"name":"cachecontrol"}],"output":{"name":"bool"}}],[6,"Target","::headers","",null,null],[11,"deref","hyper::header::common::cache_control","",148,{"inputs":[{"name":"cachecontrol"}],"output":{"name":"vec"}}],[11,"deref_mut","","",148,{"inputs":[{"name":"cachecontrol"}],"output":{"name":"vec"}}],[11,"header_name","","",148,{"inputs":[{"name":"cachecontrol"}],"output":{"name":"str"}}],[11,"parse_header","","",148,null],[11,"fmt_header","","",148,{"inputs":[{"name":"cachecontrol"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",149,{"inputs":[{"name":"cachedirective"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",149,{"inputs":[{"name":"cachedirective"}],"output":{"name":"cachedirective"}}],[11,"eq","","",149,{"inputs":[{"name":"cachedirective"},{"name":"cachedirective"}],"output":{"name":"bool"}}],[11,"ne","","",149,{"inputs":[{"name":"cachedirective"},{"name":"cachedirective"}],"output":{"name":"bool"}}],[11,"fmt","","",149,{"inputs":[{"name":"cachedirective"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","::headers","",null,null],[11,"from_str","hyper::header::common::cache_control","",149,{"inputs":[{"name":"cachedirective"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","hyper::header::common::cookie","",150,{"inputs":[{"name":"cookie"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",150,{"inputs":[{"name":"cookie"},{"name":"cookie"}],"output":{"name":"bool"}}],[11,"ne","","",150,{"inputs":[{"name":"cookie"},{"name":"cookie"}],"output":{"name":"bool"}}],[11,"clone","","",150,{"inputs":[{"name":"cookie"}],"output":{"name":"cookie"}}],[6,"Target","::headers","",null,null],[11,"deref","hyper::header::common::cookie","",150,{"inputs":[{"name":"cookie"}],"output":{"name":"vec"}}],[11,"deref_mut","","",150,{"inputs":[{"name":"cookie"}],"output":{"name":"vec"}}],[11,"header_name","","",150,{"inputs":[{"name":"cookie"}],"output":{"name":"str"}}],[11,"parse_header","","",150,null],[11,"fmt_header","","",150,{"inputs":[{"name":"cookie"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_cookie_jar","","This method can be used to create CookieJar that can be used\nto manipulate cookies and create a corresponding `SetCookie` header afterwards.",150,null],[11,"from_cookie_jar","","Extracts all cookies from `CookieJar` and creates Cookie header.\nUseful for clients.",150,{"inputs":[{"name":"cookie"},{"name":"cookiejar"}],"output":{"name":"cookie"}}],[11,"fmt","hyper::header::common::connection","",151,{"inputs":[{"name":"connectionoption"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",151,{"inputs":[{"name":"connectionoption"},{"name":"connectionoption"}],"output":{"name":"bool"}}],[11,"ne","","",151,{"inputs":[{"name":"connectionoption"},{"name":"connectionoption"}],"output":{"name":"bool"}}],[11,"clone","","",151,{"inputs":[{"name":"connectionoption"}],"output":{"name":"connectionoption"}}],[6,"Err","::headers","",null,null],[11,"from_str","hyper::header::common::connection","",151,{"inputs":[{"name":"connectionoption"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",151,{"inputs":[{"name":"connectionoption"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",152,{"inputs":[{"name":"connection"},{"name":"connection"}],"output":{"name":"bool"}}],[11,"ne","","",152,{"inputs":[{"name":"connection"},{"name":"connection"}],"output":{"name":"bool"}}],[11,"fmt","","",152,{"inputs":[{"name":"connection"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",152,{"inputs":[{"name":"connection"}],"output":{"name":"connection"}}],[6,"Target","::headers","",null,null],[11,"deref","hyper::header::common::connection","",152,{"inputs":[{"name":"connection"}],"output":{"name":"vec"}}],[11,"deref_mut","","",152,{"inputs":[{"name":"connection"}],"output":{"name":"vec"}}],[11,"header_name","","",152,{"inputs":[{"name":"connection"}],"output":{"name":"str"}}],[11,"parse_header","","",152,null],[11,"fmt_header","","",152,{"inputs":[{"name":"connection"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",152,{"inputs":[{"name":"connection"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"close","","A constructor to easily create a `Connection: close` header.",152,{"inputs":[{"name":"connection"}],"output":{"name":"connection"}}],[11,"keep_alive","","A constructor to easily create a `Connection: keep-alive` header.",152,{"inputs":[{"name":"connection"}],"output":{"name":"connection"}}],[11,"eq","hyper::header::common::content_encoding","",153,{"inputs":[{"name":"contentencoding"},{"name":"contentencoding"}],"output":{"name":"bool"}}],[11,"ne","","",153,{"inputs":[{"name":"contentencoding"},{"name":"contentencoding"}],"output":{"name":"bool"}}],[11,"fmt","","",153,{"inputs":[{"name":"contentencoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",153,{"inputs":[{"name":"contentencoding"}],"output":{"name":"contentencoding"}}],[6,"Target","::headers","",null,null],[11,"deref","hyper::header::common::content_encoding","",153,{"inputs":[{"name":"contentencoding"}],"output":{"name":"vec"}}],[11,"deref_mut","","",153,{"inputs":[{"name":"contentencoding"}],"output":{"name":"vec"}}],[11,"header_name","","",153,{"inputs":[{"name":"contentencoding"}],"output":{"name":"str"}}],[11,"parse_header","","",153,null],[11,"fmt_header","","",153,{"inputs":[{"name":"contentencoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",153,{"inputs":[{"name":"contentencoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::content_language","",154,{"inputs":[{"name":"contentlanguage"},{"name":"contentlanguage"}],"output":{"name":"bool"}}],[11,"ne","","",154,{"inputs":[{"name":"contentlanguage"},{"name":"contentlanguage"}],"output":{"name":"bool"}}],[11,"fmt","","",154,{"inputs":[{"name":"contentlanguage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",154,{"inputs":[{"name":"contentlanguage"}],"output":{"name":"contentlanguage"}}],[6,"Target","::headers","",null,null],[11,"deref","hyper::header::common::content_language","",154,{"inputs":[{"name":"contentlanguage"}],"output":{"name":"vec"}}],[11,"deref_mut","","",154,{"inputs":[{"name":"contentlanguage"}],"output":{"name":"vec"}}],[11,"header_name","","",154,{"inputs":[{"name":"contentlanguage"}],"output":{"name":"str"}}],[11,"parse_header","","",154,null],[11,"fmt_header","","",154,{"inputs":[{"name":"contentlanguage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",154,{"inputs":[{"name":"contentlanguage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::content_length","",155,{"inputs":[{"name":"contentlength"},{"name":"contentlength"}],"output":{"name":"bool"}}],[11,"ne","","",155,{"inputs":[{"name":"contentlength"},{"name":"contentlength"}],"output":{"name":"bool"}}],[11,"fmt","","",155,{"inputs":[{"name":"contentlength"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",155,{"inputs":[{"name":"contentlength"}],"output":{"name":"contentlength"}}],[6,"Target","::headers","",null,null],[11,"deref","hyper::header::common::content_length","",155,{"inputs":[{"name":"contentlength"}],"output":{"name":"u64"}}],[11,"deref_mut","","",155,{"inputs":[{"name":"contentlength"}],"output":{"name":"u64"}}],[11,"header_name","","",155,{"inputs":[{"name":"contentlength"}],"output":{"name":"str"}}],[11,"parse_header","","",155,null],[11,"fmt_header","","",155,{"inputs":[{"name":"contentlength"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",155,{"inputs":[{"name":"contentlength"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::content_type","",156,{"inputs":[{"name":"contenttype"},{"name":"contenttype"}],"output":{"name":"bool"}}],[11,"ne","","",156,{"inputs":[{"name":"contenttype"},{"name":"contenttype"}],"output":{"name":"bool"}}],[11,"fmt","","",156,{"inputs":[{"name":"contenttype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",156,{"inputs":[{"name":"contenttype"}],"output":{"name":"contenttype"}}],[11,"fmt","mime","",157,{"inputs":[{"name":"mime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",157,{"inputs":[{"name":"mime"},{"name":"mime"}],"output":{"name":"bool"}}],[11,"ne","","",157,{"inputs":[{"name":"mime"},{"name":"mime"}],"output":{"name":"bool"}}],[11,"clone","","",157,{"inputs":[{"name":"mime"}],"output":{"name":"mime"}}],[11,"fmt","","",158,{"inputs":[{"name":"toplevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",158,{"inputs":[{"name":"toplevel"}],"output":{"name":"toplevel"}}],[11,"eq","","",158,{"inputs":[{"name":"toplevel"},{"name":"toplevel"}],"output":{"name":"bool"}}],[11,"fmt","","",158,{"inputs":[{"name":"toplevel"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","::headers","",null,null],[11,"from_str","mime","",158,{"inputs":[{"name":"toplevel"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",159,{"inputs":[{"name":"sublevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",159,{"inputs":[{"name":"sublevel"}],"output":{"name":"sublevel"}}],[11,"eq","","",159,{"inputs":[{"name":"sublevel"},{"name":"sublevel"}],"output":{"name":"bool"}}],[11,"fmt","","",159,{"inputs":[{"name":"sublevel"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","::headers","",null,null],[11,"from_str","mime","",159,{"inputs":[{"name":"sublevel"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",160,{"inputs":[{"name":"attr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",160,{"inputs":[{"name":"attr"}],"output":{"name":"attr"}}],[11,"eq","","",160,{"inputs":[{"name":"attr"},{"name":"attr"}],"output":{"name":"bool"}}],[11,"fmt","","",160,{"inputs":[{"name":"attr"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","::headers","",null,null],[11,"from_str","mime","",160,{"inputs":[{"name":"attr"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",161,{"inputs":[{"name":"value"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",161,{"inputs":[{"name":"value"}],"output":{"name":"value"}}],[11,"eq","","",161,{"inputs":[{"name":"value"},{"name":"value"}],"output":{"name":"bool"}}],[11,"fmt","","",161,{"inputs":[{"name":"value"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","::headers","",null,null],[11,"from_str","mime","",161,{"inputs":[{"name":"value"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",157,{"inputs":[{"name":"mime"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","::headers","",null,null],[11,"from_str","mime","",157,{"inputs":[{"name":"mime"},{"name":"str"}],"output":{"name":"result"}}],[6,"Target","::headers","",null,null],[11,"deref","hyper::header::common::content_type","",156,{"inputs":[{"name":"contenttype"}],"output":{"name":"mime"}}],[11,"deref_mut","","",156,{"inputs":[{"name":"contenttype"}],"output":{"name":"mime"}}],[11,"header_name","","",156,{"inputs":[{"name":"contenttype"}],"output":{"name":"str"}}],[11,"parse_header","","",156,null],[11,"fmt_header","","",156,{"inputs":[{"name":"contenttype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",156,{"inputs":[{"name":"contenttype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"json","","A constructor  to easily create a `Content-Type: application/json; charset=utf-8` header.",156,{"inputs":[{"name":"contenttype"}],"output":{"name":"contenttype"}}],[11,"plaintext","","A constructor  to easily create a `Content-Type: text/plain; charset=utf-8` header.",156,{"inputs":[{"name":"contenttype"}],"output":{"name":"contenttype"}}],[11,"html","","A constructor  to easily create a `Content-Type: text/html; charset=utf-8` header.",156,{"inputs":[{"name":"contenttype"}],"output":{"name":"contenttype"}}],[11,"jpeg","","A constructor  to easily create a `Content-Type: image/jpeg` header.",156,{"inputs":[{"name":"contenttype"}],"output":{"name":"contenttype"}}],[11,"png","","A constructor  to easily create a `Content-Type: image/png` header.",156,{"inputs":[{"name":"contenttype"}],"output":{"name":"contenttype"}}],[11,"eq","hyper::header::common::date","",162,{"inputs":[{"name":"date"},{"name":"date"}],"output":{"name":"bool"}}],[11,"ne","","",162,{"inputs":[{"name":"date"},{"name":"date"}],"output":{"name":"bool"}}],[11,"fmt","","",162,{"inputs":[{"name":"date"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",162,{"inputs":[{"name":"date"}],"output":{"name":"date"}}],[6,"Target","::headers","",null,null],[11,"deref","hyper::header::common::date","",162,{"inputs":[{"name":"date"}],"output":{"name":"httpdate"}}],[11,"deref_mut","","",162,{"inputs":[{"name":"date"}],"output":{"name":"httpdate"}}],[11,"header_name","","",162,{"inputs":[{"name":"date"}],"output":{"name":"str"}}],[11,"parse_header","","",162,null],[11,"fmt_header","","",162,{"inputs":[{"name":"date"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",162,{"inputs":[{"name":"date"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::etag","",163,{"inputs":[{"name":"etag"},{"name":"etag"}],"output":{"name":"bool"}}],[11,"ne","","",163,{"inputs":[{"name":"etag"},{"name":"etag"}],"output":{"name":"bool"}}],[11,"fmt","","",163,{"inputs":[{"name":"etag"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",163,{"inputs":[{"name":"etag"}],"output":{"name":"etag"}}],[11,"new","hyper::header::shared::entity","Constructs a new EntityTag.\n# Panics\nIf the tag contains invalid characters.",164,{"inputs":[{"name":"entitytag"},{"name":"bool"},{"name":"string"}],"output":{"name":"entitytag"}}],[11,"tag","","Get the tag.",164,{"inputs":[{"name":"entitytag"}],"output":{"name":"str"}}],[11,"set_tag","","Set the tag.\n# Panics\nIf the tag contains invalid characters.",164,null],[11,"strong_eq","","For strong comparison two entity-tags are equivalent if both are not weak and their\nopaque-tags match character-by-character.",164,{"inputs":[{"name":"entitytag"},{"name":"entitytag"}],"output":{"name":"bool"}}],[11,"weak_eq","","For weak comparison two entity-tags are equivalent if their\nopaque-tags match character-by-character, regardless of either or\nboth being tagged as \"weak\".",164,{"inputs":[{"name":"entitytag"},{"name":"entitytag"}],"output":{"name":"bool"}}],[11,"strong_ne","","The inverse of `EntityTag.strong_eq()`.",164,{"inputs":[{"name":"entitytag"},{"name":"entitytag"}],"output":{"name":"bool"}}],[11,"weak_ne","","The inverse of `EntityTag.weak_eq()`.",164,{"inputs":[{"name":"entitytag"},{"name":"entitytag"}],"output":{"name":"bool"}}],[6,"Target","::headers","",null,null],[11,"deref","hyper::header::common::etag","",163,{"inputs":[{"name":"etag"}],"output":{"name":"entitytag"}}],[11,"deref_mut","","",163,{"inputs":[{"name":"etag"}],"output":{"name":"entitytag"}}],[11,"header_name","","",163,{"inputs":[{"name":"etag"}],"output":{"name":"str"}}],[11,"parse_header","","",163,null],[11,"fmt_header","","",163,{"inputs":[{"name":"etag"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",163,{"inputs":[{"name":"etag"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","hyper::header::common::expect","",165,{"inputs":[{"name":"expect"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",165,{"inputs":[{"name":"expect"},{"name":"expect"}],"output":{"name":"bool"}}],[11,"ne","","",165,{"inputs":[{"name":"expect"},{"name":"expect"}],"output":{"name":"bool"}}],[11,"clone","","",165,{"inputs":[{"name":"expect"}],"output":{"name":"expect"}}],[11,"header_name","","",165,{"inputs":[{"name":"expect"}],"output":{"name":"str"}}],[11,"parse_header","","",165,null],[11,"fmt_header","","",165,{"inputs":[{"name":"expect"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::expires","",166,{"inputs":[{"name":"expires"},{"name":"expires"}],"output":{"name":"bool"}}],[11,"ne","","",166,{"inputs":[{"name":"expires"},{"name":"expires"}],"output":{"name":"bool"}}],[11,"fmt","","",166,{"inputs":[{"name":"expires"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",166,{"inputs":[{"name":"expires"}],"output":{"name":"expires"}}],[6,"Target","::headers","",null,null],[11,"deref","hyper::header::common::expires","",166,{"inputs":[{"name":"expires"}],"output":{"name":"httpdate"}}],[11,"deref_mut","","",166,{"inputs":[{"name":"expires"}],"output":{"name":"httpdate"}}],[11,"header_name","","",166,{"inputs":[{"name":"expires"}],"output":{"name":"str"}}],[11,"parse_header","","",166,null],[11,"fmt_header","","",166,{"inputs":[{"name":"expires"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",166,{"inputs":[{"name":"expires"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::from","",167,{"inputs":[{"name":"from"},{"name":"from"}],"output":{"name":"bool"}}],[11,"ne","","",167,{"inputs":[{"name":"from"},{"name":"from"}],"output":{"name":"bool"}}],[11,"fmt","","",167,{"inputs":[{"name":"from"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",167,{"inputs":[{"name":"from"}],"output":{"name":"from"}}],[6,"Target","::headers","",null,null],[11,"deref","hyper::header::common::from","",167,{"inputs":[{"name":"from"}],"output":{"name":"string"}}],[11,"deref_mut","","",167,{"inputs":[{"name":"from"}],"output":{"name":"string"}}],[11,"header_name","","",167,{"inputs":[{"name":"from"}],"output":{"name":"str"}}],[11,"parse_header","","",167,null],[11,"fmt_header","","",167,{"inputs":[{"name":"from"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",167,{"inputs":[{"name":"from"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","hyper::header::common::host","",168,{"inputs":[{"name":"host"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",168,{"inputs":[{"name":"host"},{"name":"host"}],"output":{"name":"bool"}}],[11,"ne","","",168,{"inputs":[{"name":"host"},{"name":"host"}],"output":{"name":"bool"}}],[11,"clone","","",168,{"inputs":[{"name":"host"}],"output":{"name":"host"}}],[11,"header_name","","",168,{"inputs":[{"name":"host"}],"output":{"name":"str"}}],[11,"parse_header","","",168,null],[11,"fmt_header","","",168,{"inputs":[{"name":"host"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::if_match","",169,{"inputs":[{"name":"ifmatch"},{"name":"ifmatch"}],"output":{"name":"bool"}}],[11,"ne","","",169,{"inputs":[{"name":"ifmatch"},{"name":"ifmatch"}],"output":{"name":"bool"}}],[11,"fmt","","",169,{"inputs":[{"name":"ifmatch"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",169,{"inputs":[{"name":"ifmatch"}],"output":{"name":"ifmatch"}}],[11,"header_name","","",169,{"inputs":[{"name":"ifmatch"}],"output":{"name":"str"}}],[11,"parse_header","","",169,null],[11,"fmt_header","","",169,{"inputs":[{"name":"ifmatch"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",169,{"inputs":[{"name":"ifmatch"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::if_modified_since","",170,{"inputs":[{"name":"ifmodifiedsince"},{"name":"ifmodifiedsince"}],"output":{"name":"bool"}}],[11,"ne","","",170,{"inputs":[{"name":"ifmodifiedsince"},{"name":"ifmodifiedsince"}],"output":{"name":"bool"}}],[11,"fmt","","",170,{"inputs":[{"name":"ifmodifiedsince"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",170,{"inputs":[{"name":"ifmodifiedsince"}],"output":{"name":"ifmodifiedsince"}}],[6,"Target","::headers","",null,null],[11,"deref","hyper::header::common::if_modified_since","",170,{"inputs":[{"name":"ifmodifiedsince"}],"output":{"name":"httpdate"}}],[11,"deref_mut","","",170,{"inputs":[{"name":"ifmodifiedsince"}],"output":{"name":"httpdate"}}],[11,"header_name","","",170,{"inputs":[{"name":"ifmodifiedsince"}],"output":{"name":"str"}}],[11,"parse_header","","",170,null],[11,"fmt_header","","",170,{"inputs":[{"name":"ifmodifiedsince"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",170,{"inputs":[{"name":"ifmodifiedsince"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::if_none_match","",171,{"inputs":[{"name":"ifnonematch"},{"name":"ifnonematch"}],"output":{"name":"bool"}}],[11,"ne","","",171,{"inputs":[{"name":"ifnonematch"},{"name":"ifnonematch"}],"output":{"name":"bool"}}],[11,"fmt","","",171,{"inputs":[{"name":"ifnonematch"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",171,{"inputs":[{"name":"ifnonematch"}],"output":{"name":"ifnonematch"}}],[11,"header_name","","",171,{"inputs":[{"name":"ifnonematch"}],"output":{"name":"str"}}],[11,"parse_header","","",171,null],[11,"fmt_header","","",171,{"inputs":[{"name":"ifnonematch"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",171,{"inputs":[{"name":"ifnonematch"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::if_range","",172,{"inputs":[{"name":"ifrange"},{"name":"ifrange"}],"output":{"name":"bool"}}],[11,"ne","","",172,{"inputs":[{"name":"ifrange"},{"name":"ifrange"}],"output":{"name":"bool"}}],[11,"fmt","","",172,{"inputs":[{"name":"ifrange"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",172,{"inputs":[{"name":"ifrange"}],"output":{"name":"ifrange"}}],[11,"header_name","","",172,{"inputs":[{"name":"ifrange"}],"output":{"name":"str"}}],[11,"parse_header","","",172,null],[11,"fmt_header","","",172,{"inputs":[{"name":"ifrange"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",172,{"inputs":[{"name":"ifrange"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::if_unmodified_since","",173,{"inputs":[{"name":"ifunmodifiedsince"},{"name":"ifunmodifiedsince"}],"output":{"name":"bool"}}],[11,"ne","","",173,{"inputs":[{"name":"ifunmodifiedsince"},{"name":"ifunmodifiedsince"}],"output":{"name":"bool"}}],[11,"fmt","","",173,{"inputs":[{"name":"ifunmodifiedsince"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",173,{"inputs":[{"name":"ifunmodifiedsince"}],"output":{"name":"ifunmodifiedsince"}}],[6,"Target","::headers","",null,null],[11,"deref","hyper::header::common::if_unmodified_since","",173,{"inputs":[{"name":"ifunmodifiedsince"}],"output":{"name":"httpdate"}}],[11,"deref_mut","","",173,{"inputs":[{"name":"ifunmodifiedsince"}],"output":{"name":"httpdate"}}],[11,"header_name","","",173,{"inputs":[{"name":"ifunmodifiedsince"}],"output":{"name":"str"}}],[11,"parse_header","","",173,null],[11,"fmt_header","","",173,{"inputs":[{"name":"ifunmodifiedsince"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",173,{"inputs":[{"name":"ifunmodifiedsince"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::last_modified","",174,{"inputs":[{"name":"lastmodified"},{"name":"lastmodified"}],"output":{"name":"bool"}}],[11,"ne","","",174,{"inputs":[{"name":"lastmodified"},{"name":"lastmodified"}],"output":{"name":"bool"}}],[11,"fmt","","",174,{"inputs":[{"name":"lastmodified"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",174,{"inputs":[{"name":"lastmodified"}],"output":{"name":"lastmodified"}}],[6,"Target","::headers","",null,null],[11,"deref","hyper::header::common::last_modified","",174,{"inputs":[{"name":"lastmodified"}],"output":{"name":"httpdate"}}],[11,"deref_mut","","",174,{"inputs":[{"name":"lastmodified"}],"output":{"name":"httpdate"}}],[11,"header_name","","",174,{"inputs":[{"name":"lastmodified"}],"output":{"name":"str"}}],[11,"parse_header","","",174,null],[11,"fmt_header","","",174,{"inputs":[{"name":"lastmodified"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",174,{"inputs":[{"name":"lastmodified"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::location","",175,{"inputs":[{"name":"location"},{"name":"location"}],"output":{"name":"bool"}}],[11,"ne","","",175,{"inputs":[{"name":"location"},{"name":"location"}],"output":{"name":"bool"}}],[11,"fmt","","",175,{"inputs":[{"name":"location"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",175,{"inputs":[{"name":"location"}],"output":{"name":"location"}}],[6,"Target","::headers","",null,null],[11,"deref","hyper::header::common::location","",175,{"inputs":[{"name":"location"}],"output":{"name":"string"}}],[11,"deref_mut","","",175,{"inputs":[{"name":"location"}],"output":{"name":"string"}}],[11,"header_name","","",175,{"inputs":[{"name":"location"}],"output":{"name":"str"}}],[11,"parse_header","","",175,null],[11,"fmt_header","","",175,{"inputs":[{"name":"location"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",175,{"inputs":[{"name":"location"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","hyper::header::common::pragma","",176,{"inputs":[{"name":"pragma"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",176,{"inputs":[{"name":"pragma"},{"name":"pragma"}],"output":{"name":"bool"}}],[11,"ne","","",176,{"inputs":[{"name":"pragma"},{"name":"pragma"}],"output":{"name":"bool"}}],[11,"clone","","",176,{"inputs":[{"name":"pragma"}],"output":{"name":"pragma"}}],[11,"header_name","","",176,{"inputs":[{"name":"pragma"}],"output":{"name":"str"}}],[11,"parse_header","","",176,null],[11,"fmt_header","","",176,{"inputs":[{"name":"pragma"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::referer","",177,{"inputs":[{"name":"referer"},{"name":"referer"}],"output":{"name":"bool"}}],[11,"ne","","",177,{"inputs":[{"name":"referer"},{"name":"referer"}],"output":{"name":"bool"}}],[11,"fmt","","",177,{"inputs":[{"name":"referer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",177,{"inputs":[{"name":"referer"}],"output":{"name":"referer"}}],[6,"Target","::headers","",null,null],[11,"deref","hyper::header::common::referer","",177,{"inputs":[{"name":"referer"}],"output":{"name":"string"}}],[11,"deref_mut","","",177,{"inputs":[{"name":"referer"}],"output":{"name":"string"}}],[11,"header_name","","",177,{"inputs":[{"name":"referer"}],"output":{"name":"str"}}],[11,"parse_header","","",177,null],[11,"fmt_header","","",177,{"inputs":[{"name":"referer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",177,{"inputs":[{"name":"referer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::server","",178,{"inputs":[{"name":"server"},{"name":"server"}],"output":{"name":"bool"}}],[11,"ne","","",178,{"inputs":[{"name":"server"},{"name":"server"}],"output":{"name":"bool"}}],[11,"fmt","","",178,{"inputs":[{"name":"server"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",178,{"inputs":[{"name":"server"}],"output":{"name":"server"}}],[6,"Target","::headers","",null,null],[11,"deref","hyper::header::common::server","",178,{"inputs":[{"name":"server"}],"output":{"name":"string"}}],[11,"deref_mut","","",178,{"inputs":[{"name":"server"}],"output":{"name":"string"}}],[11,"header_name","","",178,{"inputs":[{"name":"server"}],"output":{"name":"str"}}],[11,"parse_header","","",178,null],[11,"fmt_header","","",178,{"inputs":[{"name":"server"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",178,{"inputs":[{"name":"server"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","hyper::header::common::set_cookie","",179,{"inputs":[{"name":"setcookie"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",179,{"inputs":[{"name":"setcookie"},{"name":"setcookie"}],"output":{"name":"bool"}}],[11,"ne","","",179,{"inputs":[{"name":"setcookie"},{"name":"setcookie"}],"output":{"name":"bool"}}],[11,"clone","","",179,{"inputs":[{"name":"setcookie"}],"output":{"name":"setcookie"}}],[6,"Target","::headers","",null,null],[11,"deref","hyper::header::common::set_cookie","",179,{"inputs":[{"name":"setcookie"}],"output":{"name":"vec"}}],[11,"deref_mut","","",179,{"inputs":[{"name":"setcookie"}],"output":{"name":"vec"}}],[11,"header_name","","",179,{"inputs":[{"name":"setcookie"}],"output":{"name":"str"}}],[11,"parse_header","","",179,null],[11,"fmt_header","","",179,{"inputs":[{"name":"setcookie"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_cookie_jar","","Use this to create SetCookie header from CookieJar using\ncalculated delta.",179,{"inputs":[{"name":"setcookie"},{"name":"cookiejar"}],"output":{"name":"setcookie"}}],[11,"apply_to_cookie_jar","","Use this on client to apply changes from SetCookie to CookieJar.\nNote that this will `panic!` if `CookieJar` is not root.",179,null],[11,"eq","hyper::header::common::transfer_encoding","",180,{"inputs":[{"name":"transferencoding"},{"name":"transferencoding"}],"output":{"name":"bool"}}],[11,"ne","","",180,{"inputs":[{"name":"transferencoding"},{"name":"transferencoding"}],"output":{"name":"bool"}}],[11,"fmt","","",180,{"inputs":[{"name":"transferencoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",180,{"inputs":[{"name":"transferencoding"}],"output":{"name":"transferencoding"}}],[6,"Target","::headers","",null,null],[11,"deref","hyper::header::common::transfer_encoding","",180,{"inputs":[{"name":"transferencoding"}],"output":{"name":"vec"}}],[11,"deref_mut","","",180,{"inputs":[{"name":"transferencoding"}],"output":{"name":"vec"}}],[11,"header_name","","",180,{"inputs":[{"name":"transferencoding"}],"output":{"name":"str"}}],[11,"parse_header","","",180,null],[11,"fmt_header","","",180,{"inputs":[{"name":"transferencoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",180,{"inputs":[{"name":"transferencoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::upgrade","",181,{"inputs":[{"name":"upgrade"},{"name":"upgrade"}],"output":{"name":"bool"}}],[11,"ne","","",181,{"inputs":[{"name":"upgrade"},{"name":"upgrade"}],"output":{"name":"bool"}}],[11,"fmt","","",181,{"inputs":[{"name":"upgrade"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",181,{"inputs":[{"name":"upgrade"}],"output":{"name":"upgrade"}}],[6,"Target","::headers","",null,null],[11,"deref","hyper::header::common::upgrade","",181,{"inputs":[{"name":"upgrade"}],"output":{"name":"vec"}}],[11,"deref_mut","","",181,{"inputs":[{"name":"upgrade"}],"output":{"name":"vec"}}],[11,"header_name","","",181,{"inputs":[{"name":"upgrade"}],"output":{"name":"str"}}],[11,"parse_header","","",181,null],[11,"fmt_header","","",181,{"inputs":[{"name":"upgrade"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",181,{"inputs":[{"name":"upgrade"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",182,{"inputs":[{"name":"protocolname"},{"name":"protocolname"}],"output":{"name":"bool"}}],[11,"ne","","",182,{"inputs":[{"name":"protocolname"},{"name":"protocolname"}],"output":{"name":"bool"}}],[11,"fmt","","",182,{"inputs":[{"name":"protocolname"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",182,{"inputs":[{"name":"protocolname"}],"output":{"name":"protocolname"}}],[6,"Err","::headers","",null,null],[11,"from_str","hyper::header::common::upgrade","",182,{"inputs":[{"name":"protocolname"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",182,{"inputs":[{"name":"protocolname"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",183,{"inputs":[{"name":"protocol"},{"name":"protocol"}],"output":{"name":"bool"}}],[11,"ne","","",183,{"inputs":[{"name":"protocol"},{"name":"protocol"}],"output":{"name":"bool"}}],[11,"fmt","","",183,{"inputs":[{"name":"protocol"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",183,{"inputs":[{"name":"protocol"}],"output":{"name":"protocol"}}],[11,"new","","Creates a new Protocol with the given name and version",183,{"inputs":[{"name":"protocol"},{"name":"protocolname"},{"name":"option"}],"output":{"name":"protocol"}}],[6,"Err","::headers","",null,null],[11,"from_str","hyper::header::common::upgrade","",183,{"inputs":[{"name":"protocol"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",183,{"inputs":[{"name":"protocol"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::user_agent","",184,{"inputs":[{"name":"useragent"},{"name":"useragent"}],"output":{"name":"bool"}}],[11,"ne","","",184,{"inputs":[{"name":"useragent"},{"name":"useragent"}],"output":{"name":"bool"}}],[11,"fmt","","",184,{"inputs":[{"name":"useragent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",184,{"inputs":[{"name":"useragent"}],"output":{"name":"useragent"}}],[6,"Target","::headers","",null,null],[11,"deref","hyper::header::common::user_agent","",184,{"inputs":[{"name":"useragent"}],"output":{"name":"string"}}],[11,"deref_mut","","",184,{"inputs":[{"name":"useragent"}],"output":{"name":"string"}}],[11,"header_name","","",184,{"inputs":[{"name":"useragent"}],"output":{"name":"str"}}],[11,"parse_header","","",184,null],[11,"fmt_header","","",184,{"inputs":[{"name":"useragent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",184,{"inputs":[{"name":"useragent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::common::vary","",185,{"inputs":[{"name":"vary"},{"name":"vary"}],"output":{"name":"bool"}}],[11,"ne","","",185,{"inputs":[{"name":"vary"},{"name":"vary"}],"output":{"name":"bool"}}],[11,"fmt","","",185,{"inputs":[{"name":"vary"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",185,{"inputs":[{"name":"vary"}],"output":{"name":"vary"}}],[11,"header_name","","",185,{"inputs":[{"name":"vary"}],"output":{"name":"str"}}],[11,"parse_header","","",185,null],[11,"fmt_header","","",185,{"inputs":[{"name":"vary"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",185,{"inputs":[{"name":"vary"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","hyper::header::internals::cell","",186,{"inputs":[{"name":"optcell"},{"name":"option"}],"output":{"name":"optcell"}}],[11,"set","","",186,null],[11,"get_mut","","",186,{"inputs":[{"name":"optcell"}],"output":{"name":"t"}}],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",187,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",187,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option<T>` to `Option<&T>`",187,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option<T>` to `Option<&mut T>`",187,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut_slice","","Converts from `Option<T>` to `&mut [T]` (without copying)",187,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`",187,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option<T>` if it is `Some(v)`.",187,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",187,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",187,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option<T>` to `Option<U>` by applying a function to a contained value",187,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value or returns a default.",187,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value or computes a default.",187,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",187,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",187,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",187,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",187,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",187,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",187,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",187,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",187,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",187,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_slice","","Converts from `Option<T>` to `&[T]` (without copying)",187,null],[11,"cloned","","Maps an Option<&T> to an Option<T> by cloning the contents of the Option.",187,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",187,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"fmt","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",188,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"cmp","","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"option"}}],[11,"lt","","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"le","","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"gt","","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ge","","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"eq","","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ne","","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[6,"Output","::headers","",null,null],[11,"shl","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"shr","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"shl","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"shr","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"shl","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"shr","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"shl","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"shr","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"shl","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"shr","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"shl","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"shr","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"shl","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"shr","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"shl","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"shr","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"shl","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"shr","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"shl","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"shr","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"add","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"sub","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"mul","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"not","core::num","",188,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"bitxor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"bitor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"bitand","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"add","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"sub","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"mul","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"not","core::num","",188,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"bitxor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"bitor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"bitand","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"add","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"sub","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"mul","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"not","core::num","",188,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"bitxor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"bitor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"bitand","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"add","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"sub","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"mul","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"not","core::num","",188,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"bitxor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"bitor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"bitand","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"add","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"sub","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"mul","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"not","core::num","",188,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"bitxor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"bitor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"bitand","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"add","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"sub","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"mul","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"not","core::num","",188,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"bitxor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"bitor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"bitand","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"add","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"sub","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"mul","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"not","core::num","",188,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"bitxor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"bitor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"bitand","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"add","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"sub","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"mul","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"not","core::num","",188,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"bitxor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"bitor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"bitand","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"add","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"sub","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"mul","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"not","core::num","",188,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"bitxor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"bitor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"bitand","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"add","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"sub","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"mul","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"not","core::num","",188,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"bitxor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"bitor","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[6,"Output","::headers","",null,null],[11,"bitand","core::num","",188,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"from_small","core::num::flt2dec::bignum","Makes a bignum from one digit.",189,{"inputs":[{"name":"big32x36"},{"name":"u32"}],"output":{"name":"big32x36"}}],[11,"from_u64","","Makes a bignum from `u64` value.",189,{"inputs":[{"name":"big32x36"},{"name":"u64"}],"output":{"name":"big32x36"}}],[11,"is_zero","","Returns true if the bignum is zero.",189,{"inputs":[{"name":"big32x36"}],"output":{"name":"bool"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",189,{"inputs":[{"name":"big32x36"},{"name":"big32x36"}],"output":{"name":"big32x36"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",189,{"inputs":[{"name":"big32x36"},{"name":"big32x36"}],"output":{"name":"big32x36"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",189,{"inputs":[{"name":"big32x36"},{"name":"u32"}],"output":{"name":"big32x36"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",189,{"inputs":[{"name":"big32x36"},{"name":"usize"}],"output":{"name":"big32x36"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",189,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",189,null],[11,"eq","","",189,{"inputs":[{"name":"big32x36"},{"name":"big32x36"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",189,{"inputs":[{"name":"big32x36"},{"name":"big32x36"}],"output":{"name":"option"}}],[11,"cmp","","",189,{"inputs":[{"name":"big32x36"},{"name":"big32x36"}],"output":{"name":"ordering"}}],[11,"clone","","",189,{"inputs":[{"name":"big32x36"}],"output":{"name":"big32x36"}}],[11,"fmt","","",189,{"inputs":[{"name":"big32x36"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_small","core::num::flt2dec::bignum::tests","Makes a bignum from one digit.",190,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"from_u64","","Makes a bignum from `u64` value.",190,{"inputs":[{"name":"big8x3"},{"name":"u64"}],"output":{"name":"big8x3"}}],[11,"is_zero","","Returns true if the bignum is zero.",190,{"inputs":[{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"add","","Adds `other` to itself and returns its own mutable reference.",190,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"sub","","Subtracts `other` from itself and returns its own mutable reference.",190,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"mul_small","","Multiplies itself by a digit-sized `other` and returns its own\nmutable reference.",190,{"inputs":[{"name":"big8x3"},{"name":"u8"}],"output":{"name":"big8x3"}}],[11,"mul_pow2","","Multiplies itself by `2^bits` and returns its own mutable reference.",190,{"inputs":[{"name":"big8x3"},{"name":"usize"}],"output":{"name":"big8x3"}}],[11,"mul_digits","","Multiplies itself by a number described by `other[0] + other[1] * 2^W +\nother[2] * 2^(2W) + ...` (where `W` is the number of bits in the digit type)\nand returns its own mutable reference.",190,null],[11,"div_rem_small","","Divides itself by a digit-sized `other` and returns its own\nmutable reference *and* the remainder.",190,null],[11,"eq","","",190,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",190,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"option"}}],[11,"cmp","","",190,{"inputs":[{"name":"big8x3"},{"name":"big8x3"}],"output":{"name":"ordering"}}],[11,"clone","","",190,{"inputs":[{"name":"big8x3"}],"output":{"name":"big8x3"}}],[11,"fmt","","",190,{"inputs":[{"name":"big8x3"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","core::num::flt2dec::decoder","",191,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"ne","","",191,{"inputs":[{"name":"decoded"},{"name":"decoded"}],"output":{"name":"bool"}}],[11,"fmt","","",191,{"inputs":[{"name":"decoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",191,{"inputs":[{"name":"decoded"}],"output":{"name":"decoded"}}],[11,"eq","","",192,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"ne","","",192,{"inputs":[{"name":"fulldecoded"},{"name":"fulldecoded"}],"output":{"name":"bool"}}],[11,"fmt","","",192,{"inputs":[{"name":"fulldecoded"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",192,{"inputs":[{"name":"fulldecoded"}],"output":{"name":"fulldecoded"}}],[11,"fmt","core::num::flt2dec::strategy::grisu","",193,{"inputs":[{"name":"fp"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",193,{"inputs":[{"name":"fp"}],"output":{"name":"fp"}}],[11,"fmt","core::num::flt2dec","",194,{"inputs":[{"name":"part"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",194,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"ne","","",194,{"inputs":[{"name":"part"},{"name":"part"}],"output":{"name":"bool"}}],[11,"clone","","",194,{"inputs":[{"name":"part"}],"output":{"name":"part"}}],[11,"len","","Returns the exact byte length of given part.",194,{"inputs":[{"name":"part"}],"output":{"name":"usize"}}],[11,"write","","Writes a part into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",194,null],[11,"clone","","",195,{"inputs":[{"name":"formatted"}],"output":{"name":"formatted"}}],[11,"len","","Returns the exact byte length of combined formatted result.",195,{"inputs":[{"name":"formatted"}],"output":{"name":"usize"}}],[11,"write","","Writes all formatted parts into the supplied buffer.\nReturns the number of written bytes, or `None` if the buffer is not enough.\n(It may still leave partially written bytes in the buffer; do not rely on that.)",195,null],[11,"fmt","","",196,{"inputs":[{"name":"sign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",196,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"ne","","",196,{"inputs":[{"name":"sign"},{"name":"sign"}],"output":{"name":"bool"}}],[11,"clone","","",196,{"inputs":[{"name":"sign"}],"output":{"name":"sign"}}],[11,"fmt","core::num","",197,{"inputs":[{"name":"fpcategory"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",197,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"ne","","",197,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"clone","","",197,{"inputs":[{"name":"fpcategory"}],"output":{"name":"fpcategory"}}],[6,"Err","::headers","",null,null],[6,"Err","","",null,null],[6,"Err","","",null,null],[6,"Err","","",null,null],[6,"Err","","",null,null],[6,"Err","","",null,null],[6,"Err","","",null,null],[6,"Err","","",null,null],[6,"Err","","",null,null],[6,"Err","","",null,null],[6,"Err","","",null,null],[6,"Err","","",null,null],[11,"eq","core::num","",198,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"ne","","",198,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"clone","","",198,{"inputs":[{"name":"parseinterror"}],"output":{"name":"parseinterror"}}],[11,"fmt","","",198,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",199,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",199,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",199,{"inputs":[{"name":"interrorkind"}],"output":{"name":"interrorkind"}}],[11,"fmt","","",199,{"inputs":[{"name":"interrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",198,{"inputs":[{"name":"parseinterror"}],"output":{"name":"str"}}],[11,"fmt","","",198,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",200,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"ne","","",200,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"clone","","",200,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"parsefloaterror"}}],[11,"fmt","","",200,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",201,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",201,{"inputs":[{"name":"floaterrorkind"},{"name":"floaterrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",201,{"inputs":[{"name":"floaterrorkind"}],"output":{"name":"floaterrorkind"}}],[11,"fmt","","",201,{"inputs":[{"name":"floaterrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",200,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::nonzero","",202,null],[11,"fmt","","",202,{"inputs":[{"name":"nonzero"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",202,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"option"}}],[11,"lt","","",202,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"le","","",202,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"gt","","",202,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ge","","",202,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"cmp","","",202,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"ordering"}}],[11,"eq","","",202,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ne","","",202,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"clone","","",202,{"inputs":[{"name":"nonzero"}],"output":{"name":"nonzero"}}],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually \"non-zero\".",202,{"inputs":[{"name":"nonzero"},{"name":"t"}],"output":{"name":"nonzero"}}],[6,"Target","::headers","",null,null],[11,"deref","core::nonzero","",202,{"inputs":[{"name":"nonzero"}],"output":{"name":"t"}}],[11,"new","core::ptr","Creates a new `Unique`.",203,null],[11,"get","","Dereferences the content.",203,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",203,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[6,"Target","::headers","",null,null],[11,"deref","core::ptr","",203,null],[11,"fmt","","",203,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","core::marker","",204,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",204,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"option"}}],[11,"lt","","",204,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"le","","",204,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"gt","","",204,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"ge","","",204,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"eq","","",204,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"ne","","",204,{"inputs":[{"name":"nocopy"},{"name":"nocopy"}],"output":{"name":"bool"}}],[11,"clone","","",204,{"inputs":[{"name":"nocopy"}],"output":{"name":"nocopy"}}],[11,"hash","","",205,null],[11,"eq","","",205,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",205,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",205,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",205,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[6,"Output","::headers","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"eq","core::ops","",206,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",206,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",206,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",206,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",89,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",89,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",89,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",89,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",87,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",87,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",87,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",87,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",88,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",88,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",88,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",88,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Target","::headers","",null,null],[6,"Target","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"fmt","core::cmp","",207,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",207,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",207,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",207,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",207,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",207,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",207,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"fmt","","",208,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",208,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",208,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",208,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn't.",208,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",208,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",208,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",208,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",209,null],[11,"fmt","","",209,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",209,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",209,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",209,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",209,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[6,"Item","::headers","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[11,"default","core::atomic","",210,{"inputs":[{"name":"atomicbool"}],"output":{"name":"atomicbool"}}],[11,"default","","",211,{"inputs":[{"name":"atomicisize"}],"output":{"name":"atomicisize"}}],[11,"default","","",212,{"inputs":[{"name":"atomicusize"}],"output":{"name":"atomicusize"}}],[11,"default","","",213,{"inputs":[{"name":"atomicptr"}],"output":{"name":"atomicptr"}}],[11,"clone","","",214,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",210,{"inputs":[{"name":"atomicbool"},{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",210,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",210,null],[11,"swap","","Stores a value into the bool, returning the old value.",210,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the bool if the current value is the same as the expected value.",210,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_and","","Logical \"and\" with a boolean value.",210,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical \"nand\" with a boolean value.",210,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical \"or\" with a boolean value.",210,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical \"xor\" with a boolean value.",210,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",211,{"inputs":[{"name":"atomicisize"},{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",211,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",211,null],[11,"swap","","Stores a value into the isize, returning the old value.",211,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the isize if the current value is the same as the expected value.",211,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",211,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",211,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",211,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",211,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",211,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",212,{"inputs":[{"name":"atomicusize"},{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",212,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",212,null],[11,"swap","","Stores a value into the usize, returning the old value.",212,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the usize if the current value is the same as the expected value.",212,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_add","","Add to the current usize, returning the previous value.",212,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",212,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",212,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",212,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",212,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",213,null],[11,"load","","Loads a value from the pointer.",213,null],[11,"store","","Stores a value into the pointer.",213,null],[11,"swap","","Stores a value into the pointer, returning the old value.",213,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the expected value.",213,null],[11,"new","core::cell","Creates a new `Cell` containing the given value.",215,{"inputs":[{"name":"cell"},{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",215,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",215,null],[11,"as_unsafe_cell","","Gets a reference to the underlying `UnsafeCell`.",215,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",215,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",215,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"eq","","",215,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",216,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",216,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",216,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",216,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",217,{"inputs":[{"name":"refcell"},{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",217,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",217,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",217,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",217,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Gets a reference to the underlying `UnsafeCell`.",217,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",217,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",217,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"eq","","",217,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",218,null],[11,"clone","","",218,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[6,"Target","::headers","",null,null],[11,"deref","core::cell","",219,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"drop","","",220,null],[6,"Target","::headers","",null,null],[11,"deref","core::cell","",221,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",221,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",222,{"inputs":[{"name":"unsafecell"},{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",222,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",222,null],[11,"clone","core::char","",223,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"escapeunicode"}}],[11,"clone","","",224,{"inputs":[{"name":"escapeunicodestate"}],"output":{"name":"escapeunicodestate"}}],[6,"Item","::headers","",null,null],[11,"next","core::char","",223,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"option"}}],[11,"clone","","",225,{"inputs":[{"name":"escapedefault"}],"output":{"name":"escapedefault"}}],[11,"clone","","",226,{"inputs":[{"name":"escapedefaultstate"}],"output":{"name":"escapedefaultstate"}}],[6,"Item","::headers","",null,null],[11,"next","core::char","",225,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[6,"Item","::headers","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[11,"clone","core::iter","",227,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[6,"Item","::headers","",null,null],[11,"next","core::iter","",227,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",227,null],[11,"next_back","","",227,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"indexable","","",227,{"inputs":[{"name":"rev"}],"output":{"name":"usize"}}],[11,"idx","","",227,{"inputs":[{"name":"rev"},{"name":"usize"}],"output":{"name":"option"}}],[11,"fmt","","",228,{"inputs":[{"name":"minmaxresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",228,{"inputs":[{"name":"minmaxresult"},{"name":"minmaxresult"}],"output":{"name":"bool"}}],[11,"ne","","",228,{"inputs":[{"name":"minmaxresult"},{"name":"minmaxresult"}],"output":{"name":"bool"}}],[11,"clone","","",228,{"inputs":[{"name":"minmaxresult"}],"output":{"name":"minmaxresult"}}],[11,"into_option","","`into_option` creates an `Option` of type `(T,T)`. The returned `Option`\nhas variant `None` if and only if the `MinMaxResult` has variant\n`NoElements`. Otherwise variant `Some(x,y)` is returned where `x <= y`.\nIf `MinMaxResult` has variant `OneElement(x)`, performing this operation\nwill make one clone of `x`.",228,{"inputs":[{"name":"minmaxresult"}],"output":{"name":"option"}}],[11,"clone","","",229,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[6,"Item","::headers","",null,null],[11,"next","core::iter","",229,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",229,null],[11,"next_back","","",229,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"indexable","","",229,{"inputs":[{"name":"cloned"}],"output":{"name":"usize"}}],[11,"idx","","",229,{"inputs":[{"name":"cloned"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",230,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[6,"Item","::headers","",null,null],[11,"next","core::iter","",230,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",230,null],[11,"indexable","","",230,{"inputs":[{"name":"cycle"}],"output":{"name":"usize"}}],[11,"idx","","",230,{"inputs":[{"name":"cycle"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",231,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[6,"Item","::headers","",null,null],[11,"next","core::iter","",231,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",231,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",231,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",231,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",231,null],[11,"next_back","","",231,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"indexable","","",231,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"idx","","",231,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",232,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[6,"Item","::headers","",null,null],[11,"next","core::iter","",232,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",232,null],[11,"next_back","","",232,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"indexable","","",232,{"inputs":[{"name":"zip"}],"output":{"name":"usize"}}],[11,"idx","","",232,{"inputs":[{"name":"zip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",233,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[6,"Item","::headers","",null,null],[11,"next","core::iter","",233,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",233,null],[11,"next_back","","",233,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"indexable","","",233,{"inputs":[{"name":"map"}],"output":{"name":"usize"}}],[11,"idx","","",233,{"inputs":[{"name":"map"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",234,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[6,"Item","::headers","",null,null],[11,"next","core::iter","",234,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",234,null],[11,"next_back","","",234,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",235,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[6,"Item","::headers","",null,null],[11,"next","core::iter","",235,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",235,null],[11,"next_back","","",235,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",236,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[6,"Item","::headers","",null,null],[11,"next","core::iter","# Overflow Behavior",236,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",236,null],[11,"nth","","",236,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",236,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",236,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"indexable","","",236,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"idx","","",236,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",237,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[6,"Item","::headers","",null,null],[11,"next","core::iter","",237,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",237,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",237,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",237,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",237,null],[11,"peek","","Returns a reference to the next element of the iterator with out\nadvancing it, or None if the iterator is exhausted.",237,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks whether peekable iterator is empty or not.",237,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",238,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[6,"Item","::headers","",null,null],[11,"next","core::iter","",238,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",238,null],[11,"clone","","",239,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[6,"Item","::headers","",null,null],[11,"next","core::iter","",239,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",239,null],[11,"clone","","",240,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[6,"Item","::headers","",null,null],[11,"next","core::iter","",240,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",240,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",240,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",240,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",240,null],[11,"indexable","","",240,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"idx","","",240,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",241,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[6,"Item","::headers","",null,null],[11,"next","core::iter","",241,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",241,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",241,null],[11,"indexable","","",241,{"inputs":[{"name":"take"}],"output":{"name":"usize"}}],[11,"idx","","",241,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",242,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[6,"Item","::headers","",null,null],[11,"next","core::iter","",242,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",242,null],[11,"clone","","",243,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[6,"Item","::headers","",null,null],[11,"next","core::iter","",243,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",243,null],[11,"next_back","","",243,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",244,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[6,"Item","::headers","",null,null],[11,"next","core::iter","",244,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",244,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",244,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",244,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",244,null],[11,"next_back","","",244,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"indexable","","",244,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"idx","","",244,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"reset_fuse","","Resets the `Fuse` such that the next call to `.next()` or\n`.next_back()` will call the underlying iterator again even if it\npreviously returned `None`.",244,null],[11,"clone","","",245,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[6,"Item","::headers","",null,null],[11,"next","core::iter","",245,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",245,null],[11,"next_back","","",245,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"indexable","","",245,{"inputs":[{"name":"inspect"}],"output":{"name":"usize"}}],[11,"idx","","",245,{"inputs":[{"name":"inspect"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",246,{"inputs":[{"name":"unfold"}],"output":{"name":"unfold"}}],[11,"new","","Creates a new iterator with the specified closure as the \"iterator\nfunction\" and an initial state to eventually pass to the closure",246,{"inputs":[{"name":"unfold"},{"name":"st"},{"name":"f"}],"output":{"name":"unfold"}}],[6,"Item","::headers","",null,null],[11,"next","core::iter","",246,{"inputs":[{"name":"unfold"}],"output":{"name":"option"}}],[11,"size_hint","","",246,null],[11,"clone","","",247,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",87,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",89,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[6,"Item","::headers","",null,null],[11,"next","core::iter","",247,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",247,null],[11,"clone","","",248,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[6,"Item","::headers","",null,null],[11,"next","core::iter","",248,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",248,null],[11,"next_back","","",248,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[6,"Item","::headers","",null,null],[11,"next","core::iter","",247,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",247,null],[6,"Item","::headers","",null,null],[11,"next","core::ops","",89,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",89,null],[11,"next_back","","",89,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[6,"Item","::headers","",null,null],[11,"next","core::ops","",87,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",249,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[6,"Item","::headers","",null,null],[11,"next","core::iter","",249,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",249,null],[11,"next_back","","",249,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"indexable","","",249,{"inputs":[{"name":"repeat"}],"output":{"name":"usize"}}],[11,"idx","","",249,{"inputs":[{"name":"repeat"},{"name":"usize"}],"output":{"name":"option"}}],[11,"hash","core::option","",187,null],[11,"fmt","","",187,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",187,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",187,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",187,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",187,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",187,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",187,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",187,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",187,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",187,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"default","","",187,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[6,"Item","::headers","",null,null],[6,"IntoIter","","",null,null],[11,"into_iter","core::option","Returns a consuming iterator over the possibly contained value.",187,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",250,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[6,"Item","::headers","",null,null],[11,"next","core::option","",250,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",250,null],[11,"next_back","","",250,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[6,"Item","::headers","",null,null],[11,"next","core::option","",251,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",251,null],[11,"next_back","","",251,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",251,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[6,"Item","::headers","",null,null],[11,"next","core::option","",252,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",252,null],[11,"next_back","","",252,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[6,"Item","::headers","",null,null],[11,"next","core::option","",253,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",253,null],[11,"next_back","","",253,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",187,{"inputs":[{"name":"option"},{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",254,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",255,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"hash","core::result","",256,null],[11,"fmt","","",256,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",256,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",256,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",256,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",256,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",256,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",256,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",256,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",256,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",256,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",256,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",256,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result<T, E>` to `Option<T>`",256,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result<T, E>` to `Option<E>`",256,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result<T, E>` to `Result<&T, &E>`",256,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result<T, E>` to `Result<&mut T, &mut E>`",256,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_slice","","Converts from `Result<T, E>` to `&[T]` (without copying)",256,null],[11,"as_mut_slice","","Converts from `Result<T, E>` to `&mut [T]` (without copying)",256,null],[11,"map","","Maps a `Result<T, E>` to `Result<U, E>` by applying a function to an\ncontained `Ok` value, leaving an `Err` value untouched.",256,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result<T, E>` to `Result<T, F>` by applying a function to an\ncontained `Err` value, leaving an `Ok` value untouched.",256,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",256,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",256,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",256,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",256,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",256,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",256,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",256,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",256,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",256,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",256,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[6,"Item","::headers","",null,null],[6,"IntoIter","","",null,null],[11,"into_iter","core::result","Returns a consuming iterator over the possibly contained value.",256,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[6,"Item","::headers","",null,null],[11,"next","core::result","",257,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",257,null],[11,"next_back","","",257,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",257,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[6,"Item","::headers","",null,null],[11,"next","core::result","",258,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",258,null],[11,"next_back","","",258,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[6,"Item","::headers","",null,null],[11,"next","core::result","",259,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",259,null],[11,"next_back","","",259,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",256,{"inputs":[{"name":"result"},{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::simd","",260,{"inputs":[{"name":"i8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",260,{"inputs":[{"name":"i8x16"}],"output":{"name":"i8x16"}}],[11,"fmt","","",261,{"inputs":[{"name":"i16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",261,{"inputs":[{"name":"i16x8"}],"output":{"name":"i16x8"}}],[11,"fmt","","",262,{"inputs":[{"name":"i32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",262,{"inputs":[{"name":"i32x4"}],"output":{"name":"i32x4"}}],[11,"fmt","","",263,{"inputs":[{"name":"i64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",263,{"inputs":[{"name":"i64x2"}],"output":{"name":"i64x2"}}],[11,"fmt","","",264,{"inputs":[{"name":"u8x16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",264,{"inputs":[{"name":"u8x16"}],"output":{"name":"u8x16"}}],[11,"fmt","","",265,{"inputs":[{"name":"u16x8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",265,{"inputs":[{"name":"u16x8"}],"output":{"name":"u16x8"}}],[11,"fmt","","",266,{"inputs":[{"name":"u32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",266,{"inputs":[{"name":"u32x4"}],"output":{"name":"u32x4"}}],[11,"fmt","","",267,{"inputs":[{"name":"u64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",267,{"inputs":[{"name":"u64x2"}],"output":{"name":"u64x2"}}],[11,"fmt","","",268,{"inputs":[{"name":"f32x4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",268,{"inputs":[{"name":"f32x4"}],"output":{"name":"f32x4"}}],[11,"fmt","","",269,{"inputs":[{"name":"f64x2"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",269,{"inputs":[{"name":"f64x2"}],"output":{"name":"f64x2"}}],[6,"Output","::headers","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[6,"Item","","",null,null],[6,"IntoIter","","",null,null],[11,"as_slice","core::slice","View the underlying data as a subslice of the original data.",270,null],[6,"Item","::headers","",null,null],[11,"next","core::slice","",270,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",270,null],[11,"count","","",270,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"nth","","",270,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",270,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",270,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",270,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"indexable","","",270,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"idx","","",270,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"into_slice","","View the underlying data as a subslice of the original data.",271,null],[6,"Item","::headers","",null,null],[11,"next","core::slice","",271,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",271,null],[11,"count","","",271,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"nth","","",271,{"inputs":[{"name":"itermut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",271,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next_back","","",271,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",272,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[6,"Item","::headers","",null,null],[11,"next","core::slice","",272,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"size_hint","","",272,null],[11,"next_back","","",272,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",272,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",273,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[6,"Item","::headers","",null,null],[11,"next","core::slice","",273,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"size_hint","","",273,null],[11,"next_back","","",273,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[6,"Item","::headers","",null,null],[11,"next","core::slice","",274,{"inputs":[{"name":"genericsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",274,null],[6,"Item","::headers","",null,null],[11,"next","core::slice","",275,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"size_hint","","",275,null],[6,"Item","::headers","",null,null],[11,"next","core::slice","",276,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",276,null],[6,"Item","::headers","",null,null],[11,"next","core::slice","",277,{"inputs":[{"name":"splitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",277,null],[6,"Item","::headers","",null,null],[11,"next","core::slice","",278,{"inputs":[{"name":"rsplitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",278,null],[11,"clone","","",279,{"inputs":[{"name":"windows"}],"output":{"name":"windows"}}],[6,"Item","::headers","",null,null],[11,"next","core::slice","",279,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"size_hint","","",279,null],[11,"next_back","","",279,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"indexable","","",279,{"inputs":[{"name":"windows"}],"output":{"name":"usize"}}],[11,"idx","","",279,{"inputs":[{"name":"windows"},{"name":"usize"}],"output":{"name":"option"}}],[11,"clone","","",280,{"inputs":[{"name":"chunks"}],"output":{"name":"chunks"}}],[6,"Item","::headers","",null,null],[11,"next","core::slice","",280,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"size_hint","","",280,null],[11,"next_back","","",280,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"indexable","","",280,{"inputs":[{"name":"chunks"}],"output":{"name":"usize"}}],[11,"idx","","",280,{"inputs":[{"name":"chunks"},{"name":"usize"}],"output":{"name":"option"}}],[6,"Item","::headers","",null,null],[11,"next","core::slice","",281,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"size_hint","","",281,null],[11,"next_back","","",281,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[6,"Err","::headers","",null,null],[11,"eq","core::str","",282,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"ne","","",282,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"clone","","",282,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"parseboolerror"}}],[11,"fmt","","",282,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",282,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",283,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",283,{"inputs":[{"name":"utf8error"}],"output":{"name":"utf8error"}}],[11,"eq","","",283,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"ne","","",283,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",283,{"inputs":[{"name":"utf8error"}],"output":{"name":"usize"}}],[11,"fmt","","",283,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",284,{"inputs":[{"name":"chars"}],"output":{"name":"chars"}}],[6,"Item","::headers","",null,null],[11,"next","core::str","",284,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"size_hint","","",284,null],[11,"next_back","","",284,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"clone","","",285,{"inputs":[{"name":"charindices"}],"output":{"name":"charindices"}}],[6,"Item","::headers","",null,null],[11,"next","core::str","",285,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"size_hint","","",285,null],[11,"next_back","","",285,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"clone","","",286,{"inputs":[{"name":"bytes"}],"output":{"name":"bytes"}}],[11,"clone","","",287,{"inputs":[{"name":"bytesderef"}],"output":{"name":"bytesderef"}}],[11,"call","","",287,null],[11,"call_mut","","",287,null],[6,"Output","::headers","",null,null],[11,"call_once","core::str","",287,null],[6,"Item","::headers","",null,null],[11,"next","core::str","",286,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"size_hint","","",286,null],[11,"next_back","","",286,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"len","","",286,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"clone","","",288,{"inputs":[{"name":"splitinternal"}],"output":{"name":"splitinternal"}}],[6,"Item","::headers","",null,null],[11,"next","core::str","",289,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"clone","","",289,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[6,"Item","::headers","",null,null],[11,"next","core::str","",290,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"clone","","",290,{"inputs":[{"name":"rsplit"}],"output":{"name":"rsplit"}}],[11,"next_back","","",289,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next_back","","",290,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[6,"Item","::headers","",null,null],[11,"next","core::str","",291,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"clone","","",291,{"inputs":[{"name":"splitterminator"}],"output":{"name":"splitterminator"}}],[6,"Item","::headers","",null,null],[11,"next","core::str","",292,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",292,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"rsplitterminator"}}],[11,"next_back","","",291,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"next_back","","",292,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",293,{"inputs":[{"name":"splitninternal"}],"output":{"name":"splitninternal"}}],[6,"Item","::headers","",null,null],[11,"next","core::str","",294,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"clone","","",294,{"inputs":[{"name":"splitn"}],"output":{"name":"splitn"}}],[6,"Item","::headers","",null,null],[11,"next","core::str","",295,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"clone","","",295,{"inputs":[{"name":"rsplitn"}],"output":{"name":"rsplitn"}}],[11,"clone","","",296,{"inputs":[{"name":"matchindicesinternal"}],"output":{"name":"matchindicesinternal"}}],[6,"Item","::headers","",null,null],[11,"next","core::str","",297,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"clone","","",297,{"inputs":[{"name":"matchindices"}],"output":{"name":"matchindices"}}],[6,"Item","::headers","",null,null],[11,"next","core::str","",298,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",298,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"rmatchindices"}}],[11,"next_back","","",297,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"next_back","","",298,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",299,{"inputs":[{"name":"matchesinternal"}],"output":{"name":"matchesinternal"}}],[6,"Item","::headers","",null,null],[11,"next","core::str","",300,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"clone","","",300,{"inputs":[{"name":"matches"}],"output":{"name":"matches"}}],[6,"Item","::headers","",null,null],[11,"next","core::str","",301,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",301,{"inputs":[{"name":"rmatches"}],"output":{"name":"rmatches"}}],[11,"next_back","","",300,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"next_back","","",301,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",302,{"inputs":[{"name":"lines"}],"output":{"name":"lines"}}],[6,"Item","::headers","",null,null],[11,"next","core::str","",302,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"size_hint","","",302,null],[11,"next_back","","",302,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"clone","","",303,{"inputs":[{"name":"linesany"}],"output":{"name":"linesany"}}],[11,"clone","","",304,{"inputs":[{"name":"linesanymap"}],"output":{"name":"linesanymap"}}],[11,"call","","",304,null],[11,"call_mut","","",304,null],[6,"Output","::headers","",null,null],[11,"call_once","core::str","",304,null],[6,"Item","::headers","",null,null],[11,"next","core::str","",303,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"size_hint","","",303,null],[11,"next_back","","",303,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"clone","","",305,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"clone","","",306,{"inputs":[{"name":"oldsearcher"}],"output":{"name":"oldsearcher"}}],[11,"clone","","",307,{"inputs":[{"name":"oldmatchindices"}],"output":{"name":"oldmatchindices"}}],[11,"clone","","",308,{"inputs":[{"name":"charrange"}],"output":{"name":"charrange"}}],[6,"Output","::headers","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",309,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",309,{"inputs":[{"name":"siphasher"},{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",309,null],[11,"finish","","",309,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",309,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",309,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"eq","core::fmt::num","",310,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"ne","","",310,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"clone","","",310,{"inputs":[{"name":"binary"}],"output":{"name":"binary"}}],[11,"eq","","",311,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"ne","","",311,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"clone","","",311,{"inputs":[{"name":"octal"}],"output":{"name":"octal"}}],[11,"eq","","",312,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",312,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"clone","","",312,{"inputs":[{"name":"decimal"}],"output":{"name":"decimal"}}],[11,"eq","","",313,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"ne","","",313,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"clone","","",313,{"inputs":[{"name":"lowerhex"}],"output":{"name":"lowerhex"}}],[11,"eq","","",314,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"ne","","",314,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"clone","","",314,{"inputs":[{"name":"upperhex"}],"output":{"name":"upperhex"}}],[11,"eq","","",315,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"ne","","",315,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"clone","","",315,{"inputs":[{"name":"radix"}],"output":{"name":"radix"}}],[11,"clone","","",316,{"inputs":[{"name":"radixfmt"}],"output":{"name":"radixfmt"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",316,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"write_str","core::fmt::builders","",317,{"inputs":[{"name":"padadapter"},{"name":"str"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated struct output.",318,{"inputs":[{"name":"debugstruct"},{"name":"str"},{"name":"debug"}],"output":{"name":"debugstruct"}}],[11,"finish","","Consumes the `DebugStruct`, finishing output and returning any error\nencountered.",318,{"inputs":[{"name":"debugstruct"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated tuple struct output.",319,{"inputs":[{"name":"debugtuple"},{"name":"debug"}],"output":{"name":"debugtuple"}}],[11,"finish","","Consumes the `DebugTuple`, finishing output and returning any error\nencountered.",319,{"inputs":[{"name":"debugtuple"}],"output":{"name":"result"}}],[11,"finish","","",320,null],[11,"entry","","Adds a new entry to the set output.",321,{"inputs":[{"name":"debugset"},{"name":"debug"}],"output":{"name":"debugset"}}],[11,"finish","","Consumes the `DebugSet`, finishing output and returning any error\nencountered.",321,{"inputs":[{"name":"debugset"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the set output.",322,{"inputs":[{"name":"debuglist"},{"name":"debug"}],"output":{"name":"debuglist"}}],[11,"finish","","Consumes the `DebugSet`, finishing output and returning any error\nencountered.",322,{"inputs":[{"name":"debuglist"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the map output.",323,{"inputs":[{"name":"debugmap"},{"name":"debug"},{"name":"debug"}],"output":{"name":"debugmap"}}],[11,"finish","","Consumes the `DebugMap`, finishing output and returning any error\nencountered.",323,{"inputs":[{"name":"debugmap"}],"output":{"name":"result"}}],[11,"fmt","core::fmt","",324,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",324,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"clone","","",325,{"inputs":[{"name":"argumentv1"}],"output":{"name":"argumentv1"}}],[11,"clone","","",326,{"inputs":[{"name":"flagv1"}],"output":{"name":"flagv1"}}],[11,"clone","","",327,{"inputs":[{"name":"arguments"}],"output":{"name":"arguments"}}],[11,"fmt","","",327,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",327,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",328,{"inputs":[{"name":"formatter"},{"name":"bool"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",328,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",328,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_fmt","","Writes some formatted information into this instance",328,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"flags","","Flags for formatting (packed version of rt::Flag)",328,{"inputs":[{"name":"formatter"}],"output":{"name":"u32"}}],[11,"fill","","Character used as 'fill' whenever there is alignment",328,{"inputs":[{"name":"formatter"}],"output":{"name":"char"}}],[11,"align","","Flag indicating what form of alignment was requested",328,{"inputs":[{"name":"formatter"}],"output":{"name":"alignment"}}],[11,"width","","Optionally specified integer width that the output should be",328,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"precision","","Optionally specified precision for numeric types",328,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",328,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugstruct"}}],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",328,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugtuple"}}],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",328,{"inputs":[{"name":"formatter"}],"output":{"name":"debuglist"}}],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",328,{"inputs":[{"name":"formatter"}],"output":{"name":"debugset"}}],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",328,{"inputs":[{"name":"formatter"}],"output":{"name":"debugmap"}}],[11,"fmt","","",324,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::marker","",205,{"inputs":[{"name":"phantomdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cell","",215,{"inputs":[{"name":"cell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",217,{"inputs":[{"name":"refcell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",219,{"inputs":[{"name":"ref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",221,{"inputs":[{"name":"refmut"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Target","::headers","",null,null],[11,"deref","hyper::header::internals::cell","",186,{"inputs":[{"name":"optcell"}],"output":{"name":"option"}}],[11,"clone","","",186,{"inputs":[{"name":"optcell"}],"output":{"name":"optcell"}}],[11,"fmt","","",329,{"inputs":[{"name":"ptrmap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",329,{"inputs":[{"name":"ptrmap"}],"output":{"name":"ptrmap"}}],[11,"new","","",330,{"inputs":[{"name":"ptrmapcell"}],"output":{"name":"ptrmapcell"}}],[11,"get","","",330,{"inputs":[{"name":"ptrmapcell"},{"name":"typeid"}],"output":{"name":"option"}}],[11,"get_mut","","",330,{"inputs":[{"name":"ptrmapcell"},{"name":"typeid"}],"output":{"name":"option"}}],[11,"insert","","",330,null],[11,"one","","",330,{"inputs":[{"name":"ptrmapcell"}],"output":{"name":"v"}}],[11,"clone","","",330,{"inputs":[{"name":"ptrmapcell"}],"output":{"name":"ptrmapcell"}}],[11,"clone","hyper::header::internals::item","",331,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"new_raw","","",331,{"inputs":[{"name":"item"},{"name":"vec"}],"output":{"name":"item"}}],[11,"new_typed","","",331,{"inputs":[{"name":"item"},{"name":"box"}],"output":{"name":"item"}}],[11,"mut_raw","","",331,{"inputs":[{"name":"item"}],"output":{"name":"vec"}}],[11,"raw","","",331,null],[11,"typed","","",331,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"typed_mut","","",331,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"fmt","","",331,{"inputs":[{"name":"item"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","hyper::header::shared::charset","",332,{"inputs":[{"name":"charset"},{"name":"charset"}],"output":{"name":"bool"}}],[11,"ne","","",332,{"inputs":[{"name":"charset"},{"name":"charset"}],"output":{"name":"bool"}}],[11,"fmt","","",332,{"inputs":[{"name":"charset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",332,{"inputs":[{"name":"charset"}],"output":{"name":"charset"}}],[11,"fmt","","",332,{"inputs":[{"name":"charset"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","::headers","",null,null],[11,"from_str","hyper::header::shared::charset","",332,{"inputs":[{"name":"charset"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","hyper::header::shared::encoding","",333,{"inputs":[{"name":"encoding"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",333,{"inputs":[{"name":"encoding"},{"name":"encoding"}],"output":{"name":"bool"}}],[11,"ne","","",333,{"inputs":[{"name":"encoding"},{"name":"encoding"}],"output":{"name":"bool"}}],[11,"clone","","",333,{"inputs":[{"name":"encoding"}],"output":{"name":"encoding"}}],[11,"fmt","","",333,{"inputs":[{"name":"encoding"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","::headers","",null,null],[11,"from_str","hyper::header::shared::encoding","",333,{"inputs":[{"name":"encoding"},{"name":"str"}],"output":{"name":"result"}}],[11,"eq","hyper::header::shared::entity","",164,{"inputs":[{"name":"entitytag"},{"name":"entitytag"}],"output":{"name":"bool"}}],[11,"ne","","",164,{"inputs":[{"name":"entitytag"},{"name":"entitytag"}],"output":{"name":"bool"}}],[11,"fmt","","",164,{"inputs":[{"name":"entitytag"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",164,{"inputs":[{"name":"entitytag"}],"output":{"name":"entitytag"}}],[11,"fmt","","",164,{"inputs":[{"name":"entitytag"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","::headers","",null,null],[11,"from_str","hyper::header::shared::entity","",164,{"inputs":[{"name":"entitytag"},{"name":"str"}],"output":{"name":"result"}}],[11,"cmp","hyper::header::shared::httpdate","",334,{"inputs":[{"name":"httpdate"},{"name":"httpdate"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",334,{"inputs":[{"name":"httpdate"},{"name":"httpdate"}],"output":{"name":"option"}}],[11,"lt","","",334,{"inputs":[{"name":"httpdate"},{"name":"httpdate"}],"output":{"name":"bool"}}],[11,"le","","",334,{"inputs":[{"name":"httpdate"},{"name":"httpdate"}],"output":{"name":"bool"}}],[11,"gt","","",334,{"inputs":[{"name":"httpdate"},{"name":"httpdate"}],"output":{"name":"bool"}}],[11,"ge","","",334,{"inputs":[{"name":"httpdate"},{"name":"httpdate"}],"output":{"name":"bool"}}],[11,"eq","","",334,{"inputs":[{"name":"httpdate"},{"name":"httpdate"}],"output":{"name":"bool"}}],[11,"ne","","",334,{"inputs":[{"name":"httpdate"},{"name":"httpdate"}],"output":{"name":"bool"}}],[11,"fmt","","",334,{"inputs":[{"name":"httpdate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",334,{"inputs":[{"name":"httpdate"}],"output":{"name":"httpdate"}}],[6,"Err","::headers","",null,null],[11,"from_str","hyper::header::shared::httpdate","",334,{"inputs":[{"name":"httpdate"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",334,{"inputs":[{"name":"httpdate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","hyper::header::shared::language","",335,{"inputs":[{"name":"language"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",335,{"inputs":[{"name":"language"},{"name":"language"}],"output":{"name":"bool"}}],[11,"ne","","",335,{"inputs":[{"name":"language"},{"name":"language"}],"output":{"name":"bool"}}],[11,"clone","","",335,{"inputs":[{"name":"language"}],"output":{"name":"language"}}],[6,"Err","::headers","",null,null],[11,"from_str","hyper::header::shared::language","",335,{"inputs":[{"name":"language"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",335,{"inputs":[{"name":"language"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","hyper::header::shared::quality_item","",336,{"inputs":[{"name":"quality"},{"name":"quality"}],"output":{"name":"option"}}],[11,"lt","","",336,{"inputs":[{"name":"quality"},{"name":"quality"}],"output":{"name":"bool"}}],[11,"le","","",336,{"inputs":[{"name":"quality"},{"name":"quality"}],"output":{"name":"bool"}}],[11,"gt","","",336,{"inputs":[{"name":"quality"},{"name":"quality"}],"output":{"name":"bool"}}],[11,"ge","","",336,{"inputs":[{"name":"quality"},{"name":"quality"}],"output":{"name":"bool"}}],[11,"eq","","",336,{"inputs":[{"name":"quality"},{"name":"quality"}],"output":{"name":"bool"}}],[11,"ne","","",336,{"inputs":[{"name":"quality"},{"name":"quality"}],"output":{"name":"bool"}}],[11,"cmp","","",336,{"inputs":[{"name":"quality"},{"name":"quality"}],"output":{"name":"ordering"}}],[11,"fmt","","",336,{"inputs":[{"name":"quality"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",336,{"inputs":[{"name":"quality"}],"output":{"name":"quality"}}],[11,"fmt","","",336,{"inputs":[{"name":"quality"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",336,{"inputs":[{"name":"quality"}],"output":{"name":"quality"}}],[11,"fmt","","",337,{"inputs":[{"name":"qualityitem"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",337,{"inputs":[{"name":"qualityitem"},{"name":"qualityitem"}],"output":{"name":"bool"}}],[11,"ne","","",337,{"inputs":[{"name":"qualityitem"},{"name":"qualityitem"}],"output":{"name":"bool"}}],[11,"clone","","",337,{"inputs":[{"name":"qualityitem"}],"output":{"name":"qualityitem"}}],[11,"new","","Creates a new `QualityItem` from an item and a quality.\nThe item can be of any type.\nThe quality should be a value in the range [0, 1].",337,{"inputs":[{"name":"qualityitem"},{"name":"t"},{"name":"quality"}],"output":{"name":"qualityitem"}}],[11,"partial_cmp","","",337,{"inputs":[{"name":"qualityitem"},{"name":"qualityitem"}],"output":{"name":"option"}}],[11,"fmt","","",337,{"inputs":[{"name":"qualityitem"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","::headers","",null,null],[11,"from_str","hyper::header::shared::quality_item","",337,{"inputs":[{"name":"qualityitem"},{"name":"str"}],"output":{"name":"result"}}],[11,"clone","alloc::boxed","",4,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone","hyper::header","",7,{"inputs":[{"name":"headers"}],"output":{"name":"headers"}}],[11,"fmt","","",7,{"inputs":[{"name":"headers"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"headers"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Item","::headers","",null,null],[11,"next","hyper::header","",338,{"inputs":[{"name":"headersitems"}],"output":{"name":"option"}}],[11,"is","","Check if a HeaderView is a certain Header.",339,{"inputs":[{"name":"headerview"}],"output":{"name":"bool"}}],[11,"name","","Get the Header name as a slice.",339,{"inputs":[{"name":"headerview"}],"output":{"name":"str"}}],[11,"value","","Cast the value to a certain Header type.",339,{"inputs":[{"name":"headerview"}],"output":{"name":"option"}}],[11,"value_string","","Get just the header value as a String.",339,{"inputs":[{"name":"headerview"}],"output":{"name":"string"}}],[11,"fmt","","",339,{"inputs":[{"name":"headerview"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",339,{"inputs":[{"name":"headerview"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"extend","","",7,null],[11,"from_iter","","",7,{"inputs":[{"name":"headers"},{"name":"i"}],"output":{"name":"headers"}}],[11,"fmt","","",340,{"inputs":[{"name":"headerformatter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",340,{"inputs":[{"name":"headerformatter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",341,{"inputs":[{"name":"cowstr"},{"name":"cowstr"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",341,{"inputs":[{"name":"cowstr"},{"name":"cowstr"}],"output":{"name":"option"}}],[11,"lt","","",341,{"inputs":[{"name":"cowstr"},{"name":"cowstr"}],"output":{"name":"bool"}}],[11,"le","","",341,{"inputs":[{"name":"cowstr"},{"name":"cowstr"}],"output":{"name":"bool"}}],[11,"gt","","",341,{"inputs":[{"name":"cowstr"},{"name":"cowstr"}],"output":{"name":"bool"}}],[11,"ge","","",341,{"inputs":[{"name":"cowstr"},{"name":"cowstr"}],"output":{"name":"bool"}}],[11,"eq","","",341,{"inputs":[{"name":"cowstr"},{"name":"cowstr"}],"output":{"name":"bool"}}],[11,"ne","","",341,{"inputs":[{"name":"cowstr"},{"name":"cowstr"}],"output":{"name":"bool"}}],[11,"hash","","",341,null],[11,"clone","","",341,{"inputs":[{"name":"cowstr"}],"output":{"name":"cowstr"}}],[6,"Target","::headers","",null,null],[11,"deref","hyper::header","",341,{"inputs":[{"name":"cowstr"}],"output":{"name":"cow"}}],[11,"fmt","","",341,{"inputs":[{"name":"cowstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",341,{"inputs":[{"name":"cowstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref_mut","","",341,{"inputs":[{"name":"cowstr"}],"output":{"name":"cow"}}],[11,"as_ref","","",341,{"inputs":[{"name":"cowstr"}],"output":{"name":"str"}}],[11,"into_inner","hyper::http","Unwraps this HttpReader and returns the underlying Reader.",342,{"inputs":[{"name":"httpreader"}],"output":{"name":"r"}}],[11,"fmt","","",342,{"inputs":[{"name":"httpreader"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",342,null],[11,"into_inner","","Unwraps the HttpWriter and returns the underlying Writer.",343,{"inputs":[{"name":"httpwriter"}],"output":{"name":"w"}}],[11,"get_ref","","Access the inner Writer.",343,{"inputs":[{"name":"httpwriter"}],"output":{"name":"w"}}],[11,"get_mut","","Access the inner Writer mutably.",343,{"inputs":[{"name":"httpwriter"}],"output":{"name":"w"}}],[11,"end","","Ends the HttpWriter, and returns the underlying Writer.",343,{"inputs":[{"name":"httpwriter"}],"output":{"name":"result"}}],[11,"write","","",343,null],[11,"flush","","",343,{"inputs":[{"name":"httpwriter"}],"output":{"name":"result"}}],[11,"fmt","","",343,{"inputs":[{"name":"httpwriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",344,{"inputs":[{"name":"incoming"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",345,{"inputs":[{"name":"rawstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",345,{"inputs":[{"name":"rawstatus"},{"name":"rawstatus"}],"output":{"name":"bool"}}],[11,"ne","","",345,{"inputs":[{"name":"rawstatus"},{"name":"rawstatus"}],"output":{"name":"bool"}}],[11,"clone","","",345,{"inputs":[{"name":"rawstatus"}],"output":{"name":"rawstatus"}}],[6,"Item","::headers","",null,null],[11,"next","hyper::net","",346,{"inputs":[{"name":"networkconnections"}],"output":{"name":"option"}}],[11,"from","alloc::boxed","",4,{"inputs":[{"name":"box"},{"name":"t"}],"output":{"name":"box"}}],[11,"fmt","","",4,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Is the underlying type in this trait object a T?",347,{"inputs":[{"name":"networkstream"}],"output":{"name":"bool"}}],[11,"downcast_ref","","If the underlying type is T, get a reference to the contained data.",347,{"inputs":[{"name":"networkstream"}],"output":{"name":"option"}}],[11,"downcast_mut","","If the underlying type is T, get a mutable reference to the contained\ndata.",347,{"inputs":[{"name":"networkstream"}],"output":{"name":"option"}}],[11,"downcast","","If the underlying type is T, extract it.",347,{"inputs":[{"name":"networkstream"}],"output":{"name":"result"}}],[11,"clone","hyper::net","",348,{"inputs":[{"name":"httplistener"}],"output":{"name":"httplistener"}}],[11,"http","","Start listening to an address over HTTP.",348,{"inputs":[{"name":"httplistener"},{"name":"to"}],"output":{"name":"result"}}],[11,"https","","Start listening to an address over HTTPS.",348,{"inputs":[{"name":"httplistener"},{"name":"to"},{"name":"path"},{"name":"path"}],"output":{"name":"result"}}],[11,"https_with_context","","Start listening to an address of HTTPS using the given SslContext",348,{"inputs":[{"name":"httplistener"},{"name":"to"},{"name":"sslcontext"}],"output":{"name":"result"}}],[6,"Stream","::headers","",null,null],[11,"accept","hyper::net","",348,{"inputs":[{"name":"httplistener"}],"output":{"name":"result"}}],[11,"local_addr","","",348,{"inputs":[{"name":"httplistener"}],"output":{"name":"result"}}],[11,"clone","","",349,{"inputs":[{"name":"clonetcpstream"}],"output":{"name":"clonetcpstream"}}],[11,"read","","",349,null],[11,"write","","",349,null],[11,"flush","","",349,{"inputs":[{"name":"clonetcpstream"}],"output":{"name":"result"}}],[11,"clone","","",350,{"inputs":[{"name":"httpstream"}],"output":{"name":"httpstream"}}],[11,"fmt","","",350,{"inputs":[{"name":"httpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",350,null],[11,"write","","",350,null],[11,"flush","","",350,{"inputs":[{"name":"httpstream"}],"output":{"name":"result"}}],[11,"peer_addr","","",350,{"inputs":[{"name":"httpstream"}],"output":{"name":"result"}}],[11,"close","","",350,{"inputs":[{"name":"httpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[6,"Stream","::headers","",null,null],[11,"connect","hyper::net","",351,{"inputs":[{"name":"httpconnector"},{"name":"str"},{"name":"u16"},{"name":"str"}],"output":{"name":"result"}}],[11,"set_ssl_verifier","","",351,null],[11,"new","hyper::server::request","Create a new Request, reading the StartLine and Headers so they are\nimmediately useful.",352,{"inputs":[{"name":"request"},{"name":"bufreader"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"deconstruct","","Deconstruct a Request into its constituent parts.",352,null],[11,"read","","",352,null],[11,"fmt","hyper::server::response","",353,{"inputs":[{"name":"response"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"status","","The status of this response.",353,{"inputs":[{"name":"response"}],"output":{"name":"statuscode"}}],[11,"headers","","The headers of this response.",353,{"inputs":[{"name":"response"}],"output":{"name":"headers"}}],[11,"construct","","Construct a Response from its constituent parts.",353,{"inputs":[{"name":"response"},{"name":"httpversion"},{"name":"httpwriter"},{"name":"statuscode"},{"name":"headers"}],"output":{"name":"response"}}],[11,"deconstruct","","Deconstruct this Response into its constituent parts.",353,null],[11,"new","","Creates a new Response that can be used to write to a network stream.",353,{"inputs":[{"name":"response"},{"name":"write"},{"name":"headers"}],"output":{"name":"response"}}],[11,"send","","Writes the body and ends the response.",353,null],[11,"start","","Consume this Response<Fresh>, writing the Headers and Status and creating a Response<Streaming>",353,{"inputs":[{"name":"response"}],"output":{"name":"result"}}],[11,"status_mut","","Get a mutable reference to the status.",353,{"inputs":[{"name":"response"}],"output":{"name":"statuscode"}}],[11,"headers_mut","","Get a mutable reference to the Headers.",353,{"inputs":[{"name":"response"}],"output":{"name":"headers"}}],[11,"end","","Flushes all writing of a response to the client.",353,{"inputs":[{"name":"response"}],"output":{"name":"result"}}],[11,"write","","",353,null],[11,"flush","","",353,{"inputs":[{"name":"response"}],"output":{"name":"result"}}],[11,"eq","","",354,{"inputs":[{"name":"body"},{"name":"body"}],"output":{"name":"bool"}}],[11,"ne","","",354,{"inputs":[{"name":"body"},{"name":"body"}],"output":{"name":"bool"}}],[11,"drop","","",353,null],[11,"new","hyper::server::listener","Create a thread pool to manage the acceptor.",355,{"inputs":[{"name":"listenerpool"},{"name":"a"}],"output":{"name":"listenerpool"}}],[11,"accept","","Runs the acceptor pool. Blocks until the acceptors are closed.",355,null],[11,"drop","","",356,null],[11,"fmt","hyper::server","",357,{"inputs":[{"name":"sslconfig"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",358,{"inputs":[{"name":"server"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new server with the provided handler.",358,{"inputs":[{"name":"server"},{"name":"h"}],"output":{"name":"server"}}],[11,"http","","Creates a new server that will handle `HttpStream`s.",358,{"inputs":[{"name":"server"},{"name":"h"}],"output":{"name":"server"}}],[11,"https","","Creates a new server that will handler `HttpStreams`s using a TLS connection.",358,{"inputs":[{"name":"server"},{"name":"h"},{"name":"path"},{"name":"path"}],"output":{"name":"server"}}],[11,"https_with_context","","Creates a new server that will handler `HttpStreams`s using a TLS connection defined by an SslContext.",358,{"inputs":[{"name":"server"},{"name":"h"},{"name":"sslcontext"}],"output":{"name":"server"}}],[11,"listen_threads","","Binds to a socket, and starts handling connections using a task pool.",358,{"inputs":[{"name":"server"},{"name":"t"},{"name":"usize"}],"output":{"name":"result"}}],[11,"listen","","Binds to a socket and starts handling connections.",358,{"inputs":[{"name":"server"},{"name":"t"}],"output":{"name":"result"}}],[11,"with_listener","","Creates a new server that will handle `HttpStream`s.",358,{"inputs":[{"name":"server"},{"name":"l"},{"name":"usize"}],"output":{"name":"result"}}],[11,"fmt","","",359,{"inputs":[{"name":"listening"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",359,null],[11,"close","","Stop the server from listening to its socket address.",359,{"inputs":[{"name":"listening"}],"output":{"name":"result"}}],[11,"fmt","hyper::status","",360,{"inputs":[{"name":"statuscode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"canonical_reason","","Get the standardised `reason-phrase` for this status code.",360,{"inputs":[{"name":"statuscode"}],"output":{"name":"option"}}],[11,"class","","Determine the class of a status code, based on its first digit.",360,{"inputs":[{"name":"statuscode"}],"output":{"name":"statusclass"}}],[11,"is_informational","","Check if class is Informational.",360,{"inputs":[{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"is_success","","Check if class is Success.",360,{"inputs":[{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"is_redirection","","Check if class is Redirection.",360,{"inputs":[{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"is_client_error","","Check if class is ClientError.",360,{"inputs":[{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"is_server_error","","Check if class is ServerError.",360,{"inputs":[{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"is_strange_status","","Check if class is NoClass",360,{"inputs":[{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"fmt","","",360,{"inputs":[{"name":"statuscode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",360,{"inputs":[{"name":"statuscode"},{"name":"statuscode"}],"output":{"name":"bool"}}],[11,"clone","","",360,{"inputs":[{"name":"statuscode"}],"output":{"name":"statuscode"}}],[11,"partial_cmp","","",360,{"inputs":[{"name":"statuscode"},{"name":"statuscode"}],"output":{"name":"option"}}],[11,"cmp","","",360,{"inputs":[{"name":"statuscode"},{"name":"statuscode"}],"output":{"name":"ordering"}}],[11,"cmp","","",361,{"inputs":[{"name":"statusclass"},{"name":"statusclass"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",361,{"inputs":[{"name":"statusclass"},{"name":"statusclass"}],"output":{"name":"option"}}],[11,"lt","","",361,{"inputs":[{"name":"statusclass"},{"name":"statusclass"}],"output":{"name":"bool"}}],[11,"le","","",361,{"inputs":[{"name":"statusclass"},{"name":"statusclass"}],"output":{"name":"bool"}}],[11,"gt","","",361,{"inputs":[{"name":"statusclass"},{"name":"statusclass"}],"output":{"name":"bool"}}],[11,"ge","","",361,{"inputs":[{"name":"statusclass"},{"name":"statusclass"}],"output":{"name":"bool"}}],[11,"eq","","",361,{"inputs":[{"name":"statusclass"},{"name":"statusclass"}],"output":{"name":"bool"}}],[11,"ne","","",361,{"inputs":[{"name":"statusclass"},{"name":"statusclass"}],"output":{"name":"bool"}}],[11,"clone","","",361,{"inputs":[{"name":"statusclass"}],"output":{"name":"statusclass"}}],[11,"fmt","","",361,{"inputs":[{"name":"statusclass"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default_code","","Get the default status code for the class.",361,{"inputs":[{"name":"statusclass"}],"output":{"name":"statuscode"}}],[11,"clone","hyper::uri","",362,{"inputs":[{"name":"requesturi"}],"output":{"name":"requesturi"}}],[11,"eq","","",362,{"inputs":[{"name":"requesturi"},{"name":"requesturi"}],"output":{"name":"bool"}}],[11,"ne","","",362,{"inputs":[{"name":"requesturi"},{"name":"requesturi"}],"output":{"name":"bool"}}],[11,"fmt","","",362,{"inputs":[{"name":"requesturi"},{"name":"formatter"}],"output":{"name":"result"}}],[6,"Err","::headers","",null,null],[11,"from_str","hyper::uri","",362,{"inputs":[{"name":"requesturi"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","hyper::version","",363,{"inputs":[{"name":"httpversion"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",363,null],[11,"cmp","","",363,{"inputs":[{"name":"httpversion"},{"name":"httpversion"}],"output":{"name":"ordering"}}],[11,"clone","","",363,{"inputs":[{"name":"httpversion"}],"output":{"name":"httpversion"}}],[11,"partial_cmp","","",363,{"inputs":[{"name":"httpversion"},{"name":"httpversion"}],"output":{"name":"option"}}],[11,"lt","","",363,{"inputs":[{"name":"httpversion"},{"name":"httpversion"}],"output":{"name":"bool"}}],[11,"le","","",363,{"inputs":[{"name":"httpversion"},{"name":"httpversion"}],"output":{"name":"bool"}}],[11,"gt","","",363,{"inputs":[{"name":"httpversion"},{"name":"httpversion"}],"output":{"name":"bool"}}],[11,"ge","","",363,{"inputs":[{"name":"httpversion"},{"name":"httpversion"}],"output":{"name":"bool"}}],[11,"eq","","",363,{"inputs":[{"name":"httpversion"},{"name":"httpversion"}],"output":{"name":"bool"}}],[11,"ne","","",363,{"inputs":[{"name":"httpversion"},{"name":"httpversion"}],"output":{"name":"bool"}}],[11,"fmt","","",363,{"inputs":[{"name":"httpversion"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"Headers","::headers","A map of header fields on requests and responses.",null,null],[3,"HeadersItems","","An `Iterator` over the fields in a `Headers` map.",null,null],[3,"HeaderView","","Returned with the `HeadersItems` iterator.",null,null],[3,"HeaderFormatter","","A wrapper around any Header with a Display impl that calls fmt_header.",null,null],[4,"IfRange","","`If-Range` header, defined in [RFC7233](http://tools.ietf.org/html/rfc7233#section-3.2)",null,null],[13,"EntityTag","","The entity-tag the client has of the resource",172,null],[13,"Date","","The date when the client retrieved the resource",172,null],[3,"Language","","A language tag.\nSee http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.10",null,null],[12,"primary","","The language tag",335,null],[12,"sub","","A language subtag or country code",335,null],[3,"Referer","","`Referer` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.5.2)",null,null],[3,"Accept","","`Accept` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-5.3.2)",null,null],[3,"Location","","`Location` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-7.1.2)",null,null],[5,"qitem","","Convinience function to wrap a value in a `QualityItem`\nSets `q` to the default 1.0",null,{"inputs":[{"name":"t"}],"output":{"name":"qualityitem"}}],[3,"AccessControlRequestMethod","","`Access-Control-Request-Method` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-request-method-request-header)",null,null],[3,"Quality","","Represents a quality used in quality values.",null,null],[3,"UserAgent","","`User-Agent` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.5.3)",null,null],[4,"Expect","","The `Expect` header.",null,null],[13,"Continue","","The value `100-continue`.",165,null],[3,"AccessControlMaxAge","","`Access-Control-Max-Age` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-max-age-response-header)",null,null],[3,"SetCookie","","`Set-Cookie` header, defined [RFC6265](http://tools.ietf.org/html/rfc6265#section-4.1)",null,null],[3,"IfModifiedSince","","`If-Modified-Since` header, defined in\n[RFC7232](http://tools.ietf.org/html/rfc7232#section-3.3)",null,null],[3,"From","","`From` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-5.5.1)",null,null],[3,"ETag","","`ETag` header, defined in [RFC7232](http://tools.ietf.org/html/rfc7232#section-2.3)",null,null],[3,"Expires","","`Expires` header, defined in [RFC7234](http://tools.ietf.org/html/rfc7234#section-5.3)",null,null],[3,"AcceptCharset","","`Accept-Charset` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.3.3)",null,null],[5,"q","","Convenience function to create a `Quality` fromt a float.",null,{"inputs":[{"name":"f32"}],"output":{"name":"quality"}}],[3,"AcceptRanges","","`Accept-Ranges` header, defined in\n[RFC7233](http://tools.ietf.org/html/rfc7233#section-2.3)",null,null],[4,"IfNoneMatch","","`If-None-Match` header, defined in\n[RFC7232](https://tools.ietf.org/html/rfc7232#section-3.2)",null,null],[13,"Any","","Any value is a match",171,null],[13,"Items","","Only the listed items are a match",171,null],[3,"AccessControlRequestHeaders","","`Access-Control-Request-Headers` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-request-headers-request-header)",null,null],[3,"HttpDate","","A `time::Time` with HTTP formatting and parsing",null,null],[3,"QualityItem","","Represents an item with a quality value as defined in\n[RFC7231](https://tools.ietf.org/html/rfc7231#section-5.3.1).",null,null],[12,"item","","The actual contents of the field.",337,null],[12,"quality","","The quality (client or server preference) for the value.",337,null],[3,"LastModified","","`Last-Modified` header, defined in\n[RFC7232](http://tools.ietf.org/html/rfc7232#section-2.2)",null,null],[3,"Server","","`Server` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-7.4.2)",null,null],[8,"Scheme","","An Authorization scheme to be used in the header.",null,null],[10,"scheme","","An optional Scheme name.",364,{"inputs":[{"name":"scheme"}],"output":{"name":"option"}}],[10,"fmt_scheme","","Format the Scheme data into a header value.",364,{"inputs":[{"name":"scheme"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"AccessControlAllowOrigin","","The `Access-Control-Allow-Origin` response header,\npart of [CORS](http://www.w3.org/TR/cors/#access-control-allow-origin-response-header)",null,null],[13,"Any","","Allow all origins",136,null],[13,"Null","","A hidden origin",136,null],[13,"Value","","Allow one particular origin",136,null],[3,"TransferEncoding","","`Transfer-Encoding` header, defined in\n[RFC7230](http://tools.ietf.org/html/rfc7230#section-3.3.1)",null,null],[3,"ContentType","","`Content-Type` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-3.1.1.5)",null,null],[3,"Protocol","","Protocols that appear in the `Upgrade` header field",null,null],[12,"name","","The protocol identifier",183,null],[12,"version","","The optional version of the protocol, often in the format \"DIGIT.DIGIT\" (e.g.. \"1.2\")",183,null],[3,"Upgrade","","`Upgrade` header, defined in [RFC7230](http://tools.ietf.org/html/rfc7230#section-6.7)",null,null],[4,"Vary","","`Vary` header, defined in [RFC7231](https://tools.ietf.org/html/rfc7231#section-7.1.4)",null,null],[13,"Any","","Any value is a match",185,null],[13,"Items","","Only the listed items are a match",185,null],[3,"IfUnmodifiedSince","","`If-Unmodified-Since` header, defined in\n[RFC7232](http://tools.ietf.org/html/rfc7232#section-3.4)",null,null],[3,"Authorization","","`Authorization` header, defined in [RFC7235](https://tools.ietf.org/html/rfc7235#section-4.2)",null,null],[3,"AcceptEncoding","","`Accept-Encoding` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.3.4)",null,null],[4,"Charset","","A Mime charset.",null,null],[13,"Us_Ascii","","US ASCII",332,null],[13,"Iso_8859_1","","ISO-8859-1",332,null],[13,"Iso_8859_2","","ISO-8859-2",332,null],[13,"Iso_8859_3","","ISO-8859-3",332,null],[13,"Iso_8859_4","","ISO-8859-4",332,null],[13,"Iso_8859_5","","ISO-8859-5",332,null],[13,"Iso_8859_6","","ISO-8859-6",332,null],[13,"Iso_8859_7","","ISO-8859-7",332,null],[13,"Iso_8859_8","","ISO-8859-8",332,null],[13,"Iso_8859_9","","ISO-8859-9",332,null],[13,"Iso_8859_10","","ISO-8859-10",332,null],[13,"Shift_Jis","","Shift_JIS",332,null],[13,"Euc_Jp","","EUC-JP",332,null],[13,"Iso_2022_Kr","","ISO-2022-KR",332,null],[13,"Euc_Kr","","EUC-KR",332,null],[13,"Iso_2022_Jp","","ISO-2022-JP",332,null],[13,"Iso_2022_Jp_2","","ISO-2022-JP-2",332,null],[13,"Iso_8859_6_E","","ISO-8859-6-E",332,null],[13,"Iso_8859_6_I","","ISO-8859-6-I",332,null],[13,"Iso_8859_8_E","","ISO-8859-8-E",332,null],[13,"Iso_8859_8_I","","ISO-8859-8-I",332,null],[13,"Gb2312","","GB2312",332,null],[13,"Big5","","Big5",332,null],[13,"Koi8_R","","KOI8-R",332,null],[13,"Ext","","An arbitrary charset specified as a string",332,null],[3,"ContentLength","","`Content-Length` header, defined in\n[RFC7230](http://tools.ietf.org/html/rfc7230#section-3.3.2)",null,null],[3,"Basic","","Credential holder for Basic Authentication",null,null],[12,"username","","The username as a possibly empty string",147,null],[12,"password","","The password. `None` if the `:` delimiter character was not\npart of the parsed input.",147,null],[3,"ContentEncoding","","`Content-Encoding` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-3.1.2.2)",null,null],[3,"AcceptLanguage","","`Accept-Language` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.3.5)",null,null],[4,"IfMatch","","`If-Match` header, defined in\n[RFC7232](https://tools.ietf.org/html/rfc7232#section-3.1)",null,null],[13,"Any","","Any value is a match",169,null],[13,"Items","","Only the listed items are a match",169,null],[4,"ProtocolName","","A protocol name used to identify a spefic protocol. Names are case-sensitive\nexcept for the `WebSocket` value.",null,null],[13,"Http","","`HTTP` value, Hypertext Transfer Protocol",182,null],[13,"Tls","","`TLS` value, Transport Layer Security [RFC2817](http://tools.ietf.org/html/rfc2817)",182,null],[13,"WebSocket","","`WebSocket` value, matched case insensitively,Web Socket Protocol\n[RFC6455](http://tools.ietf.org/html/rfc6455)",182,null],[13,"H2c","","`h2c` value, HTTP/2 over cleartext TCP",182,null],[13,"Unregistered","","Any other protocol name not known to hyper",182,null],[3,"CacheControl","","`Cache-Control` header, defined in [RFC7234](https://tools.ietf.org/html/rfc7234#section-5.2)",null,null],[3,"Host","","The `Host` header.",null,null],[12,"hostname","","The hostname, such a example.domain.",168,null],[12,"port","","An optional port number.",168,null],[3,"Date","","`Date` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-7.1.1.2)",null,null],[3,"Cookie","","`Cookie` header, defined in [RFC6265](http://tools.ietf.org/html/rfc6265#section-5.4)",null,null],[4,"ConnectionOption","","Values that can be in the `Connection` header.",null,null],[13,"KeepAlive","","The `keep-alive` connection value.",151,null],[13,"Close","","The `close` connection value.",151,null],[13,"ConnectionHeader","","Values in the Connection header that are supposed to be names of other Headers.",151,null],[3,"Connection","","`Connection` header, defined in\n[RFC7230](http://tools.ietf.org/html/rfc7230#section-6.1)",null,null],[4,"Encoding","","A value to represent an encoding used in `Transfer-Encoding`\nor `Accept-Encoding` header.",null,null],[13,"Chunked","","The `chunked` encoding.",333,null],[13,"Gzip","","The `gzip` encoding.",333,null],[13,"Deflate","","The `deflate` encoding.",333,null],[13,"Compress","","The `compress` encoding.",333,null],[13,"Identity","","The `identity` encoding.",333,null],[13,"EncodingExt","","Some other encoding that is less common, can be any String.",333,null],[4,"Pragma","","The `Pragma` header defined by HTTP/1.0.",null,null],[13,"NoCache","","Corresponds to the `no-cache` value.",176,null],[13,"Ext","","Every value other than `no-cache`.",176,null],[3,"ContentLanguage","","`Content-Language` header, defined in\n[RFC7231](https://tools.ietf.org/html/rfc7231#section-3.1.3.2)",null,null],[3,"AccessControlAllowMethods","","`Access-Control-Allow-Methods` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-allow-methods-response-header)",null,null],[3,"AccessControlAllowHeaders","","`Access-Control-Allow-Headers` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-allow-headers-response-header)",null,null],[3,"EntityTag","","An entity tag, defined in [RFC7232](https://tools.ietf.org/html/rfc7232#section-2.3)",null,null],[12,"weak","","Weakness indicator for the tag",164,null],[4,"CacheDirective","","CacheControl contains a list of these directives.",null,null],[13,"NoCache","","\"no-cache\"",149,null],[13,"NoStore","","\"no-store\"",149,null],[13,"NoTransform","","\"no-transform\"",149,null],[13,"OnlyIfCached","","\"only-if-cached\"",149,null],[13,"MaxAge","","\"max-age=delta\"",149,null],[13,"MaxStale","","\"max-stale=delta\"",149,null],[13,"MinFresh","","\"min-fresh=delta\"",149,null],[13,"MustRevalidate","","\"must-revalidate\"",149,null],[13,"Public","","\"public\"",149,null],[13,"Private","","\"private\"",149,null],[13,"ProxyRevalidate","","\"proxy-revalidate\"",149,null],[13,"SMaxAge","","\"s-maxage=delta\"",149,null],[13,"Extension","","Extension directives. Optionally include an argument.",149,null],[3,"Allow","","`Allow` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-7.4.1)",null,null],[3,"Headers","","A map of header fields on requests and responses.",null,null],[8,"Plugin","","An interface for plugins that cache values between calls.",null,null],[11,"get","","Return a copy of the plugin's produced value.",365,{"inputs":[{"name":"plugin"}],"output":{"name":"result"}}],[11,"get_ref","","Return a reference to the plugin's produced value.",365,{"inputs":[{"name":"plugin"}],"output":{"name":"result"}}],[11,"get_mut","","Return a mutable reference to the plugin's produced value.",365,{"inputs":[{"name":"plugin"}],"output":{"name":"result"}}],[11,"compute","","Create and evaluate a once-off instance of a plugin.",365,{"inputs":[{"name":"plugin"}],"output":{"name":"result"}}],[8,"Set","","A trait providing the set and set_mut methods for all types.",null,null],[11,"set","","Modify self using the provided modifier.",366,{"inputs":[{"name":"set"},{"name":"m"}],"output":{"name":"self"}}],[11,"set_mut","","Modify self through a mutable reference with the provided modifier.",366,{"inputs":[{"name":"set"},{"name":"m"}],"output":{"name":"self"}}],[8,"Error","","An extension to std::error::Error which provides dynamic downcasting of\nerrors for use in highly generic contexts.",null,null],[0,"mime","","Re-exporting the mime crate, for convenience.",null,null],[4,"Value","::mime","",null,null],[13,"Utf8","","",161,null],[13,"Ext","","",161,null],[3,"Mime","","Mime, or Media Type. Encapsulates common registers types.",null,null],[4,"Attr","","",null,null],[13,"Charset","","",160,null],[13,"Q","","",160,null],[13,"Ext","","",160,null],[4,"SubLevel","","",null,null],[13,"Star","","",159,null],[13,"Plain","","",159,null],[13,"Html","","",159,null],[13,"Xml","","",159,null],[13,"Javascript","","",159,null],[13,"Css","","",159,null],[13,"Json","","",159,null],[13,"WwwFormUrlEncoded","","",159,null],[13,"FormData","","",159,null],[13,"Png","","",159,null],[13,"Gif","","",159,null],[13,"Bmp","","",159,null],[13,"Jpeg","","",159,null],[13,"Ext","","",159,null],[4,"TopLevel","","",null,null],[13,"Star","","",158,null],[13,"Text","","",158,null],[13,"Image","","",158,null],[13,"Audio","","",158,null],[13,"Video","","",158,null],[13,"Application","","",158,null],[13,"Multipart","","",158,null],[13,"Message","","",158,null],[13,"Model","","",158,null],[13,"Ext","","",158,null],[6,"Param","","",null,null],[3,"Url","","HTTP/HTTPS URL type for Iron.",null,null],[12,"scheme","","The lower-cased scheme of the URL, typically \"http\" or \"https\".",367,null],[12,"host","","The host field of the URL, probably a domain.",367,null],[12,"port","","The connection port.",367,null],[12,"path","","The URL path, the resource to be accessed.",367,null],[12,"username","","The URL username field, from the userinfo section of the URL.",367,null],[12,"password","","The URL password field, from the userinfo section of the URL.",367,null],[12,"query","","The URL query string.",367,null],[12,"fragment","","The URL fragment.",367,null],[3,"Iron","","The primary entrance point to `Iron`, a `struct` to instantiate a new server.",null,null],[12,"handler","","Iron contains a `Handler`, which it uses to create responses for client\nrequests.",368,null],[12,"addr","","Once listening, the local address that this server is bound to.",368,null],[12,"protocol","","Once listening, the protocol used to serve content.",368,null],[4,"Protocol","","Protocol used to serve content. Future versions of Iron may add new protocols\nto this enum. Thus you should not exhaustively match on its variants.",null,null],[13,"Http","","Plaintext HTTP/1",369,null],[13,"Https","","HTTP/1 over SSL/TLS",369,null],[12,"certificate","::Protocol","Path to SSL certificate file",369,null],[12,"key","","Path to SSL private key file",369,null],[0,"error","","Iron's error type and associated utilities.",null,null],[8,"Error","::error","An extension to std::error::Error which provides dynamic downcasting of\nerrors for use in highly generic contexts.",null,null],[4,"HttpError","","A set of errors that can occur parsing HTTP streams.",null,null],[13,"Method","","An invalid `Method`, such as `GE,T`.",23,null],[13,"Uri","","An invalid `RequestUri`, such as `exam ple.domain`.",23,null],[13,"Version","","An invalid `HttpVersion`, such as `HTP/1.1`",23,null],[13,"Header","","An invalid `Header`.",23,null],[13,"TooLarge","","A message head is too large to be reasonable.",23,null],[13,"Status","","An invalid `Status`, such as `1337 ELITE`.",23,null],[13,"Io","","An `io::Error` that occurred while trying to read or write to a network stream.",23,null],[13,"Ssl","","An error from the `openssl` library.",23,null],[6,"HttpResult","","",null,null],[3,"IronError","","The type of Errors inside and when using Iron.",null,null],[12,"error","","The underlying error",370,null],[12,"response","","What to do about this error.",370,null],[11,"fmt","","",370,{"inputs":[{"name":"ironerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new IronError from an error and a modifier.",370,{"inputs":[{"name":"ironerror"},{"name":"e"},{"name":"m"}],"output":{"name":"ironerror"}}],[11,"fmt","","",370,{"inputs":[{"name":"ironerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",370,{"inputs":[{"name":"ironerror"}],"output":{"name":"str"}}],[11,"cause","","",370,{"inputs":[{"name":"ironerror"}],"output":{"name":"option"}}],[0,"prelude","","A module meant to be glob imported when using Iron, for instance:",null,null],[8,"Set","::prelude","A trait providing the set and set_mut methods for all types.",null,null],[11,"set","","Modify self using the provided modifier.",366,{"inputs":[{"name":"set"},{"name":"m"}],"output":{"name":"self"}}],[11,"set_mut","","Modify self through a mutable reference with the provided modifier.",366,{"inputs":[{"name":"set"},{"name":"m"}],"output":{"name":"self"}}],[8,"Pluggable","","An interface for plugins that cache values between calls.",null,null],[11,"get","","Return a copy of the plugin's produced value.",365,{"inputs":[{"name":"pluggable"}],"output":{"name":"result"}}],[11,"get_ref","","Return a reference to the plugin's produced value.",365,{"inputs":[{"name":"pluggable"}],"output":{"name":"result"}}],[11,"get_mut","","Return a mutable reference to the plugin's produced value.",365,{"inputs":[{"name":"pluggable"}],"output":{"name":"result"}}],[11,"compute","","Create and evaluate a once-off instance of a plugin.",365,{"inputs":[{"name":"pluggable"}],"output":{"name":"result"}}],[0,"typemap","","Re-exports from the TypeMap crate.",null,null],[3,"TypeMap","::typemap","A map keyed by types.",null,null],[8,"Key","","This trait defines the relationship between keys and values in a TypeMap.",null,null],[16,"Value","","The value type associated with this key type.",371,null],[0,"modifier","","Re-exports from the Modifier crate.",null,null],[0,"status","","Status Codes",null,null],[4,"Status","::status","An HTTP status code (`status-code` in RFC 7230 et al.).",null,null],[13,"Continue","","100 Continue\n[[RFC7231, Section 6.2.1](https://tools.ietf.org/html/rfc7231#section-6.2.1)]",360,null],[13,"SwitchingProtocols","","101 Switching Protocols\n[[RFC7231, Section 6.2.2](https://tools.ietf.org/html/rfc7231#section-6.2.2)]",360,null],[13,"Processing","","102 Processing\n[[RFC2518](https://tools.ietf.org/html/rfc2518)]",360,null],[13,"Ok","","200 OK\n[[RFC7231, Section 6.3.1](https://tools.ietf.org/html/rfc7231#section-6.3.1)]",360,null],[13,"Created","","201 Created\n[[RFC7231, Section 6.3.2](https://tools.ietf.org/html/rfc7231#section-6.3.2)]",360,null],[13,"Accepted","","202 Accepted\n[[RFC7231, Section 6.3.3](https://tools.ietf.org/html/rfc7231#section-6.3.3)]",360,null],[13,"NonAuthoritativeInformation","","203 Non-Authoritative Information\n[[RFC7231, Section 6.3.4](https://tools.ietf.org/html/rfc7231#section-6.3.4)]",360,null],[13,"NoContent","","204 No Content\n[[RFC7231, Section 6.3.5](https://tools.ietf.org/html/rfc7231#section-6.3.5)]",360,null],[13,"ResetContent","","205 Reset Content\n[[RFC7231, Section 6.3.6](https://tools.ietf.org/html/rfc7231#section-6.3.6)]",360,null],[13,"PartialContent","","206 Partial Content\n[[RFC7233, Section 4.1](https://tools.ietf.org/html/rfc7233#section-4.1)]",360,null],[13,"MultiStatus","","207 Multi-Status\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",360,null],[13,"AlreadyReported","","208 Already Reported\n[[RFC5842](https://tools.ietf.org/html/rfc5842)]",360,null],[13,"ImUsed","","226 IM Used\n[[RFC3229](https://tools.ietf.org/html/rfc3229)]",360,null],[13,"MultipleChoices","","300 Multiple Choices\n[[RFC7231, Section 6.4.1](https://tools.ietf.org/html/rfc7231#section-6.4.1)]",360,null],[13,"MovedPermanently","","301 Moved Permanently\n[[RFC7231, Section 6.4.2](https://tools.ietf.org/html/rfc7231#section-6.4.2)]",360,null],[13,"Found","","302 Found\n[[RFC7231, Section 6.4.3](https://tools.ietf.org/html/rfc7231#section-6.4.3)]",360,null],[13,"SeeOther","","303 See Other\n[[RFC7231, Section 6.4.4](https://tools.ietf.org/html/rfc7231#section-6.4.4)]",360,null],[13,"NotModified","","304 Not Modified\n[[RFC7232, Section 4.1](https://tools.ietf.org/html/rfc7232#section-4.1)]",360,null],[13,"UseProxy","","305 Use Proxy\n[[RFC7231, Section 6.4.5](https://tools.ietf.org/html/rfc7231#section-6.4.5)]",360,null],[13,"TemporaryRedirect","","307 Temporary Redirect\n[[RFC7231, Section 6.4.7](https://tools.ietf.org/html/rfc7231#section-6.4.7)]",360,null],[13,"PermanentRedirect","","308 Permanent Redirect\n[[RFC7238](https://tools.ietf.org/html/rfc7238)]",360,null],[13,"BadRequest","","400 Bad Request\n[[RFC7231, Section 6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)]",360,null],[13,"Unauthorized","","401 Unauthorized\n[[RFC7235, Section 3.1](https://tools.ietf.org/html/rfc7235#section-3.1)]",360,null],[13,"PaymentRequired","","402 Payment Required\n[[RFC7231, Section 6.5.2](https://tools.ietf.org/html/rfc7231#section-6.5.2)]",360,null],[13,"Forbidden","","403 Forbidden\n[[RFC7231, Section 6.5.3](https://tools.ietf.org/html/rfc7231#section-6.5.3)]",360,null],[13,"NotFound","","404 Not Found\n[[RFC7231, Section 6.5.4](https://tools.ietf.org/html/rfc7231#section-6.5.4)]",360,null],[13,"MethodNotAllowed","","405 Method Not Allowed\n[[RFC7231, Section 6.5.5](https://tools.ietf.org/html/rfc7231#section-6.5.5)]",360,null],[13,"NotAcceptable","","406 Not Acceptable\n[[RFC7231, Section 6.5.6](https://tools.ietf.org/html/rfc7231#section-6.5.6)]",360,null],[13,"ProxyAuthenticationRequired","","407 Proxy Authentication Required\n[[RFC7235, Section 3.2](https://tools.ietf.org/html/rfc7235#section-3.2)]",360,null],[13,"RequestTimeout","","408 Request Timeout\n[[RFC7231, Section 6.5.7](https://tools.ietf.org/html/rfc7231#section-6.5.7)]",360,null],[13,"Conflict","","409 Conflict\n[[RFC7231, Section 6.5.8](https://tools.ietf.org/html/rfc7231#section-6.5.8)]",360,null],[13,"Gone","","410 Gone\n[[RFC7231, Section 6.5.9](https://tools.ietf.org/html/rfc7231#section-6.5.9)]",360,null],[13,"LengthRequired","","411 Length Required\n[[RFC7231, Section 6.5.10](https://tools.ietf.org/html/rfc7231#section-6.5.10)]",360,null],[13,"PreconditionFailed","","412 Precondition Failed\n[[RFC7232, Section 4.2](https://tools.ietf.org/html/rfc7232#section-4.2)]",360,null],[13,"PayloadTooLarge","","413 Payload Too Large\n[[RFC7231, Section 6.5.11](https://tools.ietf.org/html/rfc7231#section-6.5.11)]",360,null],[13,"UriTooLong","","414 URI Too Long\n[[RFC7231, Section 6.5.12](https://tools.ietf.org/html/rfc7231#section-6.5.12)]",360,null],[13,"UnsupportedMediaType","","415 Unsupported Media Type\n[[RFC7231, Section 6.5.13](https://tools.ietf.org/html/rfc7231#section-6.5.13)]",360,null],[13,"RangeNotSatisfiable","","416 Range Not Satisfiable\n[[RFC7233, Section 4.4](https://tools.ietf.org/html/rfc7233#section-4.4)]",360,null],[13,"ExpectationFailed","","417 Expectation Failed\n[[RFC7231, Section 6.5.14](https://tools.ietf.org/html/rfc7231#section-6.5.14)]",360,null],[13,"ImATeapot","","418 I'm a teapot\n[curiously, not registered by IANA, but [RFC2324](https://tools.ietf.org/html/rfc2324)]",360,null],[13,"UnprocessableEntity","","422 Unprocessable Entity\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",360,null],[13,"Locked","","423 Locked\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",360,null],[13,"FailedDependency","","424 Failed Dependency\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",360,null],[13,"UpgradeRequired","","426 Upgrade Required\n[[RFC7231, Section 6.5.15](https://tools.ietf.org/html/rfc7231#section-6.5.15)]",360,null],[13,"PreconditionRequired","","428 Precondition Required\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",360,null],[13,"TooManyRequests","","429 Too Many Requests\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",360,null],[13,"RequestHeaderFieldsTooLarge","","431 Request Header Fields Too Large\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",360,null],[13,"InternalServerError","","500 Internal Server Error\n[[RFC7231, Section 6.6.1](https://tools.ietf.org/html/rfc7231#section-6.6.1)]",360,null],[13,"NotImplemented","","501 Not Implemented\n[[RFC7231, Section 6.6.2](https://tools.ietf.org/html/rfc7231#section-6.6.2)]",360,null],[13,"BadGateway","","502 Bad Gateway\n[[RFC7231, Section 6.6.3](https://tools.ietf.org/html/rfc7231#section-6.6.3)]",360,null],[13,"ServiceUnavailable","","503 Service Unavailable\n[[RFC7231, Section 6.6.4](https://tools.ietf.org/html/rfc7231#section-6.6.4)]",360,null],[13,"GatewayTimeout","","504 Gateway Timeout\n[[RFC7231, Section 6.6.5](https://tools.ietf.org/html/rfc7231#section-6.6.5)]",360,null],[13,"HttpVersionNotSupported","","505 HTTP Version Not Supported\n[[RFC7231, Section 6.6.6](https://tools.ietf.org/html/rfc7231#section-6.6.6)]",360,null],[13,"VariantAlsoNegotiates","","506 Variant Also Negotiates\n[[RFC2295](https://tools.ietf.org/html/rfc2295)]",360,null],[13,"InsufficientStorage","","507 Insufficient Storage\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",360,null],[13,"LoopDetected","","508 Loop Detected\n[[RFC5842](https://tools.ietf.org/html/rfc5842)]",360,null],[13,"NotExtended","","510 Not Extended\n[[RFC2774](https://tools.ietf.org/html/rfc2774)]",360,null],[13,"NetworkAuthenticationRequired","","511 Network Authentication Required\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",360,null],[13,"Unregistered","","A status code not in the IANA HTTP status code registry or very well known",360,null],[0,"method","","HTTP Methods",null,null],[4,"Method","::method","The Request Method (VERB)",null,null],[13,"Options","","OPTIONS",24,null],[13,"Get","","GET",24,null],[13,"Post","","POST",24,null],[13,"Put","","PUT",24,null],[13,"Delete","","DELETE",24,null],[13,"Head","","HEAD",24,null],[13,"Trace","","TRACE",24,null],[13,"Connect","","CONNECT",24,null],[13,"Patch","","PATCH",24,null],[13,"Extension","","Method extensions. An example would be `let m = Extension(\"FOO\".to_string())`.",24,null],[0,"middleware","","Iron's Middleware and Handler System",null,null],[3,"Chain","::middleware","The middleware chain used in Iron.",null,null],[8,"Handler","","`Handler`s are responsible for handling requests by creating Responses from Requests.",null,null],[10,"handle","","Produce a `Response` from a Request, with the possibility of error.",372,{"inputs":[{"name":"handler"},{"name":"request"}],"output":{"name":"ironresult"}}],[8,"BeforeMiddleware","","`BeforeMiddleware` are fired before a `Handler` is called inside of a Chain.",null,null],[11,"before","","Do whatever work this middleware should do with a `Request` object.",373,{"inputs":[{"name":"beforemiddleware"},{"name":"request"}],"output":{"name":"ironresult"}}],[11,"catch","","Respond to an error thrown by a previous `BeforeMiddleware`.",373,{"inputs":[{"name":"beforemiddleware"},{"name":"request"},{"name":"ironerror"}],"output":{"name":"ironresult"}}],[8,"AfterMiddleware","","`AfterMiddleware` are fired after a `Handler` is called inside of a Chain.",null,null],[11,"after","","Do whatever post-processing this middleware should do.",374,{"inputs":[{"name":"aftermiddleware"},{"name":"request"},{"name":"response"}],"output":{"name":"ironresult"}}],[11,"catch","","Respond to an error thrown by previous `AfterMiddleware`, the `Handler`,\nor a `BeforeMiddleware`.",374,{"inputs":[{"name":"aftermiddleware"},{"name":"request"},{"name":"ironerror"}],"output":{"name":"ironresult"}}],[8,"AroundMiddleware","","AroundMiddleware are used to wrap and replace the `Handler` in a `Chain`.",null,null],[10,"around","","Produce a `Handler` from this `AroundMiddleware` given another `Handler`.",375,{"inputs":[{"name":"aroundmiddleware"},{"name":"box"}],"output":{"name":"box"}}],[11,"new","","Construct a new ChainBuilder from a `Handler`.",376,{"inputs":[{"name":"chain"},{"name":"h"}],"output":{"name":"chain"}}],[11,"link","","Link both a before and after middleware to the chain at once.",376,null],[11,"link_before","","Link a `BeforeMiddleware` to the `Chain`, after all previously linked\n`BeforeMiddleware`.",376,{"inputs":[{"name":"chain"},{"name":"b"}],"output":null}],[11,"link_after","","Link a `AfterMiddleware` to the `Chain`, after all previously linked\n`AfterMiddleware`.",376,{"inputs":[{"name":"chain"},{"name":"a"}],"output":null}],[11,"around","","Apply an `AroundMiddleware` to the `Handler` in this `Chain`.",376,{"inputs":[{"name":"chain"},{"name":"a"}],"output":null}],[11,"handle","","",376,{"inputs":[{"name":"chain"},{"name":"request"}],"output":{"name":"ironresult"}}],[11,"handle","alloc::boxed","",4,{"inputs":[{"name":"box"},{"name":"request"}],"output":{"name":"ironresult"}}],[11,"before","","",4,{"inputs":[{"name":"box"},{"name":"request"}],"output":{"name":"ironresult"}}],[11,"catch","","",4,{"inputs":[{"name":"box"},{"name":"request"},{"name":"ironerror"}],"output":{"name":"ironresult"}}],[11,"after","","",4,{"inputs":[{"name":"box"},{"name":"request"},{"name":"response"}],"output":{"name":"ironresult"}}],[11,"catch","","",4,{"inputs":[{"name":"box"},{"name":"request"},{"name":"ironerror"}],"output":{"name":"ironresult"}}],[0,"response","","Iron's HTTP Response representation and associated methods.",null,null],[3,"HttpResponse","::response","The outgoing half for a Tcp connection, created by a `Server` and given to a `Handler`.",null,null],[12,"version","","The HTTP version of this response.",353,null],[3,"Response","","The response representation given to `Middleware`",null,null],[12,"status","","The response status-code.",377,null],[12,"headers","","The headers of the response.",377,null],[12,"extensions","","A TypeMap to be used as an extensible storage for data\nassociated with this Response.",377,null],[12,"body","","The body of the response.",377,null],[11,"new","","Construct a blank Response",377,{"inputs":[{"name":"response"}],"output":{"name":"response"}}],[11,"with","","Construct a Response with the specified modifier pre-applied.",377,{"inputs":[{"name":"response"},{"name":"m"}],"output":{"name":"response"}}],[11,"fmt","","",377,{"inputs":[{"name":"response"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",377,{"inputs":[{"name":"response"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"extensions","","",377,{"inputs":[{"name":"response"}],"output":{"name":"typemap"}}],[11,"extensions_mut","","",377,{"inputs":[{"name":"response"}],"output":{"name":"typemap"}}],[0,"request","","Iron's HTTP Request representation and associated methods.",null,null],[3,"HttpRequest","::request","A request bundles several parts of an incoming `NetworkStream`, given to a `Handler`.",null,null],[12,"remote_addr","","The IP address of the remote connection.",352,null],[12,"method","","The `Method`, such as `Get`, `Post`, etc.",352,null],[12,"headers","","The headers of the incoming request.",352,null],[12,"uri","","The target request-uri for this request.",352,null],[12,"version","","The version of HTTP for this request.",352,null],[3,"Request","","The `Request` given to all `Middleware`.",null,null],[12,"url","","The requested URL.",378,null],[12,"remote_addr","","The originating address of the request.",378,null],[12,"local_addr","","The local address of the request.",378,null],[12,"headers","","The request headers.",378,null],[12,"body","","The request body as a reader.",378,null],[12,"method","","The request method.",378,null],[12,"extensions","","Extensible storage for data passed between middleware.",378,null],[3,"Body","","The body of an Iron request,",null,null],[11,"fmt","","",367,{"inputs":[{"name":"url"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",367,{"inputs":[{"name":"url"}],"output":{"name":"url"}}],[11,"eq","","",367,{"inputs":[{"name":"url"},{"name":"url"}],"output":{"name":"bool"}}],[11,"ne","","",367,{"inputs":[{"name":"url"},{"name":"url"}],"output":{"name":"bool"}}],[11,"parse","","Create a URL from a string.",367,{"inputs":[{"name":"url"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_generic_url","","Create a `Url` from a `rust-url` `Url`.",367,{"inputs":[{"name":"url"},{"name":"url"}],"output":{"name":"result"}}],[11,"into_generic_url","","Create a `rust-url` `Url` from a `Url`.",367,{"inputs":[{"name":"url"}],"output":{"name":"url"}}],[11,"fmt","","",367,{"inputs":[{"name":"url"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","::request","",378,{"inputs":[{"name":"request"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_http","","Create a request from an HttpRequest.",378,{"inputs":[{"name":"request"},{"name":"httprequest"},{"name":"socketaddr"},{"name":"protocol"}],"output":{"name":"result"}}],[11,"new","","Create a new reader for use in an Iron request from a hyper HttpReader.",379,{"inputs":[{"name":"body"},{"name":"httpreader"}],"output":{"name":"body"}}],[11,"read","","",379,null],[11,"extensions","","",378,{"inputs":[{"name":"request"}],"output":{"name":"typemap"}}],[11,"extensions_mut","","",378,{"inputs":[{"name":"request"}],"output":{"name":"typemap"}}],[0,"modifiers","","Defines a series of convenience modifiers for editing Responses",null,null],[3,"Header","::modifiers","A modifier for changing headers on requests and responses.",null,null],[3,"Redirect","","A modifier for creating redirect responses.",null,null],[11,"new","conduit_mime_types","",380,{"inputs":[{"name":"types"}],"output":{"name":"result"}}],[11,"get_extension","","",380,{"inputs":[{"name":"types"},{"name":"str"}],"output":{"name":"option"}}],[11,"get_mime_type","","",380,{"inputs":[{"name":"types"},{"name":"str"}],"output":{"name":"option"}}],[11,"mime_for_path","","",380,{"inputs":[{"name":"types"},{"name":"path"}],"output":{"name":"str"}}],[11,"eq","","",380,{"inputs":[{"name":"types"},{"name":"types"}],"output":{"name":"bool"}}],[11,"ne","","",380,{"inputs":[{"name":"types"},{"name":"types"}],"output":{"name":"bool"}}],[11,"clone","","",380,{"inputs":[{"name":"types"}],"output":{"name":"types"}}],[11,"fmt","","",380,{"inputs":[{"name":"types"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"modify","::mime","",157,{"inputs":[{"name":"mime"},{"name":"response"}],"output":null}],[11,"modify","alloc::boxed","",4,{"inputs":[{"name":"box"},{"name":"response"}],"output":null}],[11,"modify","collections::string","",99,{"inputs":[{"name":"string"},{"name":"response"}],"output":null}],[11,"modify","collections::vec","",26,{"inputs":[{"name":"vec"},{"name":"response"}],"output":null}],[11,"modify","std::fs","",381,{"inputs":[{"name":"file"},{"name":"response"}],"output":null}],[11,"modify","std::path","Set the body to the contents of the File at this path.",382,{"inputs":[{"name":"pathbuf"},{"name":"response"}],"output":null}],[11,"modify","::status","",360,{"inputs":[{"name":"status"},{"name":"response"}],"output":null}],[11,"modify","::modifiers","",383,{"inputs":[{"name":"header"},{"name":"response"}],"output":null}],[11,"modify","","",383,{"inputs":[{"name":"header"},{"name":"request"}],"output":null}],[11,"modify","","",384,{"inputs":[{"name":"redirect"},{"name":"response"}],"output":null}],[11,"clone","","",369,{"inputs":[{"name":"protocol"}],"output":{"name":"protocol"}}],[11,"name","","Return the name used for this protocol in a URI's scheme part.",369,{"inputs":[{"name":"protocol"}],"output":{"name":"str"}}],[11,"http","","Kick off the server process using the HTTP protocol.",368,{"inputs":[{"name":"iron"},{"name":"a"}],"output":{"name":"httpresult"}}],[11,"https","","Kick off the server process using the HTTPS protocol.",368,{"inputs":[{"name":"iron"},{"name":"a"},{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"httpresult"}}],[11,"listen_with","","Kick off the server process with X threads.",368,{"inputs":[{"name":"iron"},{"name":"a"},{"name":"usize"},{"name":"protocol"}],"output":{"name":"httpresult"}}],[11,"new","","Instantiate a new instance of `Iron`.",368,{"inputs":[{"name":"iron"},{"name":"h"}],"output":{"name":"iron"}}],[11,"handle","","",368,{"inputs":[{"name":"iron"},{"name":"httprequest"},{"name":"httpresponse"}],"output":null}],[6,"IronResult","","The Result alias used throughout Iron and in clients of Iron.",null,null]],"paths":[[3,"TypeMap"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"Box"],[8,"Header"],[8,"HeaderFormat"],[3,"Headers"],[3,"BufReader"],[3,"Config"],[3,"PoolImpl"],[4,"Scheme"],[3,"Pool"],[3,"PooledStream"],[3,"Request"],[3,"Response"],[3,"Client"],[3,"ConnAdapter"],[3,"Connector"],[3,"RequestBuilder"],[4,"Body"],[3,"Url"],[4,"RedirectPolicy"],[4,"HttpError"],[4,"Method"],[3,"Accept"],[3,"Vec"],[3,"BinaryHeap"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"BitVec"],[3,"Iter"],[3,"BitSet"],[3,"SetIter"],[3,"TwoBitPositions"],[3,"Union"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"RawItems"],[3,"Node"],[3,"Handle"],[3,"ElemsAndEdges"],[3,"MoveTraversalImpl"],[3,"AbsTraversal"],[3,"NodeSlice"],[3,"MutNodeSlice"],[3,"BTreeMap"],[3,"AbsIter"],[3,"IdRef"],[3,"PartialSearchStack"],[3,"Pusher"],[3,"SearchStack"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"Range"],[3,"RangeMut"],[4,"Entry"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"BTreeSet"],[3,"Iter"],[3,"IntoIter"],[3,"Range"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Intersection"],[3,"Union"],[3,"Rc"],[3,"Arc"],[4,"Cow"],[3,"EnumSet"],[3,"Iter"],[3,"Argument"],[3,"FormatSpec"],[4,"Alignment"],[4,"Count"],[4,"Position"],[3,"Iter"],[3,"IntoIter"],[3,"Rawlink"],[3,"LinkedList"],[3,"IterMut"],[3,"RangeFrom"],[3,"RangeTo"],[3,"Range"],[3,"ElementSwaps"],[4,"Direction"],[3,"SizeDirection"],[3,"Permutations"],[4,"DecompositionType"],[3,"Decompositions"],[4,"RecompositionState"],[3,"Recompositions"],[3,"Utf16Units"],[3,"String"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"StrSearcher"],[4,"State"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[3,"DerefString"],[3,"ParseError"],[3,"Drain"],[3,"IntoIter"],[3,"Drain"],[3,"DerefVec"],[3,"PartialVecNonZeroSized"],[3,"PartialVecZeroSized"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"VecMap"],[4,"Entry"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"Values"],[3,"Drain"],[3,"IntoIter"],[4,"Bound"],[3,"AccessControlAllowHeaders"],[3,"AccessControlAllowMethods"],[4,"AccessControlAllowOrigin"],[3,"AccessControlMaxAge"],[3,"AccessControlRequestHeaders"],[3,"AccessControlRequestMethod"],[3,"AcceptCharset"],[3,"AcceptEncoding"],[3,"AcceptLanguage"],[3,"AcceptRanges"],[4,"RangeUnit"],[3,"Allow"],[3,"Authorization"],[3,"Basic"],[3,"CacheControl"],[4,"CacheDirective"],[3,"Cookie"],[4,"ConnectionOption"],[3,"Connection"],[3,"ContentEncoding"],[3,"ContentLanguage"],[3,"ContentLength"],[3,"ContentType"],[3,"Mime"],[4,"TopLevel"],[4,"SubLevel"],[4,"Attr"],[4,"Value"],[3,"Date"],[3,"ETag"],[3,"EntityTag"],[4,"Expect"],[3,"Expires"],[3,"From"],[3,"Host"],[4,"IfMatch"],[3,"IfModifiedSince"],[4,"IfNoneMatch"],[4,"IfRange"],[3,"IfUnmodifiedSince"],[3,"LastModified"],[3,"Location"],[4,"Pragma"],[3,"Referer"],[3,"Server"],[3,"SetCookie"],[3,"TransferEncoding"],[3,"Upgrade"],[4,"ProtocolName"],[3,"Protocol"],[3,"UserAgent"],[4,"Vary"],[3,"OptCell"],[4,"Option"],[3,"Wrapping"],[3,"Big32x36"],[3,"Big8x3"],[3,"Decoded"],[4,"FullDecoded"],[3,"Fp"],[4,"Part"],[3,"Formatted"],[4,"Sign"],[4,"FpCategory"],[3,"ParseIntError"],[4,"IntErrorKind"],[3,"ParseFloatError"],[4,"FloatErrorKind"],[3,"NonZero"],[3,"Unique"],[3,"NoCopy"],[3,"PhantomData"],[3,"RangeFull"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"BorrowRefMut"],[3,"RefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[4,"EscapeUnicodeState"],[3,"EscapeDefault"],[4,"EscapeDefaultState"],[3,"Rev"],[4,"MinMaxResult"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"Unfold"],[3,"StepBy"],[3,"RangeInclusive"],[3,"Repeat"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Slice"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"i8x16"],[3,"i16x8"],[3,"i32x4"],[3,"i64x2"],[3,"u8x16"],[3,"u16x8"],[3,"u32x4"],[3,"u64x2"],[3,"f32x4"],[3,"f64x2"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"GenericSplitN"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"BytesDeref"],[3,"SplitInternal"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitNInternal"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndicesInternal"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"MatchesInternal"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"LinesAnyMap"],[3,"TwoWaySearcher"],[4,"OldSearcher"],[3,"OldMatchIndices"],[3,"CharRange"],[3,"SipHasher"],[3,"Binary"],[3,"Octal"],[3,"Decimal"],[3,"LowerHex"],[3,"UpperHex"],[3,"Radix"],[3,"RadixFmt"],[3,"PadAdapter"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugInner"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Error"],[3,"ArgumentV1"],[4,"FlagV1"],[3,"Arguments"],[3,"Formatter"],[4,"PtrMap"],[3,"PtrMapCell"],[3,"Item"],[4,"Charset"],[4,"Encoding"],[3,"HttpDate"],[3,"Language"],[3,"Quality"],[3,"QualityItem"],[3,"HeadersItems"],[3,"HeaderView"],[3,"HeaderFormatter"],[3,"CowStr"],[4,"HttpReader"],[4,"HttpWriter"],[3,"Incoming"],[3,"RawStatus"],[3,"NetworkConnections"],[8,"NetworkStream"],[4,"HttpListener"],[3,"CloneTcpStream"],[4,"HttpStream"],[3,"HttpConnector"],[3,"HttpRequest"],[3,"HttpResponse"],[4,"Body"],[3,"ListenerPool"],[3,"Sentinel"],[4,"SslConfig"],[3,"Server"],[3,"Listening"],[4,"Status"],[4,"StatusClass"],[4,"RequestUri"],[4,"HttpVersion"],[8,"Scheme"],[8,"Pluggable"],[8,"Set"],[3,"Url"],[3,"Iron"],[4,"Protocol"],[3,"IronError"],[8,"Key"],[8,"Handler"],[8,"BeforeMiddleware"],[8,"AfterMiddleware"],[8,"AroundMiddleware"],[3,"Chain"],[3,"Response"],[3,"Request"],[3,"Body"],[3,"Types"],[3,"File"],[3,"PathBuf"],[3,"Header"],[3,"Redirect"]]};
searchIndex['mount'] = {"items":[[0,"","mount","`Mount` provides mounting middleware for the Iron framework."],[3,"Mount","","`Mount` is a simple mounting middleware."],[3,"OriginalUrl","","Exposes the original, unmodified path to be stored in `Request::extensions`."],[11,"new","","Creates a new instance of `Mount`.",0],[11,"mount","","Mounts a given `Handler` onto a route.",0],[11,"handle","","",0]],"paths":[[3,"Mount"]]};
searchIndex['persistent'] = {"items":[[0,"","persistent","A set of middleware for sharing data between requests in the Iron\nframework."],[3,"State","","Middleware for data that persists between requests with read and write capabilities."],[3,"Read","","Middleware for data that persists between Requests with read-only capabilities."],[3,"Write","","Middleware for data that persists between Requests for data which mostly\nneeds to be written instead of read."],[4,"PersistentError","","The type that can be returned by `eval` to indicate error."],[13,"NotFound","","The value was not found.",0],[11,"clone","","",0],[11,"clone","","",1],[11,"clone","","",2],[11,"clone","","",3],[6,"Value","",""],[6,"Value","",""],[6,"Value","",""],[6,"Error","",""],[11,"eval","","",2],[6,"Error","",""],[11,"eval","","",1],[6,"Error","",""],[11,"eval","","",3],[11,"before","","",2],[11,"before","","",1],[11,"before","","",3],[11,"after","","",2],[11,"after","","",1],[11,"after","","",3],[11,"both","","Construct a new pair of `State` that can be passed directly to `Chain::link`.",2],[11,"one","","Construct a new `State` that can be passed directly to\n`Chain::link_before` or `Chain::link_after`.",2],[11,"both","","Construct a new pair of `Read` that can be passed directly to `Chain::link`.",1],[11,"one","","Construct a new `Read` that can be passed directly to\n`Chain::link_before` or `Chain::link_after`.",1],[11,"both","","Construct a new pair of `Write` that can be passed directly to `Chain::link`.",3],[11,"one","","Construct a new `Write` that can be passed directly to\n`Chain::link_before` or `Chain::link_after`.",3]],"paths":[[4,"PersistentError"],[3,"Read"],[3,"State"],[3,"Write"]]};
searchIndex['router'] = {"items":[[0,"","router","`Router` provides fast and flexible routing for Iron."],[11,"new","route-recognizer","",0],[11,"insert","","",0],[11,"find","","",0],[11,"clone","route-recognizer::nfa","",1],[11,"eq","","",1],[11,"ne","","",1],[11,"new","","",1],[11,"insert","","",1],[11,"contains","","",1],[11,"clone","","",2],[11,"eq","","",2],[11,"ne","","",2],[11,"any","","",2],[11,"valid","","",2],[11,"invalid","","",2],[11,"valid_char","","",2],[11,"invalid_char","","",2],[11,"matches","","",2],[11,"clone","","",3],[11,"new","","",3],[11,"start_capture","","",3],[11,"end_capture","","",3],[11,"extract","","",3],[11,"clone","","",4],[11,"eq","","",4],[11,"new","","",4],[11,"new","","",5],[11,"clone","","",6],[11,"new","","",6],[11,"process","","",6],[11,"get","","",6],[11,"get_mut","","",6],[11,"put","","",6],[11,"put_state","","",6],[11,"acceptance","","",6],[11,"start_capture","","",6],[11,"end_capture","","",6],[11,"metadata","","",6],[11,"clone","route-recognizer","",7],[11,"new","","",7],[11,"cmp","","",7],[11,"partial_cmp","","",7],[11,"eq","","",7],[11,"fmt","","",0],[11,"clone","","",0],[11,"eq","","",0],[11,"ne","","",0],[6,"Output","router",""],[11,"index","route-recognizer","",0],[11,"new","","",8],[11,"clone","","",9],[11,"new","","",9],[11,"add","","",9],[11,"recognize","","",9],[3,"Params","router",""],[3,"Router","","`Router` provides an interface for creating complex routes as middleware\nfor the Iron framework."],[11,"new","","Construct a new, empty `Router`.",10],[11,"route","","Add a new route to a `Router`, matching both a method and glob pattern.",10],[11,"get","","Like route, but specialized to the `Get` method.",10],[11,"post","","Like route, but specialized to the `Post` method.",10],[11,"put","","Like route, but specialized to the `Put` method.",10],[11,"delete","","Like route, but specialized to the `Delete` method.",10],[11,"head","","Like route, but specialized to the `Head` method.",10],[11,"patch","","Like route, but specialized to the `Patch` method.",10],[11,"options","","Like route, but specialized to the `Options` method.",10],[11,"handle","","",10]],"paths":[[3,"Params"],[3,"CharSet"],[4,"CharacterClass"],[3,"Thread"],[3,"State"],[3,"Match"],[3,"NFA"],[3,"Metadata"],[3,"Match"],[3,"Router"],[3,"Router"]]};
searchIndex['bodyparser'] = {"items":[[0,"","bodyparser","Body Parser Plugin for Iron"],[3,"BodyError","",""],[12,"detail","","",0],[12,"cause","","",0],[3,"LimitReader","","[Original impl](https://github.com/rust-lang/rust/blob/17bc7d8d5be3be9674d702ccad2fa88c487d23b0/src/libstd/old_io/util.rs#L20)"],[3,"MaxBodyLength","","Use this key to modify the default body limit."],[3,"Raw","","Raw is a plugin to read a request body into UTF-8 String.\nDoesn't read `multipart/form-data`."],[3,"Json","","Json is a plugin to parse a request body into JSON.\nUses Raw plugin to parse the body with limit."],[3,"Struct","","Struct is a plugin to parse a request body into a struct.\nUses Raw plugin to parse the body with limit."],[4,"BodyErrorCause","",""],[13,"Utf8Error","","",1],[13,"IoError","","",1],[13,"ParserError","","",1],[13,"DecoderError","","",1],[11,"clone","","",1],[11,"fmt","","",1],[11,"clone","","",0],[11,"fmt","","",0],[11,"description","","",0],[11,"fmt","","",0],[11,"fmt","","",2],[11,"new","","",2],[11,"into_inner","","",2],[11,"limit","","",2],[11,"read","","",2],[6,"Value","",""],[6,"Value","",""],[6,"Error","",""],[11,"eval","","",3],[11,"clone","","",4],[6,"Value","",""],[6,"Error","",""],[11,"eval","","",4],[11,"clone","","",5],[6,"Value","",""],[6,"Error","",""],[11,"eval","","",5]],"paths":[[3,"BodyError"],[4,"BodyErrorCause"],[3,"LimitReader"],[3,"Raw"],[3,"Json"],[3,"Struct"]]};
searchIndex['static'] = {"items":[[0,"","static","Static file-serving handler."],[3,"Static","","The static file-serving `Handler`."],[12,"root","","The path this handler is serving files from.",0],[3,"Cache","","A modifier for `Static` to specify a response's `cache-control`."],[12,"duration","","The length of time the file should be cached for.",1],[11,"clone","","",0],[11,"new","","Create a new instance of `Static` with a given root path.",0],[11,"cache","","Specify the response's `cache-control` header with a given duration. Internally, this is\na helper function to set a `Cache` on an instance of `Static`.",0],[11,"handle","","",0],[11,"clone","","",1],[11,"new","","Create a new instance of `Cache` with a given duration.",1],[11,"modify","","",1]],"paths":[[3,"Static"],[3,"Cache"]]};
searchIndex['urlencoded'] = {"items":[[0,"","urlencoded","URL Encoded Plugin for Iron."],[3,"UrlEncodedQuery","","Plugin for `Request` that extracts URL encoded data from the URL query string."],[3,"UrlEncodedBody","","Plugin for `Request` that extracts URL encoded data from the request body."],[4,"UrlDecodingError","","An error representing the two possible errors that can occur during URL decoding."],[13,"BodyError","","An error parsing the request body",0],[13,"EmptyQuery","","An empty query string, either in body or url query",0],[6,"QueryMap","","Hashmap mapping strings to vectors of strings."],[6,"QueryResult","","Result type for decoding query parameters."],[11,"fmt","","",0],[11,"clone","","",0],[11,"fmt","","",0],[11,"description","","",0],[11,"cause","","",0],[6,"Value","",""],[6,"Value","",""],[6,"Error","",""],[11,"eval","","",1],[6,"Error","",""],[11,"eval","","",2]],"paths":[[4,"UrlDecodingError"],[3,"UrlEncodedQuery"],[3,"UrlEncodedBody"]]};
initSearch(searchIndex);
